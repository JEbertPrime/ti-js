{"version":3,"sources":["webpack://ti/webpack/bootstrap","webpack://ti/./src/types.js","webpack://ti/./src/tibasic.pegjs","webpack://ti/./src/daemon.js","webpack://ti/./src/io.js","webpack://ti/./src/core.js","webpack://ti/./src/runtime.js","webpack://ti/./src/parser.js","webpack://ti/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NUMBER","peg$SyntaxError","message","expected","found","location","this","Error","captureStackTrace","child","parent","C","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","any","end","other","description","not","describeExpectation","hex","ch","charCodeAt","toString","toUpperCase","replace","type","j","descriptions","sort","length","slice","join","describeExpected","describeFound","SyntaxError","parse","input","options","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$e0","peg$classExpectation","peg$e1","peg$e2","peg$literalExpectation","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$f0","substring","peg$savedPos","peg$currPos","peg$f1","mem_vars","peg$f2","peg$f3","integer","fraction","exponent","types","joinNonEmpty","peg$f4","peg$f5","peg$f6","peg$f7","chars","lib_str","paren","quote","peg$f8","mem_ans","peg$f9","expression","peg$f10","lib_negative","peg$f11","operator","exp","peg$f12","lib_multiply","peg$f13","lib_divide","peg$f14","head","tail","reduce","result","element","left","right","buildBinaryExpression","peg$f15","lib_testEquals","peg$f16","lib_testNotEquals","peg$f17","lib_testGreaterEquals","peg$f18","lib_testGreater","peg$f19","lib_testLessEquals","peg$f20","lib_testLess","peg$f21","buildType","buildFunc","peg$f22","lib_assign","peg$f23","condition","peg$f24","peg$f25","peg$f26","variable","start","step","lib_add","peg$f27","peg$f28","peg$f29","peg$f30","peg$f31","peg$f32","peg$f33","lib_num_one","peg$f34","lib_minus","peg$f35","peg$f36","peg$f37","peg$f38","peg$f39","peg$f40","peg$f41","peg$f42","peg$f43","lib_prompt","io","ctl","peg$f44","val","peg$posDetailsCache","line","column","peg$expected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","details","peg$VALIDFILENAME","filename","peg$computeLocation","startPos","endPos","loc","startPosDetails","offset","endPosDetails","peg$expect","top","variants","push","peg$buildStructuredError","s0","s1","s2","s3","peg$parseTestExpression","rule$expects","substr","peg$parseVariable","peg$parseAssignment","peg$parseIfStatement","peg$parseThen","peg$parseElse","s4","s5","s6","s7","s8","peg$parseOptionalEndParen","peg$parseFor","peg$parseWhile","peg$parseRepeat","peg$parseEnd","peg$parsePause","peg$parseLocation","peg$parseLabel","peg$parseGoto","peg$parseIncrementSkip","peg$parseDecrementSkip","peg$parseMenu","peg$parseProgram","peg$parseReturn","peg$parseStop","peg$parseDelVar","peg$parseGraphStyle","peg$parseOpenLib","peg$parseExecLib","peg$parseCtlStatement","peg$parsePrompt","peg$parseDisplay","peg$parseIoStatement","peg$parseValueStatement","peg$parseStatement","test","charAt","peg$parseDigit","peg$parseExponentPart","peg$parseExponentIndicator","peg$parseSignedInteger","peg$parseLiteral","peg$parseNumericLiteral","peg$parseAnswer","peg$parseStringLiteral","peg$parseUnaryExpression","peg$parsePrimaryExpression","peg$parseUnaryOperator","peg$parseMultiplicativeOperator","peg$parseMultiplicativeExpression","peg$parseAdditiveOperator","peg$parseAdditiveExpression","peg$parseTestOperator","lib_runtime","lib_num","bus","mem","arr","str","args","shouldReturn","failPos","peg$buildError","messageName","exceptionName","minimumDelay","tasks","exceptions","running","nextTaskId","maxExceptions","daemonEventTarget","document","createTextNode","daemonEvent","event","Event","dispatchEvent","daemonStartIfNeeded","window","postMessage","daemonCreateTask","func","delay","runOnce","taskId","Math","max","lastRun","stopOnException","suspended","daemonDeleteTask","setTinyInterval","clearTinyInterval","tinyIntervalID","resumeTinyInterval","console","log","daemonResumeTask","setTinyTimeout","clearTinyTimeout","tinyTimeoutID","addEventListener","source","data","stopPropagation","time","performance","now","taskIds","keys","runningTaskCount","suspendedTaskCount","forEach","task","runs","timeSinceRun","floor","ex","FAULTED","DONE","SUSPEND","YIELD","pop","removeEventListener","error","stderr","code","liberr","default_io","stdout","x","onStdin","callback","setTimeout","prompt","val_io","elem","parseOption","option","defaultValue","includeErrors","includeLineNumbers","includeSource","includeLibErrors","appendToOutput","newline","appendToError","index","on","e","keyCode","off","default_mem","get_mem","new_mem","hideSource","new_value","num","new_var","vars","A","B","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","THETA","ans","prgms","isTruthy","prgmNew","program","prgmExec","find","run","lines","sourceLines","split","frequencyMs","state","resume","debug","searchLabel","ifResult","incrementDecrementResult","maximumLines","linesRun","blockStack","falsyStackHeight","falsyBlockPreviousIf","status","runLoop","getStatus","isActive","stop","runLine","ifResultFalse","statement"],"mappings":"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","file":"ti.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export const NUMBER = 'number'\r\n","// Generated by PEG.js v0.11.0-master.0b102d2, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \"&theta\";\n  var peg$c1 = \".\";\n  var peg$c2 = \"&E\";\n  var peg$c3 = \"\\\"\";\n  var peg$c4 = \"Ans\";\n  var peg$c5 = \")\";\n  var peg$c6 = \"(\";\n  var peg$c7 = \"-\";\n  var peg$c8 = \"*\";\n  var peg$c9 = \"/\";\n  var peg$c10 = \"+\";\n  var peg$c11 = \"=\";\n  var peg$c12 = \"!=\";\n  var peg$c13 = \">=\";\n  var peg$c14 = \">\";\n  var peg$c15 = \"<=\";\n  var peg$c16 = \"<\";\n  var peg$c17 = \"->\";\n  var peg$c18 = \"If \";\n  var peg$c19 = \"Then\";\n  var peg$c20 = \"Else\";\n  var peg$c21 = \"For(\";\n  var peg$c22 = \",\";\n  var peg$c23 = \"While \";\n  var peg$c24 = \"Repeat \";\n  var peg$c25 = \"End\";\n  var peg$c26 = \"Pause\";\n  var peg$c27 = \"Lbl \";\n  var peg$c28 = \"Goto \";\n  var peg$c29 = \"IS>(\";\n  var peg$c30 = \"DS<(\";\n  var peg$c31 = \"Menu(\";\n  var peg$c32 = \"prgm\";\n  var peg$c33 = \"Return\";\n  var peg$c34 = \"Stop\";\n  var peg$c35 = \"DelVar\";\n  var peg$c36 = \"GraphStyle(\";\n  var peg$c37 = \"OpenLib(\";\n  var peg$c38 = \"ExecLib(\";\n  var peg$c39 = \"Prompt \";\n  var peg$c40 = \"Disp \";\n\n  var peg$r0 = /^[A-Z0-9]/;\n  var peg$r1 = /^[A-Z]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[+\\-]/;\n  var peg$r4 = /^[^\"]/;\n\n  var peg$e0 = peg$classExpectation([[\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e1 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e2 = peg$literalExpectation(\"&theta\", false);\n  var peg$e3 = peg$literalExpectation(\".\", false);\n  var peg$e4 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e5 = peg$literalExpectation(\"&E\", false);\n  var peg$e6 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e7 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e8 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e9 = peg$literalExpectation(\"Ans\", false);\n  var peg$e10 = peg$literalExpectation(\")\", false);\n  var peg$e11 = peg$literalExpectation(\"(\", false);\n  var peg$e12 = peg$literalExpectation(\"-\", false);\n  var peg$e13 = peg$literalExpectation(\"*\", false);\n  var peg$e14 = peg$literalExpectation(\"/\", false);\n  var peg$e15 = peg$literalExpectation(\"+\", false);\n  var peg$e16 = peg$literalExpectation(\"=\", false);\n  var peg$e17 = peg$literalExpectation(\"!=\", false);\n  var peg$e18 = peg$literalExpectation(\">=\", false);\n  var peg$e19 = peg$literalExpectation(\">\", false);\n  var peg$e20 = peg$literalExpectation(\"<=\", false);\n  var peg$e21 = peg$literalExpectation(\"<\", false);\n  var peg$e22 = peg$literalExpectation(\"->\", false);\n  var peg$e23 = peg$literalExpectation(\"If \", false);\n  var peg$e24 = peg$literalExpectation(\"Then\", false);\n  var peg$e25 = peg$literalExpectation(\"Else\", false);\n  var peg$e26 = peg$literalExpectation(\"For(\", false);\n  var peg$e27 = peg$literalExpectation(\",\", false);\n  var peg$e28 = peg$literalExpectation(\"While \", false);\n  var peg$e29 = peg$literalExpectation(\"Repeat \", false);\n  var peg$e30 = peg$literalExpectation(\"End\", false);\n  var peg$e31 = peg$literalExpectation(\"Pause\", false);\n  var peg$e32 = peg$literalExpectation(\"Lbl \", false);\n  var peg$e33 = peg$literalExpectation(\"Goto \", false);\n  var peg$e34 = peg$literalExpectation(\"IS>(\", false);\n  var peg$e35 = peg$literalExpectation(\"DS<(\", false);\n  var peg$e36 = peg$literalExpectation(\"Menu(\", false);\n  var peg$e37 = peg$literalExpectation(\"prgm\", false);\n  var peg$e38 = peg$literalExpectation(\"Return\", false);\n  var peg$e39 = peg$literalExpectation(\"Stop\", false);\n  var peg$e40 = peg$literalExpectation(\"DelVar\", false);\n  var peg$e41 = peg$literalExpectation(\"GraphStyle(\", false);\n  var peg$e42 = peg$literalExpectation(\"OpenLib(\", false);\n  var peg$e43 = peg$literalExpectation(\"ExecLib(\", false);\n  var peg$e44 = peg$literalExpectation(\"Prompt \", false);\n  var peg$e45 = peg$literalExpectation(\"Disp \", false);\n\n  var peg$f0 = function() { return text(); };\n  var peg$f1 = function(name) { return mem_vars + name; };\n  var peg$f2 = function() { return mem_vars + \"THETA\"; };\n  var peg$f3 = function(integer, fraction, exponent) { \r\n          return {\r\n            type: types.NUMBER,\r\n            integer: join(integer),\r\n            fraction: joinNonEmpty(fraction),\r\n            exponent: join(exponent)\r\n          }\r\n      };\n  var peg$f4 = function(fraction, exponent) { \r\n        return {\r\n            type: types.NUMBER,\r\n            fraction: join(fraction),\r\n            exponent: join(exponent)\r\n          }\r\n      };\n  var peg$f5 = function(integer, exponent) { \r\n        return {\r\n            type: types.NUMBER,\r\n            integer: join(integer),\r\n            exponent: join(exponent)\r\n          }\r\n      };\n  var peg$f6 = function(exponent) { return exponent; };\n  var peg$f7 = function(chars) { return lib_str + paren(quote(chars)); };\n  var peg$f8 = function() { return mem_ans; };\n  var peg$f9 = function(expression) { return expression; };\n  var peg$f10 = function() { return lib_negative; };\n  var peg$f11 = function(operator, exp) { return operator + paren(exp); };\n  var peg$f12 = function() { return lib_multiply; };\n  var peg$f13 = function() { return lib_divide; };\n  var peg$f14 = function(head, tail) { return buildBinaryExpression(head, tail); };\n  var peg$f15 = function() { return lib_testEquals; };\n  var peg$f16 = function() { return lib_testNotEquals; };\n  var peg$f17 = function() { return lib_testGreaterEquals; };\n  var peg$f18 = function() { return lib_testGreater; };\n  var peg$f19 = function() { return lib_testLessEquals; };\n  var peg$f20 = function() { return lib_testLess; };\n  var peg$f21 = function(value) { return buildType(\"ValueStatement\", \"statement\", buildFunc(value, true)) };\n  var peg$f22 = function(left, right) { return buildType(\"Assignment\", \"statement\", buildFunc(lib_assign + paren(right, left))) };\n  var peg$f23 = function(condition) { return buildType(\"IfStatement\", \"condition\", buildFunc(condition, true)) };\n  var peg$f24 = function() { return buildType(\"ThenStatement\") };\n  var peg$f25 = function() { return buildType(\"ElseStatement\") };\n  var peg$f26 = function(variable, start, end, step) {   \r\n          return buildType(\r\n              \"ForLoop\", \r\n              \"init\",      buildFunc(lib_assign + paren(variable, start)),\r\n              \"condition\", buildFunc(lib_testLessEquals + paren(variable, end), true),\r\n              \"step\",      buildFunc(lib_assign + paren(variable, lib_add + paren(variable, step)))\r\n          )\r\n      };\n  var peg$f27 = function(condition) { return buildType(\"WhileLoop\", \"condition\", buildFunc(condition, true)) };\n  var peg$f28 = function(condition) { return buildType(\"RepeatLoop\", \"condition\", buildFunc(condition, true)) };\n  var peg$f29 = function() { return buildType(\"EndStatement\") };\n  var peg$f30 = function() { return buildType(\"PauseStatement\") };\n  var peg$f31 = function(location) { return buildType(\"LabelStatement\", \"label\", quote(location)) };\n  var peg$f32 = function(location) { return buildType(\"GotoStatement\", \"label\", quote(location)) };\n  var peg$f33 = function(variable, end) { \r\n          return buildType(\r\n              \"IncrementSkip\", \r\n              \"increment\", buildFunc(lib_assign + paren(variable, lib_add + paren(variable, lib_num_one))),\r\n              \"condition\", buildFunc(lib_testLessEquals + paren(variable, end), true),\r\n          )\r\n      };\n  var peg$f34 = function(variable, end) { \r\n          return buildType(\r\n              \"DecrementSkip\", \r\n              \"decrement\", buildFunc(lib_assign + paren(variable, lib_minus + paren(variable, lib_num_one))),\r\n              \"condition\", buildFunc(lib_testGreaterEquals + paren(variable, end), true),\r\n          )\r\n      };\n  var peg$f35 = function() { return buildType(\"MenuStatement\") };\n  var peg$f36 = function() { return buildType(\"ProgramStatement\") };\n  var peg$f37 = function() { return buildType(\"ReturnStatement\") };\n  var peg$f38 = function() { return buildType(\"StopStatement\") };\n  var peg$f39 = function() { return buildType(\"DelVarStatement\") };\n  var peg$f40 = function() { return buildType(\"GraphStyleStatement\") };\n  var peg$f41 = function() { return buildType(\"OpenLibStatement\") };\n  var peg$f42 = function() { return buildType(\"ExecLibStatement\") };\n  var peg$f43 = function(variable) { return buildType(\"IoStatement\", \"statement\", buildFunc(lib_prompt + paren(io, ctl, variable)), \"action\", quote(\"suspend\")) };\n  var peg$f44 = function(val) {\r\n        return { type: \"Display\", value: val }\r\n      };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parseStart() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStatement();\n\n    return s0;\n  }\n\n  function peg$parseLocation() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e0);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e0);\n      if (peg$r0.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f0();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e1);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f1(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e2);\n      if (input.substr(peg$currPos, 6) === peg$c0) {\n        s1 = peg$c0;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f2();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericLiteral() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseDigit();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDigit();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e3);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c1;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseDigit();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseDigit();\n        }\n        s4 = peg$parseExponentPart();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f3(s1, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e3);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c1;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseDigit();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseDigit();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExponentPart();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f4(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parseDigit();\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parseDigit();\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseExponentPart();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f5(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e4);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentPart() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponentIndicator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSignedInteger();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f6(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentIndicator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e5);\n    if (input.substr(peg$currPos, 2) === peg$c2) {\n      s0 = peg$c2;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSignedInteger() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = [];\n    s3 = peg$parseDigit();\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseDigit();\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = [s1, s2];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e7);\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      rule$expects(peg$e8);\n      if (peg$r4.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        rule$expects(peg$e8);\n        if (peg$r4.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n      }\n      rule$expects(peg$e7);\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c3;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f7(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnswer() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e9);\n    if (input.substr(peg$currPos, 3) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f8();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOptionalEndParen() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e10);\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLiteral() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseNumericLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAnswer();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseVariable();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseStringLiteral();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrimaryExpression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e11);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c6;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTestExpression();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e10);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c5;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f9(s2);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryOperator() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e12);\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s1 = peg$c7;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f10();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parsePrimaryExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseUnaryExpression();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f11(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeOperator() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e13);\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f12();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e14);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c9;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f13();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseUnaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseMultiplicativeOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseUnaryExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseMultiplicativeOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f14(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e15);\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c10;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e12);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c7;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseAdditiveOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseAdditiveOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f14(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestOperator() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e16);\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f15();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e17);\n      if (input.substr(peg$currPos, 2) === peg$c12) {\n        s1 = peg$c12;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f16();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e18);\n        if (input.substr(peg$currPos, 2) === peg$c13) {\n          s1 = peg$c13;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$f17();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          rule$expects(peg$e19);\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s1 = peg$c14;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$f18();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            rule$expects(peg$e20);\n            if (input.substr(peg$currPos, 2) === peg$c15) {\n              s1 = peg$c15;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$f19();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              rule$expects(peg$e21);\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s1 = peg$c16;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$f20();\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditiveExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseTestOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAdditiveExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseTestOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAdditiveExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f14(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseValueStatement() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f21(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAssignment() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e22);\n      if (input.substr(peg$currPos, 2) === peg$c17) {\n        s2 = peg$c17;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseVariable();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f22(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfStatement() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e23);\n    if (input.substr(peg$currPos, 3) === peg$c18) {\n      s1 = peg$c18;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f23(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThen() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e24);\n    if (input.substr(peg$currPos, 4) === peg$c19) {\n      s1 = peg$c19;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f24();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e25);\n    if (input.substr(peg$currPos, 4) === peg$c20) {\n      s1 = peg$c20;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f25();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e26);\n    if (input.substr(peg$currPos, 4) === peg$c21) {\n      s1 = peg$c21;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c22;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseTestExpression();\n          if (s4 !== peg$FAILED) {\n            rule$expects(peg$e27);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c22;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseTestExpression();\n              if (s6 !== peg$FAILED) {\n                rule$expects(peg$e27);\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c22;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseTestExpression();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseOptionalEndParen();\n                    peg$savedPos = s0;\n                    s0 = peg$f26(s2, s4, s6, s8);\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e28);\n    if (input.substr(peg$currPos, 6) === peg$c23) {\n      s1 = peg$c23;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f27(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRepeat() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e29);\n    if (input.substr(peg$currPos, 7) === peg$c24) {\n      s1 = peg$c24;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f28(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnd() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e30);\n    if (input.substr(peg$currPos, 3) === peg$c25) {\n      s1 = peg$c25;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f29();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsePause() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e31);\n    if (input.substr(peg$currPos, 5) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f30();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLabel() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e32);\n    if (input.substr(peg$currPos, 4) === peg$c27) {\n      s1 = peg$c27;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f31(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGoto() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e33);\n    if (input.substr(peg$currPos, 5) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f32(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIncrementSkip() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e34);\n    if (input.substr(peg$currPos, 4) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c22;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseTestExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseOptionalEndParen();\n            peg$savedPos = s0;\n            s0 = peg$f33(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecrementSkip() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e35);\n    if (input.substr(peg$currPos, 4) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c22;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseTestExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseOptionalEndParen();\n            peg$savedPos = s0;\n            s0 = peg$f34(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMenu() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e36);\n    if (input.substr(peg$currPos, 5) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f35();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseProgram() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e37);\n    if (input.substr(peg$currPos, 4) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f36();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e38);\n    if (input.substr(peg$currPos, 6) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f37();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStop() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e39);\n    if (input.substr(peg$currPos, 4) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f38();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDelVar() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e40);\n    if (input.substr(peg$currPos, 6) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f39();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGraphStyle() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e41);\n    if (input.substr(peg$currPos, 11) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 11;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f40();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOpenLib() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e42);\n    if (input.substr(peg$currPos, 8) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f41();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseExecLib() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e43);\n    if (input.substr(peg$currPos, 8) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f42();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCtlStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseIfStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseThen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseElse();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseWhile();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseEnd();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsePause();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseLabel();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGoto();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseIncrementSkip();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseDecrementSkip();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseMenu();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseProgram();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseReturn();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseStop();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseDelVar();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseGraphStyle();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseOpenLib();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseExecLib();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrompt() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e44);\n    if (input.substr(peg$currPos, 7) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f43(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisplay() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e45);\n    if (input.substr(peg$currPos, 5) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f44(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIoStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parsePrompt();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDisplay();\n    }\n\n    return s0;\n  }\n\n  function peg$parseStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAssignment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCtlStatement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseIoStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseValueStatement();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n\r\n      var types = require ('./types.js');\r\n\r\n      var lib         = \"ti.\";\r\n      var lib_runtime = lib + \"runtime.\";\r\n\r\n      // runtime functions\r\n      var lib_assign            = lib_runtime + \"assign\";\r\n      var lib_num               = lib_runtime + \"num\";\r\n      var lib_str               = lib_runtime + \"str\";\r\n      \r\n      var lib_negative          = lib_runtime + \"negative\";\r\n      var lib_multiply          = lib_runtime + \"multiply\";\r\n      var lib_divide            = lib_runtime + \"divide\";\r\n      var lib_add               = lib_runtime + \"add\";\r\n      var lib_minus             = lib_runtime + \"minus\";\r\n      var lib_testEquals        = lib_runtime + \"testEquals\";\r\n      var lib_testNotEquals     = lib_runtime + \"testNotEquals\";\r\n      var lib_testGreater       = lib_runtime + \"testGreater\";\r\n      var lib_testGreaterEquals = lib_runtime + \"testGreaterEquals\";\r\n      var lib_testLess          = lib_runtime + \"testLess\";\r\n      var lib_testLessEquals    = lib_runtime + \"testLessEquals\";\r\n\r\n      var lib_prompt            = lib_runtime + \"prompt\";\r\n      var lib_disp              = lib_runtime + \"disp\";\r\n\r\n      var lib_num_one           = lib_num + \"('1')\";\r\n\r\n      // bus\r\n      var bus         = \"bus\";\r\n      var mem         = bus + \".mem\";\r\n      var mem_vars    = mem + \".vars.\";\r\n      var mem_ans     = mem + \".ans\";\r\n      var io          = bus + \".io\";\r\n      var ctl         = bus + \".ctl\";\r\n\r\n      function join(arr) {\r\n        if (arr === null) return undefined\r\n        return Array.isArray(arr) ? arr.join(\"\") : arr\r\n      }\r\n\r\n      function joinNonEmpty(arr) {\r\n        const result = join(arr)\r\n        return result === \"\" ? undefined : result\r\n      }\r\n\r\n      function quote(str)\r\n      {\r\n          if (str === undefined || str === null)\r\n          {\r\n              return \"''\";\r\n          }\r\n          else if (Array.isArray(str))\r\n          {\r\n              return \"'\" + str.join(\"\") + \"'\";\r\n          }\r\n          else\r\n          {\r\n              return \"'\" + str + \"'\";\r\n          }\r\n      }\r\n\r\n      function paren(...args)\r\n      {\r\n          return \"(\" + args.join(\", \") + \")\";\r\n      }\r\n\r\n      function buildFunc(str, shouldReturn=false)\r\n      {\r\n          return \"(\" + bus + \") => { \" + (shouldReturn ? \"return \" : \"\") + str + \" }\";\r\n      }\r\n\r\n      function buildType(name, ...args)\r\n      {\r\n          let result = \"{ type: '\" + name + \"'\";\r\n\r\n          let property = undefined;\r\n          for (let i = 0; i < args.length; i++)\r\n          {\r\n              if (property === undefined)\r\n              {\r\n                  property = args[i];\r\n              }\r\n              else\r\n              {\r\n                  result += \", \" + property + \": \" + args[i];\r\n                  property = undefined;\r\n              }\r\n          }\r\n\r\n          if (property !== undefined)\r\n          {\r\n              throw \"TI-Basic grammar exception: Property missing value: \" + property;\r\n          }\r\n\r\n          result += \" }\";\r\n\r\n          return result;\r\n      }\r\n\r\n      function buildBinaryExpressionOld(head, tail) \r\n      {\r\n          return tail.reduce(\r\n              (result, element) => element[0] + paren(result, element[1]),\r\n              head);\r\n      }\r\n\r\n    function buildBinaryExpression(head, tail) {\r\n      return tail.reduce(function(result, element) {\r\n        return {\r\n          type: \"binary\",\r\n          operator: element[0],\r\n          left: result,\r\n          right: element[1]\r\n        };\r\n      }, head);\r\n    }\r\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","const messageName = 'tiny-timeout-message'\r\nconst exceptionName = 'tiny-timeout-exception'\r\nconst minimumDelay = 0.001 // 1 microsecond\r\nconst tasks = {}\r\nconst exceptions = []\r\nlet running = false\r\nlet nextTaskId = 0\r\nconst maxExceptions = 1000\r\n\r\nconst daemonEventTarget = document.createTextNode(null)\r\n\r\nfunction daemonEvent (name) {\r\n  const event = new Event(name)\r\n  daemonEventTarget.dispatchEvent(event)\r\n}\r\n\r\nfunction daemonStartIfNeeded () {\r\n  if (running === false) {\r\n    running = true\r\n    daemonEvent('start')\r\n    window.postMessage(messageName, '*')\r\n  }\r\n}\r\n\r\nfunction daemonCreateTask (func, delay, runOnce) {\r\n  const taskId = nextTaskId++\r\n\r\n  tasks[taskId] = {\r\n    func: func,\r\n    delay: Math.max(delay, minimumDelay),\r\n    lastRun: undefined,\r\n    runOnce: runOnce,\r\n    stopOnException: true,\r\n    suspended: false\r\n  }\r\n\r\n  daemonStartIfNeeded()\r\n  return taskId\r\n}\r\n\r\nfunction daemonResumeTask (taskId) {\r\n  if (!(taskId in tasks)) {\r\n    console.log(tasks)\r\n    throw new Error(`Error resuming: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = false\r\n  daemonStartIfNeeded()\r\n};\r\n\r\nfunction daemonDeleteTask (taskId) {\r\n  delete tasks[taskId]\r\n};\r\n\r\nfunction daemonHandleMessage (event) {\r\n  if (!(event.source === window && event.data === messageName)) {\r\n    return\r\n  }\r\n\r\n  event.stopPropagation()\r\n\r\n  const time = performance.now()\r\n  const taskIds = Object.keys(tasks)\r\n  let runningTaskCount = 0\r\n  let suspendedTaskCount = 0\r\n\r\n  taskIds.forEach(taskId => {\r\n    const task = tasks[taskId]\r\n\r\n    let runs\r\n    if (task.suspended === true) {\r\n      runs = 0\r\n      suspendedTaskCount += 1\r\n    } else {\r\n      runningTaskCount += 1\r\n\r\n      if (task.lastRun === undefined || task.runOnce) {\r\n        runs = 1\r\n      } else {\r\n        const timeSinceRun = time - task.lastRun\r\n        runs = Math.floor(timeSinceRun / task.delay)\r\n      }\r\n    }\r\n\r\n    if (runs > 0) {\r\n      task.lastRun = time\r\n    }\r\n\r\n    for (let i = 0; i < runs; i++) {\r\n      let result\r\n\r\n      try {\r\n        result = task.func()\r\n      } catch (ex) {\r\n        result = FAULTED\r\n\r\n        if (exceptions.length < maxExceptions) {\r\n          exceptions.push(ex)\r\n          window.postMessage(exceptionName, '*')\r\n        }\r\n      }\r\n\r\n      if (result === DONE ||\r\n                task.runOnce ||\r\n                (task.stopOnException && result === FAULTED)) {\r\n        daemonDeleteTask(taskId)\r\n        runningTaskCount -= 1\r\n        break\r\n      }\r\n\r\n      if (result === SUSPEND) {\r\n        task.suspended = true\r\n        runningTaskCount -= 1\r\n        suspendedTaskCount += 1\r\n        break\r\n      }\r\n\r\n      if (result === YIELD) {\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (runningTaskCount === 0) {\r\n    running = false\r\n    if (suspendedTaskCount > 0) {\r\n      daemonEvent('suspend')\r\n    } else {\r\n      daemonEvent('stop')\r\n    }\r\n  } else {\r\n    window.postMessage(messageName, '*')\r\n  }\r\n};\r\n\r\nfunction daemonHandleException (event) {\r\n  if (!(event.source === window && event.data === exceptionName)) {\r\n    return\r\n  }\r\n\r\n  if (exceptions.length > 0) {\r\n    throw exceptions.pop()\r\n  }\r\n}\r\n\r\nwindow.addEventListener('message', daemonHandleMessage, true)\r\nwindow.addEventListener('message', daemonHandleException, true)\r\n\r\nexport function setTinyInterval (func, delay) {\r\n  daemonCreateTask(func, delay)\r\n}\r\nexport function clearTinyInterval (tinyIntervalID) {\r\n  daemonDeleteTask(tinyIntervalID)\r\n}\r\nexport function resumeTinyInterval (tinyIntervalID) {\r\n  daemonResumeTask(tinyIntervalID)\r\n}\r\n\r\nexport function setTinyTimeout (func, delay) {\r\n  daemonCreateTask(func, delay, true)\r\n}\r\nexport function clearTinyTimeout (tinyTimeoutID) {\r\n  daemonDeleteTask(tinyTimeoutID)\r\n}\r\n\r\nexport const YIELD = 'yield'\r\nexport const DONE = 'done'\r\nexport const FAULTED = 'faulted'\r\nexport const SUSPEND = 'suspend'\r\n\r\nexport const addEventListener = daemonEventTarget.addEventListener.bind(daemonEventTarget)\r\nexport const removeEventListener = daemonEventTarget.removeEventListener.bind(daemonEventTarget)\r\nexport const dispatchEvent = daemonEventTarget.dispatchEvent.bind(daemonEventTarget)\r\n","export function error (io, ex) {\r\n  if (ex.type === 'ti') {\r\n    io.stderr(`ERR:${ex.code}`, ex.source)\r\n  } else if (ex.type === 'lib') {\r\n    io.liberr(`Error: ${ex.code}`, ex.source)\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line camelcase\r\nexport const default_io = {\r\n  stdout: x => console.log(x),\r\n  stderr: (x, source) => console.log(x),\r\n  liberr: (x, source) => console.log(x),\r\n  onStdin: callback => setTimeout(() => callback(prompt('Input?')), 100)\r\n}\r\n\r\n// eslint-disable-next-line camelcase\r\nexport function val_io (elem, options = {}) {\r\n  const parseOption = (option, defaultValue) => {\r\n    return option === undefined ? defaultValue : option === true\r\n  }\r\n\r\n  const includeErrors = parseOption(options.includeErrors, true)\r\n  const includeLineNumbers = parseOption(options.includeLineNumbers, true)\r\n  const includeSource = parseOption(options.includeSource, true)\r\n  const includeLibErrors = parseOption(options.includeLibErrors, true)\r\n  const input = options.input\r\n\r\n  const appendToOutput = (x, newline = true) => setTimeout(() => {\r\n    let result = elem.val() + x\r\n    if (newline) {\r\n      result += '\\n'\r\n    }\r\n    elem.val(result)\r\n  }, 0)\r\n\r\n  const appendToError = (x, source) => {\r\n    let result = x\r\n    if (source !== undefined) {\r\n      if (source.index !== undefined && includeLineNumbers) {\r\n        result += ` on line ${source.index}`\r\n      }\r\n\r\n      if (source.line !== undefined && includeSource) {\r\n        result += ` :${source.line}`\r\n      }\r\n    }\r\n    appendToOutput(result)\r\n  }\r\n\r\n  const enterkey = 13\r\n\r\n  const onStdin = callback => {\r\n    setTimeout(() => input.val(''), 0)\r\n    input.on('keypress', e => {\r\n      if (e.keyCode === enterkey) {\r\n        input.off('keypress')\r\n        const result = input.val()\r\n        setTimeout(() => input.val(''), 0)\r\n        callback(result)\r\n      }\r\n    })\r\n  }\r\n\r\n  return {\r\n    stdout: appendToOutput,\r\n    stderr: includeErrors ? appendToError : default_io.stderr,\r\n    liberr: includeLibErrors ? appendToError : default_io.stderr,\r\n    onStdin: input !== undefined ? onStdin : default_io.onStdin\r\n  }\r\n};\r\n","/* eslint-disable camelcase */\r\nimport * as daemon from './daemon'\r\nimport * as iolib from './io'\r\nimport * as types from './types'\r\n\r\nlet default_mem\r\n\r\nfunction get_mem () {\r\n  if (default_mem === undefined) {\r\n    default_mem = new_mem()\r\n  }\r\n\r\n  return default_mem\r\n}\r\n\r\nexport function error (type, code, hideSource = false) {\r\n  return {\r\n    type: type,\r\n    code: code,\r\n    hideSource: hideSource\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line camelcase\r\nexport function new_value (num, type = 'numeric') {\r\n  return {\r\n    type: type,\r\n    value: num\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line camelcase\r\nfunction new_var (name) {\r\n  const val = new_value(0)\r\n  val.name = name\r\n  return val\r\n};\r\n\r\n// eslint-disable-next-line camelcase\r\nexport function new_mem () {\r\n  return {\r\n    vars: {\r\n      A: new_var('A'),\r\n      B: new_var('B'),\r\n      C: new_var('C'),\r\n      D: new_var('D'),\r\n      E: new_var('E'),\r\n      F: new_var('F'),\r\n      G: new_var('G'),\r\n      H: new_var('H'),\r\n      I: new_var('I'),\r\n      J: new_var('J'),\r\n      K: new_var('K'),\r\n      L: new_var('L'),\r\n      M: new_var('M'),\r\n      N: new_var('N'),\r\n      O: new_var('O'),\r\n      P: new_var('P'),\r\n      Q: new_var('Q'),\r\n      R: new_var('R'),\r\n      S: new_var('S'),\r\n      T: new_var('T'),\r\n      U: new_var('U'),\r\n      V: new_var('V'),\r\n      W: new_var('W'),\r\n      X: new_var('X'),\r\n      Y: new_var('Y'),\r\n      Z: new_var('Z'),\r\n      THETA: new_var('θ')\r\n    },\r\n    ans: new_var(),\r\n    prgms: []\r\n  }\r\n};\r\n\r\nexport function isTruthy (x) {\r\n  return x.value !== 0\r\n}\r\n\r\nexport function prgmNew (name, program, source = []) {\r\n  get_mem().prgms.push(\r\n    {\r\n      name: name,\r\n      program: program,\r\n      source: source\r\n    })\r\n}\r\n\r\nexport function prgmExec (name) {\r\n  const found = get_mem().prgms.find(e => e.name === name)\r\n\r\n  if (found === undefined) {\r\n    error('UNDEFINED')\r\n  }\r\n\r\n  run(found.program, { source: found.source })\r\n}\r\n\r\nexport function run (lines, options = {}) {\r\n  let sourceLines = []\r\n  if (options.source !== undefined) {\r\n    if (Array.isArray(options.source)) {\r\n      sourceLines = options.source\r\n    } else {\r\n      sourceLines = options.source.split(/\\r?\\n/)\r\n    }\r\n  }\r\n\r\n  let io = iolib.default_io\r\n  if (options.io !== undefined) {\r\n    io = options.io\r\n  }\r\n\r\n  let frequencyMs = 1\r\n  if (options.frequencyMs !== undefined) {\r\n    frequencyMs = options.frequencyMs\r\n  }\r\n\r\n  const state = {\r\n    bus: {\r\n      mem: new_mem(),\r\n      io: io,\r\n      ctl: {\r\n        resume: undefined,\r\n        callback: undefined\r\n      }\r\n    },\r\n\r\n    debug: options.debug === true,\r\n    sourceLines: sourceLines,\r\n\r\n    searchLabel: undefined,\r\n    ifResult: undefined,\r\n    incrementDecrementResult: undefined,\r\n\r\n    maximumLines: 50,\r\n    linesRun: 0,\r\n\r\n    blockStack: [],\r\n    falsyStackHeight: undefined,\r\n    falsyBlockPreviousIf: undefined,\r\n\r\n    i: 0,\r\n    lines: lines,\r\n\r\n    callback: options.callback,\r\n    frequencyMs: frequencyMs,\r\n\r\n    status: 'pending'\r\n  }\r\n\r\n  const taskId = daemon.setTinyInterval(() => runLoop(state), state.frequencyMs)\r\n  state.bus.ctl.resume = (callback) => {\r\n    state.bus.ctl.callback = callback\r\n    daemon.resumeTinyInterval(taskId)\r\n  }\r\n\r\n  return {\r\n    getStatus: () => state.status,\r\n    isActive: () => state.status === 'pending' || state.status === 'running',\r\n    stop: () => daemon.clearTinyInterval(taskId)\r\n  }\r\n}\r\n\r\nexport function runLoop (state) {\r\n  let result\r\n\r\n  try {\r\n    state.status = 'running'\r\n    result = runLine(state)\r\n  } catch (ex) {\r\n    state.status = 'faulted'\r\n\r\n    if (ex.type === undefined) {\r\n      throw ex\r\n    }\r\n\r\n    if (state.i < state.lines.length && ex.hideSource !== true) {\r\n      ex.source = {\r\n        index: state.i,\r\n        line: state.sourceLines === undefined ? undefined : state.sourceLines[state.i]\r\n      }\r\n    }\r\n\r\n    iolib.error(state.bus.io, ex)\r\n    result = daemon.DONE\r\n  }\r\n\r\n  if (result === daemon.DONE) {\r\n    if (state.status !== 'faulted') {\r\n      state.status = 'done'\r\n    }\r\n\r\n    if (state.callback !== undefined) {\r\n      setTimeout(state.callback, 0)\r\n    }\r\n  } else {\r\n    state.i += 1\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport function runLine (state) {\r\n  if (state.debug) {\r\n    console.log(`Line: ${state.i}, \\t\\\r\nsearchLabel: ${state.searchLabel || ''}, \\t\\\r\nifResult: ${state.ifResult || ''}, \\t\\\r\nblockStack: ${state.blockStack || ''} \\t\\\r\nfalsyStackHeight: ${state.falsyStackHeight || ''}, \\t\\\r\nfalsyBlockPreviousIf: ${state.falsyBlockPreviousIf || ''}, \\t\\\r\nsource: ${state.sourceLines[state.i] || ''}`)\r\n  }\r\n\r\n  if (state.i >= state.lines.length) {\r\n    if (state.searchLabel !== undefined) {\r\n      throw error('ti', 'LABEL')\r\n    }\r\n\r\n    if (state.debug) {\r\n      console.log(state.bus.mem)\r\n    }\r\n\r\n    return daemon.DONE\r\n  }\r\n\r\n  if (state.bus.ctl.callback !== undefined) {\r\n    state.bus.ctl.callback()\r\n    state.bus.ctl.callback = undefined\r\n  }\r\n\r\n  state.linesRun++\r\n\r\n  if (state.linesRun >= state.maximumLines) {\r\n    throw error('lib', 'maxlines')\r\n  }\r\n\r\n  const line = state.lines[state.i]\r\n  const type = line.type\r\n\r\n  // ----- scan for end -----\r\n\r\n  if (state.falsyStackHeight !== undefined) {\r\n    const lastBlockIndex = state.blockStack[state.blockStack.length - 1]\r\n    const lastBlock = state.lines[lastBlockIndex]\r\n\r\n    if (type === 'EndStatement' ||\r\n      (type === 'ElseStatement' && lastBlock.type === 'ThenStatement')) {\r\n      state.blockStack.pop()\r\n\r\n      if (state.blockStack.length < state.falsyStackHeight) {\r\n        state.falsyStackHeight = undefined\r\n      }\r\n    }\r\n\r\n    if (type === 'ForLoop' ||\r\n      type === 'RepeatLoop' ||\r\n      type === 'WhileLoop' ||\r\n      (type === 'ThenStatement' && state.falsyBlockPreviousIf === true) ||\r\n      (type === 'ElseStatement' && lastBlock.type === 'ThenStatement')) {\r\n      state.blockStack.push(state.i)\r\n    }\r\n\r\n    state.falsyBlockPreviousIf = type === 'IfStatement'\r\n    return\r\n  }\r\n\r\n  state.falsyBlockPreviousIf = undefined\r\n\r\n  // ----- search for label -----\r\n\r\n  if (state.searchLabel !== undefined) {\r\n    if (type === 'LabelStatement' && line.label === state.searchLabel) {\r\n      state.searchLabel = undefined\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  // ----- check if result -----\r\n\r\n  if (state.ifResult !== undefined) {\r\n    const ifResultFalse = state.ifResult !== true\r\n    state.ifResult = undefined\r\n\r\n    if (type === 'ThenStatement') {\r\n      state.blockStack.push(state.i)\r\n\r\n      if (ifResultFalse) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (ifResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- check incrementDecrementResult -----\r\n\r\n  if (state.incrementDecrementResult !== undefined) {\r\n    const incrementDecrementResultFalse = state.incrementDecrementResult !== true\r\n    state.incrementDecrementResult = undefined\r\n\r\n    if (incrementDecrementResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- normal execution -----\r\n\r\n  let source, sourceLine\r\n\r\n  switch (type) {\r\n    // ----- CtlStatement -----\r\n    case 'IfStatement':\r\n      state.ifResult = isTruthy(line.condition(state.bus))\r\n      break\r\n    case 'ThenStatement':\r\n      throw error('ti', 'SYNTAX')\r\n    case 'ElseStatement':\r\n      if (state.blockStack.length === 0) {\r\n        throw error('ti', 'SYNTAX')\r\n      }\r\n      if (state.lines[state.blockStack.pop()].type === 'ThenStatement') {\r\n        state.blockStack.push(state.i)\r\n        state.falsyStackHeight = state.blockStack.length\r\n      } else {\r\n        throw error('ti', 'SYNTAX')\r\n      }\r\n      break\r\n    case 'ForLoop':\r\n      line.init(state.bus)\r\n      state.blockStack.push(state.i)\r\n      if (!isTruthy(line.condition(state.bus))) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n      break\r\n    case 'WhileLoop':\r\n      state.blockStack.push(state.i)\r\n      if (!isTruthy(line.condition(state.bus))) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n      break\r\n    case 'RepeatLoop':\r\n      state.blockStack.push(state.i)\r\n      break\r\n    case 'EndStatement':\r\n      if (state.blockStack.length === 0) {\r\n        throw error('ti', 'SYNTAX')\r\n      }\r\n      source = state.blockStack.pop()\r\n      sourceLine = state.lines[source]\r\n      if (sourceLine.type === 'ForLoop' ||\r\n              sourceLine.type === 'WhileLoop' ||\r\n              sourceLine.type === 'RepeatLoop') {\r\n        if (sourceLine.type === 'ForLoop') {\r\n          sourceLine.step(state.bus)\r\n        }\r\n\r\n        if (isTruthy(sourceLine.condition(state.bus))) {\r\n          state.blockStack.push(source)\r\n          state.i = source\r\n        }\r\n      } else if (sourceLine.type === 'ThenStatement' ||\r\n                  sourceLine.type === 'ElseStatement') {\r\n        // empty\r\n      } else {\r\n        throw error('lib', `impossibleEndFrom'${sourceLine.type}`)\r\n      }\r\n      break\r\n    case 'PauseStatement':\r\n      throw error('lib', 'unimplemented')\r\n    case 'LabelStatement':\r\n      break\r\n    case 'GotoStatement':\r\n      state.searchLabel = line.label\r\n      state.i = -1\r\n      break\r\n      // TODO increment and decrement have an interaction with DelVar\r\n    case 'IncrementSkip':\r\n      line.increment(state.bus)\r\n      state.incrementDecrementResult = isTruthy(line.condition(state.bus))\r\n      break\r\n    case 'DecrementSkip':\r\n      line.decrement(state.bus)\r\n      state.incrementDecrementResult = isTruthy(line.condition(state.bus))\r\n      break\r\n      // ----- other -----\r\n    case 'Assignment':\r\n      line.statement(state.bus)\r\n      break\r\n    case 'Display':\r\n      state.bus.io.stdout(valueToString(evaluate(line.value)))\r\n      break\r\n    case 'IoStatement':\r\n      line.statement(state.bus)\r\n      if (line.action === 'suspend') {\r\n        return daemon.SUSPEND\r\n      }\r\n      break\r\n    case 'ValueStatement':\r\n      state.bus.mem.ans = line.statement(state.bus)\r\n      break\r\n    case 'SyntaxError':\r\n      throw error('ti', 'SYNTAX')\r\n    default:\r\n      throw error('lib', 'unexpected')\r\n  }\r\n}\r\n\r\nfunction evaluate (value) {\r\n  switch (value.type) {\r\n    case types.NUMBER:\r\n      return value\r\n    case 'binary':\r\n      return applyBinaryOperator(value)\r\n    default:\r\n      throw error('lib', 'unexpected')\r\n  }\r\n}\r\n\r\nfunction applyBinaryOperator (value) {\r\n  const left = evaluate(value.left)\r\n  const right = evaluate(value.right)\r\n  switch (left.type) {\r\n    case 'number':\r\n      return applyBinaryOperatorToNumber(left, right, value.operator)\r\n    default:\r\n      throw error('lib', 'unexpected')\r\n  }\r\n}\r\n\r\nfunction applyBinaryOperatorToNumber (left, right, operator) {\r\n  if (right.type !== 'number') {\r\n    throw error('ti', 'DATA TYPE')\r\n  }\r\n  const leftNumber = resolveNumber(left)\r\n  const rightNumber = resolveNumber(right)\r\n\r\n  let result\r\n  switch (operator) {\r\n    case '+': result = leftNumber + rightNumber; break\r\n    case '-': result = leftNumber - rightNumber; break\r\n    default: throw error('lib', 'unexpected')\r\n  }\r\n  return { type: 'number', float: result }\r\n}\r\n\r\nfunction resolveNumber (value) {\r\n  if (value.float !== undefined) {\r\n    return value.float\r\n  }\r\n  let str = ''\r\n  if (value.integer !== undefined) {\r\n    str += value.integer\r\n  }\r\n  if (value.fraction !== undefined) {\r\n    str += '.' + value.fraction\r\n  }\r\n  if (value.exponent !== undefined) {\r\n    str += 'e' + value.exponent\r\n  }\r\n  return parseFloat(str)\r\n}\r\n\r\nfunction valueToString (value) {\r\n  let str = ''\r\n  switch (value.type) {\r\n    case 'number':\r\n      str = resolveNumber(value).toString()\r\n      if (str.startsWith('0.')) {\r\n        str = str.substring(1)\r\n      }\r\n      break\r\n    default:\r\n      throw error('lib', 'unexpected')\r\n  }\r\n  return str\r\n}\r\n","import * as core from './core'\r\n\r\nexport function disp (io, x) {\r\n  let str = x.value.toString()\r\n  if (x.type === 'numeric' && str.startsWith('0.')) {\r\n    str = str.substring(1)\r\n  }\r\n  io.stdout(str)\r\n}\r\n\r\nexport function prompt (io, ctl, x) {\r\n  io.stdout(`${x.name}=?`, false)\r\n  io.onStdin(input => ctl.resume(() => {\r\n    if (input === null || input === undefined || input === '') {\r\n      io.stdout('')\r\n      throw core.error('ti', 'SYNTAX', true)\r\n    }\r\n\r\n    io.stdout(input)\r\n    assign(x, num(input))\r\n  }))\r\n}\r\n\r\nexport function assign (variable, value) {\r\n  if (variable.type === value.type) {\r\n    variable.value = value.value\r\n  } else if (variable.type === 'numeric') {\r\n    // do nothing\r\n  } else if (variable.type === 'string') {\r\n    throw core.error('ti', 'DATA TYPE')\r\n  } else {\r\n    throw core.error('lib', 'UnknownVariableType')\r\n  }\r\n}\r\n\r\nexport function num (integer, fraction, exponent) {\r\n  let str = ''\r\n  if (integer !== undefined) {\r\n    str += integer\r\n  }\r\n  if (fraction !== undefined) {\r\n    str += '.' + fraction\r\n  }\r\n  if (exponent !== undefined) {\r\n    str += 'e' + exponent\r\n  }\r\n  return core.new_value(parseFloat(str))\r\n};\r\n\r\nexport function str (x) { return core.new_value(x, 'string') }\r\n\r\nconst unaryOperation = (operation, supportedTypes = ['numeric']) =>\r\n  (x) => {\r\n    if (!supportedTypes.includes(x.type)) { throw core.error('ti', 'DATA TYPE') }\r\n    return core.new_value(operation(x.value), x.type)\r\n  }\r\n\r\nexport const negative = unaryOperation(x => -1 * x)\r\n\r\nconst binaryOperation = (operation, supportedTypes = ['numeric']) =>\r\n  (x, y) => {\r\n    if (x.type !== y.type || !supportedTypes.includes(x.type)) { throw core.error('ti', 'DATA TYPE') }\r\n    return core.new_value(operation(x.value, y.value), x.type)\r\n  }\r\n\r\nexport const multiply = binaryOperation((x, y) => x * y)\r\nexport const divide = binaryOperation((x, y) => x / y)\r\nexport const add = binaryOperation((x, y) => x + y, ['numeric', 'string'])\r\nexport const minus = binaryOperation((x, y) => x - y)\r\n\r\nconst testOperation = (operation, supportedTypes = ['numeric']) =>\r\n  binaryOperation((x, y) => operation(x, y) ? 1 : 0, supportedTypes)\r\n\r\nexport const testEquals = testOperation((x, y) => x === y, ['numeric', 'string'])\r\nexport const testNotEquals = testOperation((x, y) => x !== y, ['numeric', 'string'])\r\nexport const testGreater = testOperation((x, y) => x > y)\r\nexport const testGreaterEquals = testOperation((x, y) => x >= y)\r\nexport const testLess = testOperation((x, y) => x < y)\r\nexport const testLessEquals = testOperation((x, y) => x <= y)\r\n","import parser from './tibasic.pegjs'\r\n// import peg from 'pegjs'\r\n// import grammar from './tibasic.pegjs'\r\n\r\n// ----- private -----\r\n\r\n// const parser = peg.generate(grammar)\r\n\r\nfunction quote (str) {\r\n  return \"'\" + str + \"'\"\r\n}\r\n\r\nfunction buildList (lines) {\r\n  return '[\\n  ' + lines.join(',\\n  ') + '\\n]'\r\n}\r\n\r\n// ----- fetcher -----\r\n\r\nexport function download (url, callback) {\r\n  const request = new XMLHttpRequest()\r\n  request.open('GET', url, true)\r\n\r\n  request.onload = () => {\r\n    if (request.status >= 200 && request.status < 400) {\r\n      callback(request.response)\r\n    } else {\r\n      throw new Error('Failed to download: ' + request.statusText)\r\n    }\r\n  }\r\n\r\n  request.onerror = () => {\r\n    throw new Error('Failed to download.')\r\n  }\r\n\r\n  request.send()\r\n};\r\n\r\n// ----- parser -----\r\n\r\nexport function parse (source, options = {}) {\r\n  // ----- initialize -----\r\n\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const name = options.name\r\n  const includeSource = options.includeSource\r\n\r\n  if (includeSource !== undefined && name === undefined) {\r\n    throw new Error('Cannot include source without specifying name')\r\n  }\r\n\r\n  // ----- parse -----\r\n\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  const parsedLines = sourceLines.map(s => {\r\n    try {\r\n      const parsedLine = parser.parse(s)\r\n      parsedLine.source = s\r\n      return parsedLine\r\n    } catch (error) {\r\n      if (error.name === 'SyntaxError') {\r\n        return { type: 'SyntaxError' }\r\n      }\r\n\r\n      throw error\r\n    }\r\n  })\r\n\r\n  let lines = parsedLines\r\n\r\n  if (name !== undefined) {\r\n    lines = `tilib.core.prgmNew('${name}', ${lines}`\r\n\r\n    if (includeSource) {\r\n      lines += `, ${buildList(sourceLines.map(s => quote(s)))}`\r\n    }\r\n\r\n    lines += ')'\r\n  }\r\n\r\n  return lines\r\n}\r\n","import * as core from './core.js'\r\nimport * as daemon from './daemon.js'\r\nimport * as io from './io.js'\r\nimport * as runtime from './runtime.js'\r\nimport * as parser from './parser.js'\r\n\r\nexport { core, daemon, io, runtime, parser }\r\n"],"sourceRoot":""}