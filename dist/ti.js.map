{"version":3,"sources":["webpack://ti/webpack/bootstrap","webpack://ti/./src/common/types.js","webpack://ti/./src/parse/tibasic.pegjs","webpack://ti/./src/parse/pegutil.js","webpack://ti/./src/common/core.js","webpack://ti/./src/parse/parser.js","webpack://ti/./src/evaluate/operation.js","webpack://ti/./src/evaluate/expression.js","webpack://ti/./src/evaluate/assignment.js","webpack://ti/./src/evaluate/iolib.js","webpack://ti/./src/evaluate/statement.js","webpack://ti/./src/common/signal.js","webpack://ti/./src/run/daemon.js","webpack://ti/./src/run/runtime.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ti","lib","SyntaxError","NUMBER","LIST","STRING","ANS","GetKey","VARIABLE","STRINGVARIABLE","LISTVARIABLE","LISTINDEX","BINARY","UNARY","ValueStatement","AssignmentStatement","IfStatement","ThenStatement","ElseStatement","ForLoop","WhileLoop","RepeatLoop","EndStatement","PauseStatement","LabelStatement","GotoStatement","IncrementSkip","DecrementSkip","MenuStatement","ProgramStatement","ReturnStatement","StopStatement","DelVarStatement","GraphStyleStatement","OpenLibStatement","ExecLibStatement","Input","Prompt","Display","DispGraph","DispTable","Output","ClrHome","ClrTable","GetCalc","Get","Send","peg$SyntaxError","message","expected","found","location","this","Error","captureStackTrace","child","parent","C","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","any","end","other","description","not","describeExpectation","hex","ch","charCodeAt","toString","toUpperCase","replace","type","j","descriptions","sort","length","slice","join","describeExpected","describeFound","parse","input","options","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$e0","peg$e1","peg$classExpectation","peg$e2","peg$e3","peg$e4","peg$literalExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$e63","peg$f1","peg$f17","operator","argument","types","peg$f18","head","tail","util","buildImplicitBinaryExpression","peg$f19","buildBinaryExpression","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$expected","startRule","substring","ignoreCase","peg$computePosDetails","pos","details","peg$VALIDFILENAME","filename","peg$computeLocation","startPos","endPos","loc","startPosDetails","start","offset","endPosDetails","peg$expect","top","variants","push","peg$buildStructuredError","s0","s1","s2","s3","peg$parseTestExpression","rule$expects","substr","peg$parseAssignable","assignable","peg$parseAssignment","peg$parseExtraCharacters","extra","peg$parseIfStatement","peg$parseThen","peg$parseElse","s4","s5","s6","s8","peg$parseVariable","peg$parseArgumentExpression","peg$parseExtraArguments","peg$parseOptionalEndParen","variable","step","args","peg$parseFor","peg$parseWhile","peg$parseRepeat","peg$parseEnd","peg$parsePause","peg$parseLocation","peg$f30","peg$parseLabel","peg$f31","peg$parseGoto","peg$parseIncrementSkip","peg$parseDecrementSkip","s7","peg$parseStringLiteral","title","buildMenuStatement","peg$f34","peg$parseMenu","peg$parseProgramName","peg$parseProgram","peg$parseReturn","peg$parseStop","peg$parseDelVar","equation","style","peg$parseGraphStyle","peg$parseOpenLib","peg$parseExecLib","peg$parseCtlStatement","peg$parsePrefixArgumentExpression","peg$f42","peg$parseInput","peg$parsePrompt","peg$parseDisplay","peg$parseDispGraph","peg$parseDispTable","row","peg$parseOutput","peg$parseClrHome","peg$parseClrTable","portflag","peg$parseGetCalc","peg$parseGet","peg$parseSend","peg$parseIoStatement","peg$parseValueStatement","peg$parseStatement","peg$parseSourceCharacter","charAt","peg$parseAlpha","test","peg$parseAlphaNum","peg$parseDigit","peg$parseCustomListVariableIdentifier","peg$parseNumericVariable","peg$parseNumericVariableIdentifier","peg$parseStringVariable","peg$parseStringVariableIdentifier","peg$parseListVariable","peg$parseListVariableIdentifier","custom","peg$f8","peg$parseListIndex","list","index","peg$parseInteger","peg$parseExponentPart","peg$parseExponentIndicator","peg$parseSignedInteger","peg$parseNumericLiteral","integer","fraction","exponent","peg$f11","peg$f12","peg$parseCharacter","chars","peg$parseCharacterString","peg$parseAnswer","peg$parseGetKey","peg$parseTokenLiteral","peg$parseToken","peg$parseListExpression","buildList","peg$parseUnaryOperator","peg$parseTokenUnaryExpression","peg$parseTokenExpression","peg$parseUnaryExpression","peg$parseImplicitMultiplicativeExpression","peg$parseMultiplicativeOperator","peg$parseMultiplicativeExpression","peg$parseAdditiveOperator","peg$parseAdditiveExpression","peg$parseTestOperator","failPos","peg$buildError","reduce","result","element","left","right","flat","choices","option","elements","concat","error","code","hideSource","tiError","DataTypeError","UndefinedError","LabelError","ArgumentError","DimMismatchError","DivideByZeroError","InvalidDimError","DomainError","libError","UnimplementedError","newFloat","float","ONE","MINUSONE","source","sourceMap","split","parsedLine","isTruthy","assignVariable","mem","vars","assignAns","ans","binaryOperation","resolveNumber","str","parseFloat","valueToString","strict","startsWith","e","evaluate","behavior","expressionOf","resolved","unaryOf","binaryOf","applyUnaryOperation","applyBinaryOperationListAndNumber","number","applyBinaryOperation","x","y","includes","assignmentOf","stdout","newline","elem","setTimeout","val","console","log","onStdin","callback","stdin","stdinQueue","reverse","on","keyCode","off","prompt","pop","statementOf","increment","getInput","state","allowStringLiterals","io","resume","sourceLines","Length","sourceLine","ifResult","blockStack","lines","falsyStackHeight","searchLabel","incrementDecrementResult","forEach","choice","idx","digit","rows","columns","tasks","exceptions","running","nextTaskId","eventTarget","document","createTextNode","fireEvent","event","Event","dispatchEvent","startIfNeeded","window","postMessage","createTask","func","delay","runOnce","taskId","debug","Math","max","lastRun","stopOnException","suspended","suspendTask","deleteTask","resumeTinyInterval","tinyIntervalID","resumeTask","addEventListener","data","stopPropagation","time","performance","now","taskIds","keys","runningTaskCount","suspendedTaskCount","task","runs","timeSinceRun","floor","ex","removeEventListener","run","frequencyMs","resumeCallback","maximumLines","linesRun","falsyBlockPreviousIf","status","includeErrors","includeLibErrors","includeLineNumbers","includeSource","Line","lastBlockIndex","lastBlock","ifResultFalse","incrementDecrementResultFalse","runLine","runLoop","getStatus","isActive","stop"],"mappings":"mBACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,+BClFrD,s+DAKO,MAAMC,EAAK,KACLC,EAAM,MACNC,EAAc,cAIdC,EAAS,SACTC,EAAO,OACPC,EAAS,SAITC,EAAM,MACNC,EAAS,SAITC,EAAW,WACXC,EAAiB,iBACjBC,EAAe,eACfC,EAAY,YAIZC,EAAS,SACTC,EAAQ,QAIRC,EAAiB,QACjBC,EAAsB,SAItBC,EAAc,cACdC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAU,UACVC,EAAY,YACZC,EAAa,aACbC,EAAe,eACfC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAmB,mBAInBC,EAAQ,QACRC,EAAS,SACTC,EAAU,UACVC,EAAY,YACZC,EAAY,YACZC,EAAS,SACTC,EAAU,UACVC,EAAW,WACXC,EAAU,UACVC,EAAM,MACNC,EAAO,Q,6BC9DpB,SAASC,EAAgBC,EAASC,EAAUC,EAAOC,GACjDC,KAAKJ,QAAUA,EACfI,KAAKH,SAAWA,EAChBG,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,EAChBC,KAAK7E,KAAO,cAG2B,mBAA5B8E,MAAMC,mBACfD,MAAMC,kBAAkBF,KAAML,IAflC,SAAsBQ,EAAOC,GAC3B,SAASC,IAAML,KAAKM,YAAcH,EAClCE,EAAE7D,UAAY4D,EAAO5D,UACrB2D,EAAM3D,UAAY,IAAI6D,EAgBxBE,CAAaZ,EAAiBM,OAE9BN,EAAgBa,aAAe,SAASX,EAAUC,GAChD,IAAIW,EAA2B,CAC7BC,QAAS,SAASC,GAChB,MAAO,IAAOC,EAAcD,EAAYE,MAAQ,KAGlDC,MAAO,SAASH,GACd,IAAII,EAAeJ,EAAYK,MAAMC,KAAI,SAASC,GAChD,OAAOC,MAAMC,QAAQF,GACjBG,EAAYH,EAAK,IAAM,IAAMG,EAAYH,EAAK,IAC9CG,EAAYH,MAGlB,MAAO,KAAOP,EAAYW,SAAW,IAAM,IAAMP,EAAe,KAGlEQ,IAAK,WACH,MAAO,iBAGTC,IAAK,WACH,MAAO,gBAGTC,MAAO,SAASd,GACd,OAAOA,EAAYe,aAGrBC,IAAK,SAAShB,GACZ,MAAO,OAASiB,EAAoBjB,EAAYd,YAIpD,SAASgC,EAAIC,GACX,OAAOA,EAAGC,WAAW,GAAGC,SAAS,IAAIC,cAGvC,SAASrB,EAAcjE,GACrB,OAAOA,EACJuF,QAAQ,MAAO,QACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,gBAAyB,SAASJ,GAAM,MAAO,OAASD,EAAIC,MACpEI,QAAQ,yBAAyB,SAASJ,GAAM,MAAO,MAASD,EAAIC,MAGzE,SAAST,EAAY1E,GACnB,OAAOA,EACJuF,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,gBAAyB,SAASJ,GAAM,MAAO,OAASD,EAAIC,MACpEI,QAAQ,yBAAyB,SAASJ,GAAM,MAAO,MAASD,EAAIC,MAGzE,SAASF,EAAoBjB,GAC3B,OAAOF,EAAyBE,EAAYwB,MAAMxB,GAqCpD,MAAO,YAlCP,SAA0Bd,GACxB,IACIjF,EAAGwH,EADHC,EAAexC,EAASoB,IAAIW,GAKhC,GAFAS,EAAaC,OAETD,EAAaE,OAAS,EAAG,CAC3B,IAAK3H,EAAI,EAAGwH,EAAI,EAAGxH,EAAIyH,EAAaE,OAAQ3H,IACtCyH,EAAazH,EAAI,KAAOyH,EAAazH,KACvCyH,EAAaD,GAAKC,EAAazH,GAC/BwH,KAGJC,EAAaE,OAASH,EAGxB,OAAQC,EAAaE,QACnB,KAAK,EACH,OAAOF,EAAa,GAEtB,KAAK,EACH,OAAOA,EAAa,GAAK,OAASA,EAAa,GAEjD,QACE,OAAOA,EAAaG,MAAM,GAAI,GAAGC,KAAK,MAClC,QACAJ,EAAaA,EAAaE,OAAS,IAQxBG,CAAiB7C,GAAY,QAJlD,SAAuBC,GACrB,OAAOA,EAAQ,IAAOc,EAAcd,GAAS,IAAO,eAGM6C,CAAc7C,GAAS,WA+jGrFnF,EAAOD,QAAU,CACfoC,YAAa6C,EACbiD,MA9jGF,SAAmBC,EAAOC,GACxBA,OAAsBC,IAAZD,EAAwBA,EAAU,GAE5C,IAyMIE,EAzMAC,EAAa,GAEbC,EAAyB,CAAEC,MAAOC,IAClCC,EAAwBD,GA4DxBE,EAAS,SACTC,EAAS,YACTC,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAS,QAETC,EA0LK,CAAEzB,KAAM,OAzLb0B,EAASC,GAAqB,CAAC,CAAC,IAAK,OAAO,GAAO,GACnDC,EAASD,GAAqB,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,OAAO,GAAO,GAC/DE,EAASF,GAAqB,CAAC,CAAC,IAAK,OAAO,GAAO,GACnDG,EAASC,GAAuB,KAAK,GACrCC,EAASD,GAAuB,UAAU,GAC1CE,EAASF,GAAuB,OAAO,GACvCG,EAASH,GAAuB,MAAM,GACtCI,EAASR,GAAqB,CAAC,CAAC,IAAK,OAAO,GAAO,GACnDS,EAASL,GAAuB,SAAS,GACzCM,EAAUN,GAAuB,KAAK,GACtCO,EAAUX,GAAqB,CAAC,IAAK,MAAM,GAAO,GAClDY,EAAUR,GAAuB,MAAM,GACvCS,EAAUT,GAAuB,KAAK,GACtCU,EAAUd,GAAqB,CAAC,MAAO,GAAM,GAC7Ce,EAAUX,GAAuB,KAAM,GACvCY,EAAUZ,GAAuB,OAAO,GACxCa,EAAUb,GAAuB,UAAU,GAC3Cc,EAAUd,GAAuB,KAAK,GACtCe,EAAUf,GAAuB,KAAK,GACtCgB,EAAUhB,GAAuB,MAAM,GACvCiB,EAAUjB,GAAuB,KAAK,GACtCkB,EAAUlB,GAAuB,KAAK,GACtCmB,EAAUnB,GAAuB,KAAK,GACtCoB,EAAUpB,GAAuB,KAAK,GACtCqB,EAAUrB,GAAuB,KAAK,GACtCsB,EAAUtB,GAAuB,MAAM,GACvCuB,EAAUvB,GAAuB,MAAM,GACvCwB,EAAUxB,GAAuB,KAAK,GACtCyB,EAAUzB,GAAuB,MAAM,GACvC0B,EAAU1B,GAAuB,KAAK,GACtC2B,EAAU3B,GAAuB,KAAK,GACtC4B,EAAU5B,GAAuB,MAAM,GACvC6B,EAAU7B,GAAuB,OAAO,GACxC8B,EAAU9B,GAAuB,QAAQ,GACzC+B,EAAU/B,GAAuB,QAAQ,GACzCgC,EAAUhC,GAAuB,QAAQ,GACzCiC,EAAUjC,GAAuB,UAAU,GAC3CkC,EAAUlC,GAAuB,WAAW,GAC5CmC,EAAUnC,GAAuB,OAAO,GACxCoC,GAAUpC,GAAuB,SAAS,GAC1CqC,GAAUrC,GAAuB,QAAQ,GACzCsC,GAAUtC,GAAuB,SAAS,GAC1CuC,GAAUvC,GAAuB,QAAQ,GACzCwC,GAAUxC,GAAuB,QAAQ,GACzCyC,GAAUzC,GAAuB,SAAS,GAC1C0C,GAAU1C,GAAuB,QAAQ,GACzC2C,GAAU3C,GAAuB,UAAU,GAC3C4C,GAAU5C,GAAuB,QAAQ,GACzC6C,GAAU7C,GAAuB,WAAW,GAC5C8C,GAAU9C,GAAuB,eAAe,GAChD+C,GAAU/C,GAAuB,YAAY,GAC7CgD,GAAUhD,GAAuB,YAAY,GAC7CiD,GAAUjD,GAAuB,UAAU,GAC3CkD,GAAUlD,GAAuB,WAAW,GAC5CmD,GAAUnD,GAAuB,SAAS,GAC1CoD,GAAUpD,GAAuB,aAAa,GAC9CqD,GAAUrD,GAAuB,aAAa,GAC9CsD,GAAUtD,GAAuB,WAAW,GAC5CuD,GAAUvD,GAAuB,WAAW,GAC5CwD,GAAUxD,GAAuB,YAAY,GAC7CyD,GAAUzD,GAAuB,YAAY,GAC7C0D,GAAU1D,GAAuB,QAAQ,GACzC2D,GAAU3D,GAAuB,SAAS,GAG1C4D,GAAS,WAAa,OAAOjH,MAsB7BkH,GAAU,SAASC,EAAUC,GAAY,MAAO,CAAE9F,KAAM+F,GAAMzK,MAAOuK,WAAUC,aAC/EE,GAAU,SAASC,EAAMC,EAAM7G,GAAO,OAAO8G,GAAKC,8BAA8BH,EAAMC,EAAM7G,IAC5FgH,GAAU,SAASJ,EAAMC,GAAQ,OAAOC,GAAKG,sBAAsBL,EAAMC,IAmCzEK,GAAc,EACdC,GAAe,EACfC,GAAsB,CAAC,CAAEC,KAAM,EAAGC,OAAQ,IAC1CC,GAAe,GAKnB,GAAI,cAAejG,EAAS,CAC1B,KAAMA,EAAQkG,aAAa9F,GACzB,MAAM,IAAIjD,MAAM,mCAAqC6C,EAAQkG,UAAY,MAG3E3F,EAAwBH,EAAuBJ,EAAQkG,WAGzD,SAASnI,KACP,OAAOgC,EAAMoG,UAAUN,GAAcD,IAmCvC,SAASxE,GAAuBrD,EAAMqI,GACpC,MAAO,CAAE/G,KAAM,UAAWtB,KAAMA,EAAMqI,WAAYA,GAGpD,SAASpF,GAAqB9C,EAAOM,EAAU4H,GAC7C,MAAO,CAAE/G,KAAM,QAASnB,MAAOA,EAAOM,SAAUA,EAAU4H,WAAYA,GAexE,SAASC,GAAsBC,GAC7B,IACI1M,EADA2M,EAAUT,GAAoBQ,GAGlC,GAAIC,EACF,OAAOA,EAGP,IADA3M,EAAI0M,EAAM,GACFR,GAAoBlM,IAC1BA,IASF,IALA2M,EAAU,CACRR,MAFFQ,EAAUT,GAAoBlM,IAEdmM,KACdC,OAAQO,EAAQP,QAGXpM,EAAI0M,GACmB,KAAxBvG,EAAMd,WAAWrF,IACnB2M,EAAQR,OACRQ,EAAQP,OAAS,GAEjBO,EAAQP,SAGVpM,IAKF,OAFAkM,GAAoBQ,GAAOC,EAEpBA,EAIX,IAAIC,GAAgD,iBAArBxG,EAAQyG,UAAyBzG,EAAQyG,SAAShH,OAAS,EAC1F,SAASiH,GAAoBC,EAAUC,GACrC,IAAIC,EAAM,GAELL,KAAoBK,EAAIJ,SAAWzG,EAAQyG,UAEhD,IAAIK,EAAkBT,GAAsBM,GAC5CE,EAAIE,MAAQ,CACVC,OAAQL,EACRZ,KAAMe,EAAgBf,KACtBC,OAAQc,EAAgBd,QAG1B,IAAIiB,EAAgBZ,GAAsBO,GAO1C,OANAC,EAAInI,IAAM,CACRsI,OAAQJ,EACRb,KAAMkB,EAAclB,KACpBC,OAAQiB,EAAcjB,QAGjBa,EAOT,SAASK,GAAWnK,GAClB,IAAIoK,EAAMlB,GAAaA,GAAaxG,OAAS,GAEzCmG,GAAcuB,EAAIb,MAElBV,GAAcuB,EAAIb,MACpBa,EAAIb,IAAMV,GACVuB,EAAIC,SAAW,IAGjBD,EAAIC,SAASC,KAAKtK,IAuBpB,SAASuK,GAAyBvK,EAAUC,EAAOC,GACjD,OAAO,IAAIJ,EACTA,EAAgBa,aAAaX,EAAUC,GACvCD,EACAC,EACAC,GAiBJ,SAASqD,KASP,OAwoFF,WACE,IAAIiH,GAMJA,EAvrCF,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,IACL4B,EAAKG,QACMxH,IANQ,SAAUpD,GACAmK,GAAWnK,GAMtC6K,CAAa5E,GA70DH,OA80DNjD,EAAM8H,OAAOjC,GAAa,IAC5B6B,EA/0DQ,KAg1DR7B,IAAe,GAEf6B,EAAKtH,EAEHsH,IAAOtH,IACTuH,EAAKI,QACM3H,GACT0F,GAAe0B,EAntDAxO,EAotDFyO,EAptDSO,EAotDLL,EAAjBH,EAptD2C,CAAElI,KAAM+F,GAAMvK,oBAAqB9B,QAAOgP,gBA0tDvFnC,GAAc2B,EACdA,EAAKpH,KAGPyF,GAAc2B,EACdA,EAAKpH,GA/tDK,IAASpH,EAAOgP,EAkuD5B,OAAOR,EAopCFS,MACM7H,IACToH,EA9bJ,WACE,IAAIA,GAMJA,EA5tBF,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa3E,GAh3DD,QAi3DRlD,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAl3DU,MAm3DV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKE,QACMxH,IACTsH,EAAK,OAEPC,EAAKO,QACM9H,IACTuH,EAAK,MAEP7B,GAAe0B,EA5vDIxO,EA6vDN0O,EA7vDaS,EA6vDTR,EAAjBH,EA7vD0C,CAAElI,KAAM+F,GAAMtK,YAAa/B,QAAOmP,WA+vD5EtC,GAAc2B,EACdA,EAAKpH,GAhwDK,IAASpH,EAAOmP,EAmwD5B,OAAOX,EA6rBFY,MACMhI,IACToH,EA5rBJ,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa1E,GAj5DD,SAk5DRnD,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAn5DU,OAo5DV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKQ,QACM9H,IACTsH,EAAK,MAEP5B,GAAe0B,EAzxDIW,EA0xDNT,EAAbF,EA1xDmC,CAAElI,KAAM+F,GAAMrK,cAAemN,WA4xDhEtC,GAAc2B,EACdA,EAAKpH,GA7xDK,IAAS+H,EAgyDrB,OAAOX,EAiqBAa,MACMjI,IACToH,EAhqBN,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAazE,GA96DD,SA+6DRpD,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAh7DU,OAi7DV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKQ,QACM9H,IACTsH,EAAK,MAEP5B,GAAe0B,EAtzDIW,EAuzDNT,EAAbF,EAvzDmC,CAAElI,KAAM+F,GAAMpK,cAAekN,WAyzDhEtC,GAAc2B,EACdA,EAAKpH,GA1zDK,IAAS+H,EA6zDrB,OAAOX,EAqoBEc,MACMlI,IACToH,EApoBR,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAAIY,EAAIC,EAAIC,EAAQC,EAMpClB,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAaxE,GA38DD,SA48DRrD,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA78DU,OA88DV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKiB,QACMvI,IACTsH,EAAK,OAEPC,EAAKiB,QACMxI,IACTuH,EAAK,OAEPY,EAAKK,QACMxI,IACTmI,EAAK,OAEPC,EAAKI,QACMxI,IACToI,EAAK,OAEPC,EAjNJ,WACE,IAAIjB,EAAIC,EAAIC,EASZ,GAHAF,EAAK3B,GACL4B,EAAK,IACLC,EAAKkB,QACMxI,EACT,KAAOsH,IAAOtH,GACZqH,EAAGH,KAAKI,GACRA,EAAKkB,UAGPnB,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,GAjsD6B,GAqsD/B,OAFAD,EAAKC,EA2LEoB,MACMzI,IACTqI,EAAK,MAEFK,MACLJ,EAAKR,QACM9H,IACTsI,EAAK,MAEP5C,GAAe0B,EAx2DIuB,EAy2DNrB,EAz2DgBV,EAy2DZW,EAz2DmBhJ,EAy2Df4J,EAz2DoBS,EAy2DhBR,EAz2DsBS,EAy2DlBR,EAz2DwBN,EAy2DpBO,EAAjClB,EAz2DqE,CAAElI,KAAM+F,GAAMnK,QAAS6N,WAAU/B,QAAOrI,MAAKqK,OAAMC,OAAMd,WA22D9HtC,GAAc2B,EACdA,EAAKpH,GA52DK,IAAS2I,EAAU/B,EAAOrI,EAAKqK,EAAMC,EAAMd,EA+2DvD,OAAOX,EAolBI0B,MACM9I,IACToH,EAnlBV,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAavE,GA7/DD,WA8/DRtD,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA//DU,SAggEV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKE,QACMxH,IACTsH,EAAK,OAEPC,EAAKO,QACM9H,IACTuH,EAAK,MAEP7B,GAAe0B,EAz4DIxO,EA04DN0O,EA14DaS,EA04DTR,EAAjBH,EA14D0C,CAAElI,KAAM+F,GAAMlK,UAAWnC,QAAOmP,WA44D1EtC,GAAc2B,EACdA,EAAKpH,GA74DK,IAASpH,EAAOmP,EAg5D5B,OAAOX,EAojBM2B,MACM/I,IACToH,EAnjBZ,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAatE,GA9hED,YA+hERvD,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAhiEU,UAiiEV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKE,QACMxH,IACTsH,EAAK,OAEPC,EAAKO,QACM9H,IACTuH,EAAK,MAEP7B,GAAe0B,EA16DIxO,EA26DN0O,EA36DaS,EA26DTR,EAAjBH,EA36D0C,CAAElI,KAAM+F,GAAMjK,WAAYpC,QAAOmP,WA66D3EtC,GAAc2B,EACdA,EAAKpH,GA96DK,IAASpH,EAAOmP,EAi7D5B,OAAOX,EAohBQ4B,MACMhJ,IACToH,EAnhBd,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAarE,GA/jED,QAgkERxD,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAjkEU,MAkkEV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKQ,QACM9H,IACTsH,EAAK,MAEP5B,GAAe0B,EAv8DIW,EAw8DNT,EAAbF,EAx8DmC,CAAElI,KAAM+F,GAAMhK,aAAc8M,WA08D/DtC,GAAc2B,EACdA,EAAKpH,GA38DK,IAAS+H,EA88DrB,OAAOX,EAwfU6B,MACMjJ,IACToH,EAvfhB,WACE,IAAIA,EAAIC,EAMRD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAapE,IA5lED,UA6lERzD,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA9lEU,QA+lEV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EAj+D8B,CAAEnI,KAAM+F,GAAM/J,iBAq+D9C,OAFAkM,EAAKC,EAoec6B,MACMlJ,IACToH,EAjelB,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAanE,IAnnED,SAonER1D,EAAM8H,OAAOjC,GAAa,IAC5B4B,EArnEU,OAsnEV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAK6B,QACMnJ,GACT0F,GAAe0B,EACfA,EA1/DQ,SAAStK,GAAY,MAAO,CAAEoC,KAAM+F,GAAM9J,eAAgB2B,YA0/D7DsM,CAAQ9B,KAMf7B,GAAc2B,EACdA,EAAKpH,GAGP,OAAOoH,EAocciC,MACMrJ,IACToH,EAncpB,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAalE,IAlpED,UAmpER3D,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAppEU,QAqpEV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAK6B,QACMnJ,GACT0F,GAAe0B,EACfA,EAzhEQ,SAAStK,GAAY,MAAO,CAAEoC,KAAM+F,GAAM7J,cAAe0B,YAyhE5DwM,CAAQhC,KAMf7B,GAAc2B,EACdA,EAAKpH,GAGP,OAAOoH,EAsagBmC,MACMvJ,IACToH,EAratB,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAajE,IAjrED,SAkrER5D,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAnrEU,OAorEV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKiB,QACMvI,IACTsH,EAAK,OAEPC,EAAKiB,QACMxI,IACTuH,EAAK,MAEFmB,KACLhD,GAAe0B,EA9jEIuB,EA+jENrB,EA/jEgB/I,EA+jEZgJ,EAAjBH,EA/jE2C,CAAElI,KAAM+F,GAAM5J,cAAesN,WAAUpK,SAikElFkH,GAAc2B,EACdA,EAAKpH,GAlkEK,IAAS2I,EAAUpK,EAqkE/B,OAAO6I,EAqYkBoC,MACMxJ,IACToH,EApYxB,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAahE,IAntED,SAotER7D,EAAM8H,OAAOjC,GAAa,IAC5B4B,EArtEU,OAstEV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKiB,QACMvI,IACTsH,EAAK,OAEPC,EAAKiB,QACMxI,IACTuH,EAAK,MAEFmB,KACLhD,GAAe0B,EAhmEIuB,EAimENrB,EAjmEgB/I,EAimEZgJ,EAAjBH,EAjmE2C,CAAElI,KAAM+F,GAAM3J,cAAeqN,WAAUpK,SAmmElFkH,GAAc2B,EACdA,EAAKpH,GApmEK,IAAS2I,EAAUpK,EAumE/B,OAAO6I,EAoWoBqC,MACMzJ,IACToH,EAnW1B,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAAIY,EAAIC,EAAIC,EAAIqB,EAAIpB,EAEhCb,EAAe,SAAU7K,GACAmK,GAAWnK,IAGxCwK,EAAK3B,GACLgC,EAAa/D,IArvED,UAsvER9D,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAvvEU,QAwvEV5B,IAAe,GAEf4B,EAAKrH,EAEP,GAAIqH,IAAOrH,EAAY,CA6CrB,KA5CAsH,EAAKE,QACMxH,IACTsH,EAAK,MAEPC,EAAK,GACLY,EAAK1C,GACLgC,EAAa7E,GACyB,KAAlChD,EAAMd,WAAW2G,KACnB2C,EAnxEQ,IAoxER3C,MAEA2C,EAAKpI,EAEHoI,IAAOpI,IACTqI,EAAKsB,QACM3J,GACTyH,EAAa7E,GACyB,KAAlChD,EAAMd,WAAW2G,KACnBiE,EA7xEI,IA8xEJjE,MAEAiE,EAAK1J,EAEH0J,IAAO1J,IACTsI,EAAKa,QACMnJ,EAETmI,EADAC,EAAK,CAACA,EAAIC,EAAIqB,EAAIpB,IAOpB7C,GAAc0C,EACdA,EAAKnI,KAOTyF,GAAc0C,EACdA,EAAKnI,GAEAmI,IAAOnI,GACZuH,EAAGL,KAAKiB,GACRA,EAAK1C,GACLgC,EAAa7E,GACyB,KAAlChD,EAAMd,WAAW2G,KACnB2C,EA5zEM,IA6zEN3C,MAEA2C,EAAKpI,EAEHoI,IAAOpI,IACTqI,EAAKsB,QACM3J,GACTyH,EAAa7E,GACyB,KAAlChD,EAAMd,WAAW2G,KACnBiE,EAt0EE,IAu0EFjE,MAEAiE,EAAK1J,EAEH0J,IAAO1J,IACTsI,EAAKa,QACMnJ,EAETmI,EADAC,EAAK,CAACA,EAAIC,EAAIqB,EAAIpB,IAOpB7C,GAAc0C,EACdA,EAAKnI,KAOTyF,GAAc0C,EACdA,EAAKnI,GAGTmI,EAAKO,KACLhD,GAAe0B,EACfA,EAjtEU,SAASwC,EAAO/J,GAAW,OAAOwF,GAAKwE,mBAAmBD,EAAO/J,GAitEtEiK,CAAQxC,EAAIC,QAEjB9B,GAAc2B,EACdA,EAAKpH,EAGP,OAAOoH,EAqPsB2C,MACM/J,IACToH,EApP5B,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa9D,IAr2ED,SAs2ER/D,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAv2EU,OAw2EV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAK0C,QACMhK,GACT0F,GAAe0B,EA3uEElP,EA4uEJoP,EAAbF,EA5uEgC,CAAElI,KAAM+F,GAAMzJ,iBAAkBtD,UAkvElEuN,GAAc2B,EACdA,EAAKpH,GAnvEK,IAAS9H,EAsvErB,OAAOkP,EAuNwB6C,MACMjK,IACToH,EAtN9B,WACE,IAAIA,EAAIC,EAMRD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa7D,IAp4ED,WAq4ERhE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAt4EU,SAu4EV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EAzwE8B,CAAEnI,KAAM+F,GAAMxJ,kBA6wE9C,OAFA2L,EAAKC,EAmM4B6C,MACMlK,IACToH,EAhMhC,WACE,IAAIA,EAAIC,EAMRD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa5D,IA35ED,SA45ERjE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA75EU,OA85EV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EAhyE8B,CAAEnI,KAAM+F,GAAMvJ,gBAoyE9C,OAFA0L,EAAKC,EA6K8B8C,MACMnK,IACToH,EA1KlC,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa3D,IAl7ED,YAm7ERlE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAp7EU,UAq7EV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKiB,QACMvI,IACTsH,EAAK,MAEP5B,GAAe0B,EA1zEIuB,EA2zENrB,EAAbF,EA3zEsC,CAAElI,KAAM+F,GAAMtJ,gBAAiBgN,cA6zErElD,GAAc2B,EACdA,EAAKpH,GA9zEK,IAAS2I,EAi0ErB,OAAOvB,EA+I8BgD,MACMpK,IACToH,EA9IpC,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa1D,IA/8ED,gBAg9ERnE,EAAM8H,OAAOjC,GAAa,KAC5B4B,EAj9EU,cAk9EV5B,IAAe,IAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKE,QACMxH,IACTsH,EAAK,OAEPC,EAAKiB,QACMxI,IACTuH,EAAK,MAEFmB,KACLhD,GAAe0B,EA51EIiD,EA61EN/C,EA71EgBgD,EA61EZ/C,EAAjBH,EA71E6C,CAAElI,KAAM+F,GAAMrJ,oBAAqByO,WAAUC,WA+1E1F7E,GAAc2B,EACdA,EAAKpH,GAh2EK,IAASqK,EAAUC,EAm2E/B,OAAOlD,EA8GgCmD,MACMvK,IACToH,EA7GtC,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAazD,IAj/ED,aAk/ERpE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAn/EU,WAo/EV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAK0C,QACMhK,GACJ0I,KACLhD,GAAe0B,EAx3EElP,EAy3EJoP,EAAbF,EAz3EgC,CAAElI,KAAM+F,GAAMpJ,iBAAkB3D,UA+3ElEuN,GAAc2B,EACdA,EAAKpH,GAh4EK,IAAS9H,EAm4ErB,OAAOkP,EA+EkCoD,MACMxK,IACToH,EA9ExC,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAaxD,IAjhFD,aAkhFRrE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAnhFU,WAohFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAK0C,QACMhK,GACJ0I,KACLhD,GAAe0B,EAx5EElP,EAy5EJoP,EAAbF,EAz5EgC,CAAElI,KAAM+F,GAAMnJ,iBAAkB5D,UA+5ElEuN,GAAc2B,EACdA,EAAKpH,GAh6EK,IAAS9H,EAm6ErB,OAAOkP,EAgDoCqD,IAqB3C,OAAOrD,EA4XAsD,MACM1K,IACToH,EArDN,WACE,IAAIA,GAMJA,EA7UF,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAavD,IAtnFD,WAunFRtE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAxnFU,SAynFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EA55BJ,WACE,IAAIF,EAAIC,EAAIC,EAMZF,EAAK3B,IACL4B,EAAKG,QACMxH,IANQ,SAAUpD,GACAmK,GAAWnK,GAMtC6K,CAAa7E,GACyB,KAAlChD,EAAMd,WAAW2G,KACnB6B,EApwDQ,IAqwDR7B,MAEA6B,EAAKtH,EAEHsH,IAAOtH,EACToH,EAAKC,GAEL5B,GAAc2B,EACdA,EAAKpH,KAGPyF,GAAc2B,EACdA,EAAKpH,GAGP,OAAOoH,EAg4BAuD,MACM3K,IACTsH,EAAK,OAEPC,EAAKgB,QACMvI,IACTuH,EAAK,MAEP7B,GAAe0B,EACfA,EAngFU,SAASxJ,EAAM+K,GAAY,MAAO,CAAEzJ,KAAM+F,GAAMlJ,MAAO6B,OAAM+K,YAmgFlEiC,CAAQtD,EAAIC,KAEjB9B,GAAc2B,EACdA,EAAKpH,GAGP,OAAOoH,EA8SFyD,MACM7K,IACToH,EA7SJ,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAatD,IAvpFD,YAwpFRvE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAzpFU,UA0pFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKiB,QACMvI,IACTsH,EAAK,MAEP5B,GAAe0B,EA/hFIuB,EAgiFNrB,EAAbF,EAhiFsC,CAAElI,KAAM+F,GAAMjJ,OAAQ2M,cAkiF5DlD,GAAc2B,EACdA,EAAKpH,GAniFK,IAAS2I,EAsiFrB,OAAOvB,EAkRA0D,MACM9K,IACToH,EAjRN,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAarD,IAprFD,UAqrFRxE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAtrFU,QAurFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKE,QACMxH,IACTsH,EAAK,MAEP5B,GAAe0B,EA5jFIxO,EA6jFN0O,EAAbF,EA7jFmC,CAAElI,KAAM+F,GAAMhJ,QAASrD,WA+jF1D6M,GAAc2B,EACdA,EAAKpH,GAhkFK,IAASpH,EAmkFrB,OAAOwO,EAsPE2D,MACM/K,IACToH,EArPR,WACE,IAAIA,EAAIC,EAMRD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAapD,IAjtFD,cAktFRzE,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAntFU,YAotFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EAtlF8B,CAAEnI,KAAM+F,GAAM/I,YA0lF9C,OAFAkL,EAAKC,EAkOM2D,MACMhL,IACToH,EA/NV,WACE,IAAIA,EAAIC,EAMRD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAanD,IAxuFD,cAyuFR1E,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA1uFU,YA2uFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EA7mF8B,CAAEnI,KAAM+F,GAAM9I,YAinF9C,OAFAiL,EAAKC,EA4MQ4D,MACMjL,IACToH,EAzMZ,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAAIY,EAMpBf,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAalD,IA/vFD,YAgwFR3E,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAjwFU,UAkwFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKE,QACMxH,IACTsH,EAAK,OAEPC,EAAKiB,QACMxI,IACTuH,EAAK,OAEPY,EAAKK,QACMxI,IACTmI,EAAK,MAEFO,KACLhD,GAAe0B,EAhpFI8D,EAipFN5D,EAjpFWzB,EAipFP0B,EAjpFe3O,EAipFXuP,EAArBf,EAjpFgD,CAAElI,KAAM+F,GAAM7I,OAAQ8O,MAAKrF,SAAQjN,WAmpFnF6M,GAAc2B,EACdA,EAAKpH,GAppFK,IAASkL,EAAKrF,EAAQjN,EAupFlC,OAAOwO,EAqKQ+D,MACMnL,IACToH,EApKd,WACE,IAAIA,EAAIC,EAMRD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAajD,IAryFD,YAsyFR5E,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAvyFU,UAwyFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EA1qF8B,CAAEnI,KAAM+F,GAAM5I,UA8qF9C,OAFA+K,EAAKC,EAiJY+D,MACMpL,IACToH,EA9IhB,WACE,IAAIA,EAAIC,EAMRD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAahD,IA5zFD,aA6zFR7E,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA9zFU,WA+zFV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EAjsF8B,CAAEnI,KAAM+F,GAAM3I,WAqsF9C,OAFA8K,EAAKC,EA2HcgE,MACMrL,IACToH,EAxHlB,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAMhBH,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa/C,IAn1FD,aAo1FR9E,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAr1FU,WAs1FV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKiB,QACMvI,IACTsH,EAAK,OAEPC,EAAKiB,QACMxI,IACTuH,EAAK,MAEFmB,KACLhD,GAAe0B,EAhuFIuB,EAiuFNrB,EAjuFgBgE,EAiuFZ/D,EAAjBH,EAjuFgD,CAAElI,KAAM+F,GAAM1I,QAASoM,WAAU2C,cAmuFjF7F,GAAc2B,EACdA,EAAKpH,GApuFK,IAAS2I,EAAU2C,EAuuF/B,OAAOlE,EAwFcmE,MACMvL,IACToH,EAvFpB,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa9C,IAr3FD,SAs3FR/E,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAv3FU,OAw3FV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKiB,QACMvI,IACTsH,EAAK,MAEFoB,KACLhD,GAAe0B,EA9vFIuB,EA+vFNrB,EAAbF,EA/vFsC,CAAElI,KAAM+F,GAAMzI,IAAKmM,cAiwFzDlD,GAAc2B,EACdA,EAAKpH,GAlwFK,IAAS2I,EAqwFrB,OAAOvB,EA2DgBoE,MACMxL,IACToH,EA1DtB,WACE,IAAIA,EAAIC,EAAIC,EAMZF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa7C,IAn5FD,UAo5FRhF,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAr5FU,QAs5FV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKiB,QACMvI,IACTsH,EAAK,MAEFoB,KACLhD,GAAe0B,EA5xFIuB,EA6xFNrB,EAAbF,EA7xFsC,CAAElI,KAAM+F,GAAMxI,KAAMkM,cA+xF1DlD,GAAc2B,EACdA,EAAKpH,GAhyFK,IAAS2I,EAmyFrB,OAAOvB,EA8BkBqE,IAYzB,OAAOrE,EAcEsE,MACM1L,IACToH,EA/sCR,WACE,IAAIA,EAAIC,EAMRD,EAAK3B,IACL4B,EAAKG,QACMxH,IACT0F,GAAe0B,EAxrDIxO,EAyrDNyO,EAAbA,EAzrDmC,CAAEnI,KAAM+F,GAAMxK,eAAgB7B,UAAvD,IAASA,EA6rDrB,OAFAwO,EAAKC,EAksCMsE,IAKX,OAAOvE,EA5pFFwE,GAKP,SAASC,KACP,IAAIzE,EAcJ,OAZmB,SAAUxK,GACAmK,GAAWnK,GAGxC6K,CAAa9G,GACTf,EAAMN,OAASmG,IACjB2B,EAAKxH,EAAMkM,OAAOrG,IAClBA,MAEA2B,EAAKpH,EAGAoH,EAGT,SAAS2E,KACP,IAAI3E,EAcJ,OAZmB,SAAUxK,GACAmK,GAAWnK,GAGxC6K,CAAa7G,GACTP,EAAO2L,KAAKpM,EAAMkM,OAAOrG,MAC3B2B,EAAKxH,EAAMkM,OAAOrG,IAClBA,MAEA2B,EAAKpH,EAGAoH,EAGT,SAAS6E,KACP,IAAI7E,EAcJ,OAZmB,SAAUxK,GACAmK,GAAWnK,GAGxC6K,CAAa3G,GACTR,EAAO0L,KAAKpM,EAAMkM,OAAOrG,MAC3B2B,EAAKxH,EAAMkM,OAAOrG,IAClBA,MAEA2B,EAAKpH,EAGAoH,EAGT,SAAS8E,KACP,IAAI9E,EAcJ,OAZmB,SAAUxK,GACAmK,GAAWnK,GAGxC6K,CAAa1G,GACTR,EAAOyL,KAAKpM,EAAMkM,OAAOrG,MAC3B2B,EAAKxH,EAAMkM,OAAOrG,IAClBA,MAEA2B,EAAKpH,EAGAoH,EAGT,SAASU,KACP,IAAIV,EAAIC,EAAIC,EASZ,GAHAF,EAAK3B,GACL4B,EAAK,IACLC,EAAKuE,QACM7L,EACT,KAAOsH,IAAOtH,GACZqH,EAAGH,KAAKI,GACRA,EAAKuE,UAGPxE,EAAKrH,EAQP,OANIqH,IAAOrH,IACT0F,GAAe0B,EACfC,GAjW6B,GAmW/BD,EAAKC,EAKP,SAASqB,KACP,IAAItB,EAiBJ,OAfmB,SAAUxK,GACAmK,GAAWnK,GAGxC6K,CAAazG,GACyB,KAAlCpB,EAAMd,WAAW2G,KACnB2B,EAnfS,IAofT3B,MAEA2B,EAAKpH,EAEHoH,IAAOpH,IACToH,EAAK,MAGAA,EAGT,SAAS+B,KACP,IAAI/B,EAoBJ,OAdAA,EAAK3B,GACAwG,OACMjM,GACJiM,OACMjM,GACJ,KAEP0F,GAAe0B,EACfA,EAAKvC,OAELY,GAAc2B,EACdA,EAAKpH,GAGAoH,EAGT,SAAS4C,KACP,IAAI5C,EA4CJ,OAtCAA,EAAK3B,GACAsG,OACM/L,GACJiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEP0F,GAAe0B,EACfA,EAAKvC,OAELY,GAAc2B,EACdA,EAAKpH,GAGAoH,EAoGT,SAAS+E,KACP,IAAI/E,EAAIC,EA4CR,OAtCAD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAanG,GA5qBF,UA6qBP1B,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA9qBS,QA+qBT5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,GACJ+L,OACM/L,GACJiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEFiM,OACMjM,GACJ,KAEP0F,GAAe0B,EACfA,EArkB2B,OAASxJ,KAAOoI,UAAU,KA2kBvDP,GAAc2B,EACdA,EAAKpH,GAGAoH,EAGT,SAASgF,KACP,IAAIhF,EAAIC,EAllBYnP,EAgmBpB,OARAkP,EAAK3B,IACL4B,EAzJF,WACE,IAAID,EAAIC,EAuBR,OAjBAD,EAAK2E,QACM/L,IACToH,EAAK3B,GANY,SAAU7I,GACAmK,GAAWnK,GAMtC6K,CAAavG,GAhlBJ,WAilBLtB,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAllBO,SAmlBP5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EAtd2B,SAwd7BD,EAAKC,GAGAD,EAiIFiF,MACMrM,IACT0F,GAAe0B,EA3lBGlP,EA4lBNmP,EAAZA,EA5lBiC,CAAEnI,KAAM+F,GAAM9K,SAAUjC,SA8lB3DkP,EAAKC,EAKP,SAASiF,KACP,IAAIlF,EAAIC,EAnmBYnP,EAinBpB,OARAkP,EAAK3B,IACL4B,EAhJF,WACE,IAAID,EAAIC,EA4BR,OAtBAD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAatG,GAxmBF,QAymBPvB,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA1mBS,MA2mBT5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,GACJkM,OACMlM,GACT0F,GAAe0B,EACfA,EAAKvC,OAMPY,GAAc2B,EACdA,EAAKpH,GAGAoH,EAmHFmF,MACMvM,IACT0F,GAAe0B,EA5mBGlP,EA6mBNmP,EAAZA,EA7mBiC,CAAEnI,KAAM+F,GAAM7K,eAAgBlC,SA+mBjEkP,EAAKC,EAKP,SAASmF,KACP,IAAIpF,EAAIC,EApnBYnP,EA2oBpB,OAjBAkP,EAAK3B,IACL4B,EAlIF,WACE,IAAID,EAAIC,EAAIC,EAERG,EAAe,SAAU7K,GACAmK,GAAWnK,IA+BxC,OA5BAwK,EAAK3B,GACLgC,EAAarG,GAvoBF,OAwoBPxB,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAzoBS,KA0oBT5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,GACTyH,EAAapG,GACTb,EAAOwL,KAAKpM,EAAMkM,OAAOrG,MAC3B6B,EAAK1H,EAAMkM,OAAOrG,IAClBA,MAEA6B,EAAKtH,EAEHsH,IAAOtH,GACT0F,GAAe0B,EACfA,EAthBiC,OAshBrBE,IAEZ7B,GAAc2B,EACdA,EAAKpH,KAGPyF,GAAc2B,EACdA,EAAKpH,GAGAoH,EA+FFqF,MACMzM,IACT0F,GAAe0B,EA7nBGlP,EA8nBNmP,EAAZA,EA9nBiC,CAAEnI,KAAM+F,GAAM5K,aAAcnC,OAAMwU,QAAQ,KAgoB7EtF,EAAKC,KACMrH,IACToH,EAAK3B,IACL4B,EAAK8E,QACMnM,IACT0F,GAAe0B,EACfC,EAroBO,SAASnP,GAAQ,MAAO,CAAEgH,KAAM+F,GAAM5K,aAAcnC,OAAMwU,QAAQ,GAqoBpEC,CAAOtF,IAEdD,EAAKC,GAGAD,EAGT,SAASmB,KACP,IAAInB,EAcJ,OARAA,EAAKkF,QACMtM,IACToH,EAAKgF,QACMpM,IACToH,EAAKoF,MAIFpF,EAGT,SAASwF,KACP,IAAIxF,EAAIC,EAAIC,EAAIC,EA/pBIsF,EAAMC,EAksB1B,OA7BA1F,EAAK3B,IACL4B,EAAKmF,QACMxM,IANQ,SAAUpD,GACAmK,GAAWnK,GAMtC6K,CAAalG,GACyB,KAAlC3B,EAAMd,WAAW2G,KACnB6B,EAhzBO,IAizBP7B,MAEA6B,EAAKtH,EAEHsH,IAAOtH,IACTuH,EAAKC,QACMxH,GACJ0I,KACLhD,GAAe0B,EAnrBDyF,EAorBFxF,EAprBQyF,EAorBJvF,EAAhBH,EAprBoC,CAAElI,KAAM+F,GAAM3K,UAAWuS,OAAMC,WA0rBrErH,GAAc2B,EACdA,EAAKpH,KAGPyF,GAAc2B,EACdA,EAAKpH,GAGAoH,EAGT,SAASO,KACP,IAAIP,EAWJ,OALAA,EAAKwF,QACM5M,IACToH,EAAKmB,MAGAnB,EAGT,SAAS2F,KACP,IAAI3F,EAAIC,EAAIC,EASZ,GAHAF,EAAK3B,GACL4B,EAAK,IACLC,EAAK4E,QACMlM,EACT,KAAOsH,IAAOtH,GACZqH,EAAGH,KAAKI,GACRA,EAAK4E,UAGP7E,EAAKrH,EAQP,OALEoH,EADEC,IAAOrH,EACJJ,EAAMoG,UAAUoB,EAAI3B,IAEpB4B,EA4DT,SAAS2F,KACP,IAAI5F,EAAQE,EAAIC,EA2BhB,OArBAH,EAAK3B,GAzBP,WACE,IAAI2B,EAcJ,OAZmB,SAAUxK,GACAmK,GAAWnK,GAGxC6K,CAAahG,GA/5BF,OAg6BP7B,EAAM8H,OAAOjC,GAAa,IAC5B2B,EAj6BS,KAk6BT3B,IAAe,GAEf2B,EAAKpH,EAGAoH,EAWF6F,KACMjN,GACTsH,EAAK7B,GACL8B,EAjEJ,WACE,IAAIH,EAAIC,EAAIC,EAAIC,EAgChB,OA1BAH,EAAK3B,GACL4B,EAAK5B,GALc,SAAU7I,GACAmK,GAAWnK,GAKxC6K,CAAajG,GACTf,EAAOuL,KAAKpM,EAAMkM,OAAOrG,MAC3B6B,EAAK1H,EAAMkM,OAAOrG,IAClBA,MAEA6B,EAAKtH,EAEHsH,IAAOtH,IACTsH,EAAK,OAEPC,EAAKwF,QACM/M,EAETqH,EADAC,EAAK,CAACA,EAAIC,IAGV9B,GAAc4B,EACdA,EAAKrH,GAGLoH,EADEC,IAAOrH,EACJJ,EAAMoG,UAAUoB,EAAI3B,IAEpB4B,EAmCA6F,IAEH5F,EADEC,IAAOvH,EACJJ,EAAMoG,UAAUsB,EAAI7B,IAEpB8B,KAEIvH,EACToH,EAAKE,GAEL7B,GAAc2B,EACdA,EAAKpH,KAGPyF,GAAc2B,EACdA,EAAKpH,GAGAoH,EAGT,SAAS+F,KACP,IAAI/F,EAAIC,EAAIC,EAAIC,EAAIY,EAp0BCiF,EAASC,EAAUC,EAs0BpC7F,EAAe,SAAU7K,GACAmK,GAAWnK,IA2ExC,OAxEAwK,EAAK3B,IACL4B,EAAK0F,QACM/M,GACTyH,EAAa/F,GACyB,KAAlC9B,EAAMd,WAAW2G,KACnB6B,EAp9BO,IAq9BP7B,MAEA6B,EAAKtH,EAEHsH,IAAOtH,IACTuH,EAAKwF,QACM/M,IACTuH,EAAK,OAEPY,EAAK6E,QACMhN,IACTmI,EAAK,MAEPzC,GAAe0B,EA71BEgG,EA81BJ/F,EA91BagG,EA81BT9F,EA91BmB+F,EA81BfnF,EAArBf,EA71BK,CAAElI,KAAM+F,GAAMnL,OAAQsT,UAASC,WAAUC,cA+1B9C7H,GAAc2B,EACdA,EAAKpH,KAGPyF,GAAc2B,EACdA,EAAKpH,GAEHoH,IAAOpH,IACToH,EAAK3B,GACLgC,EAAa/F,GACyB,KAAlC9B,EAAMd,WAAW2G,KACnB4B,EAh/BO,IAi/BP5B,MAEA4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKyF,QACM/M,IACTuH,EAAKyF,QACMhN,IACTuH,EAAK,MAEP7B,GAAe0B,EACfA,EAr3BM,SAASiG,EAAUC,GAC7B,MAAO,CAAEpO,KAAM+F,GAAMnL,OAAQuT,WAAUC,YAo3B9BC,CAAQjG,EAAIC,KAMnB9B,GAAc2B,EACdA,EAAKpH,GAEHoH,IAAOpH,IACToH,EAAK3B,IACL4B,EAAK0F,QACM/M,IACTsH,EAAK0F,QACMhN,IACTsH,EAAK,MAEP5B,GAAe0B,EACfA,EAp4BM,SAASgG,EAASE,GAC5B,MAAO,CAAEpO,KAAM+F,GAAMnL,OAAQsT,UAASE,YAm4B7BE,CAAQnG,EAAIC,KAEjB7B,GAAc2B,EACdA,EAAKpH,KAKJoH,EAGT,SAASqG,KACP,IAAIrG,EAcJ,OAZmB,SAAUxK,GACAmK,GAAWnK,GAGxC6K,CAAa9F,GACTjB,EAAOsL,KAAKpM,EAAMkM,OAAOrG,MAC3B2B,EAAKxH,EAAMkM,OAAOrG,IAClBA,MAEA2B,EAAKpH,EAGAoH,EAsBT,SAASuC,KACP,IAAIvC,EAAIC,EAAIC,EAAIC,EAl7BKmG,EAo7BjBjG,EAAe,SAAU7K,GACAmK,GAAWnK,IA8BxC,OA3BAwK,EAAK3B,GACLgC,EAAa7F,GACyB,KAAlChC,EAAMd,WAAW2G,KACnB4B,EAxkCS,IAykCT5B,MAEA4B,EAAKrH,EAEHqH,IAAOrH,GACTsH,EAnCJ,WACE,IAAIF,EAAIC,EAAIC,EASZ,IAHAF,EAAK3B,GACL4B,EAAK,GACLC,EAAKmG,KACEnG,IAAOtH,GACZqH,EAAGH,KAAKI,GACRA,EAAKmG,KAIP,OAFArG,EAAKxH,EAAMoG,UAAUoB,EAAI3B,IAqBlBkI,GACLlG,EAAa7F,GACyB,KAAlChC,EAAMd,WAAW2G,KACnB8B,EAjlCO,IAklCP9B,MAEA8B,EAAKvH,EAEHuH,IAAOvH,IACTuH,EAAK,MAEP7B,GAAe0B,EA58BIsG,EA68BNpG,EAAbF,EA78BmC,CAAElI,KAAM+F,GAAMjL,OAAQ0T,WA+8BzDjI,GAAc2B,EACdA,EAAKpH,GAGAoH,EAGT,SAASwG,KACP,IAAIxG,EAAIC,EAoBR,OAdAD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa5F,GA1mCF,QA2mCPjC,EAAM8H,OAAOjC,GAAa,IAC5B4B,EA5mCS,MA6mCT5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EAt+B8B,CAAEnI,KAAM+F,GAAMhL,MAw+B9CmN,EAAKC,EAKP,SAASwG,KACP,IAAIzG,EAAIC,EAoBR,OAdAD,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa3F,GAjoCD,WAkoCRlC,EAAM8H,OAAOjC,GAAa,IAC5B4B,EAnoCU,SAooCV5B,IAAe,GAEf4B,EAAKrH,EAEHqH,IAAOrH,IACT0F,GAAe0B,EACfC,EA7/B8B,CAAEnI,KAAM+F,GAAM/K,SA+/B9CkN,EAAKC,EAoBP,SAASyG,KACP,IAAI1G,EAcJ,OARAA,EAtBF,WACE,IAAIA,EAWJ,OALAA,EAAKwG,QACM5N,IACToH,EAAKyG,MAGAzG,EAUF2G,MACM/N,IACToH,EAAKO,QACM3H,IACToH,EAAKuC,MAIFvC,EAGT,SAAS4G,KACP,IAAI5G,EAAIC,EAAIC,EAAIC,EAAIY,EAriCChD,EAAMC,EAuiCvBqC,EAAe,SAAU7K,GACAmK,GAAWnK,IAWxC,GARAwK,EAAK3B,GACLgC,EAAa1F,GACyB,MAAlCnC,EAAMd,WAAW2G,KACnB4B,EA3rCU,IA4rCV5B,MAEA4B,EAAKrH,EAEHqH,IAAOrH,EAET,IADAsH,EAAKE,QACMxH,EAAY,CAGrB,IAFAuH,EAAK,GACLY,EAAKK,KACEL,IAAOnI,GACZuH,EAAGL,KAAKiB,GACRA,EAAKK,KAEPf,EAAazF,GACyB,MAAlCpC,EAAMd,WAAW2G,KACnB0C,EA1sCM,IA2sCN1C,MAEA0C,EAAKnI,EAEHmI,IAAOnI,IACTmI,EAAK,MAEPzC,GAAe0B,EAtkCEjC,EAukCJmC,EAvkCUlC,EAukCNmC,EAAjBH,EAvkCsC/B,GAAK4I,UAAU9I,EAAMC,QAykC3DK,GAAc2B,EACdA,EAAKpH,OAGPyF,GAAc2B,EACdA,EAAKpH,EAGP,OAAOoH,EAoDT,SAAS8G,KACP,IAAI9G,EAcJ,OAZmB,SAAUxK,GACAmK,GAAWnK,GAGxC6K,CAAaxF,GAvxCD,OAwxCRrC,EAAM8H,OAAOjC,GAAa,IAC5B2B,EAzxCU,KA0xCV3B,IAAe,GAEf2B,EAAKpH,EAGAoH,EAGT,SAAS+G,KACP,IAAI/G,EAAIC,EAAIC,EAyBZ,OAnBAF,EA1EF,WACE,IAAIA,EAAIC,EAAIC,EAAIC,EAEZE,EAAe,SAAU7K,GACAmK,GAAWnK,IA0CxC,OAvCAwK,EAAK0G,QACM9N,IACToH,EAAK3B,GACLgC,EAAalG,GACyB,KAAlC3B,EAAMd,WAAW2G,KACnB4B,EAnvCO,IAovCP5B,MAEA4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKE,QACMxH,GACTyH,EAAazG,GACyB,KAAlCpB,EAAMd,WAAW2G,KACnB8B,EAlwCG,IAmwCH9B,MAEA8B,EAAKvH,EAEHuH,IAAOvH,EACToH,EAAKE,GAEL7B,GAAc2B,EACdA,EAAKpH,KAOTyF,GAAc2B,EACdA,EAAKpH,GAEHoH,IAAOpH,IACToH,EAAK4G,OAIF5G,EA4BFgH,MACMpO,IACToH,EAAK3B,IACL4B,EAAK6G,QACMlO,IACTsH,EAAK6G,QACMnO,GACT0F,GAAe0B,EACfA,EAAKtC,GAAQuC,EAAIC,KAMnB7B,GAAc2B,EACdA,EAAKpH,IAIFoH,EAGT,SAASiH,KACP,IAAIjH,EAAIC,EAAIC,EA4BZ,OAtBAF,EAAK+G,QACMnO,IACToH,EAAK+F,QACMnN,IACToH,EAAK3B,IACL4B,EAAK6G,QACMlO,IACTsH,EAAK+G,QACMrO,GACT0F,GAAe0B,EACfA,EAAKtC,GAAQuC,EAAIC,KAMnB7B,GAAc2B,EACdA,EAAKpH,IAKJoH,EAGT,SAASkH,KACP,IAAIlH,EAAIC,EAAIC,EAAIC,EAAIY,EAAIC,EAQxB,GAFAhB,EAAK3B,IACL4B,EAAK8G,QACMnO,EAAY,CAiBrB,IAhBAsH,EAAK,GACLC,EAAK9B,IACL0C,EAAKkG,QACMrO,IACToI,EAAK+F,QACMnO,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,GAEAuH,IAAOvH,GACZsH,EAAGJ,KAAKK,GACRA,EAAK9B,IACL0C,EAAKkG,QACMrO,IACToI,EAAK+F,QACMnO,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,IAGTuH,EAAK8G,QACMrO,IACTuH,EAAK,MAEP7B,GAAe0B,EACfA,EAAKlC,GAAQmC,EAAIC,EAAIC,QAErB9B,GAAc2B,EACdA,EAAKpH,EAEP,GAAIoH,IAAOpH,EAAY,CAGrB,GAFAoH,EAAK3B,IACL4B,EAAKgH,QACMrO,EAAY,CAiBrB,IAhBAsH,EAAK,GACLC,EAAK9B,IACL0C,EAAKgG,QACMnO,IACToI,EAAKiG,QACMrO,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,GAEAuH,IAAOvH,GACZsH,EAAGJ,KAAKK,GACRA,EAAK9B,IACL0C,EAAKgG,QACMnO,IACToI,EAAKiG,QACMrO,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,IAGTuH,EAAK4G,QACMnO,IACTuH,EAAK,MAEP7B,GAAe0B,EACfA,EAAKlC,GAAQmC,EAAIC,EAAIC,QAErB9B,GAAc2B,EACdA,EAAKpH,EAEHoH,IAAOpH,IACToH,EAAKiH,MAIT,OAAOjH,EAGT,SAASmH,KACP,IAAInH,EAEAK,EAAe,SAAU7K,GACAmK,GAAWnK,IAoBxC,OAjBA6K,EAAavF,GACyB,KAAlCtC,EAAMd,WAAW2G,KACnB2B,EAr9CU,IAs9CV3B,MAEA2B,EAAKpH,EAEHoH,IAAOpH,IACTyH,EAAatF,GACyB,KAAlCvC,EAAMd,WAAW2G,KACnB2B,EA59CQ,IA69CR3B,MAEA2B,EAAKpH,GAIFoH,EAGT,SAASoH,KACP,IAAIpH,EAAIC,EAAIC,EAAIC,EAAIY,EAAIC,EAQxB,GAFAhB,EAAK3B,IACL4B,EAAKiH,QACMtO,EAAY,CAiBrB,IAhBAsH,EAAK,GACLC,EAAK9B,IACL0C,EAAKoG,QACMvO,IACToI,EAAKkG,QACMtO,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,GAEAuH,IAAOvH,GACZsH,EAAGJ,KAAKK,GACRA,EAAK9B,IACL0C,EAAKoG,QACMvO,IACToI,EAAKkG,QACMtO,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,GAGT0F,GAAe0B,EACfA,EAAK7B,GAAQ8B,EAAIC,QAEjB7B,GAAc2B,EACdA,EAAKpH,EAGP,OAAOoH,EAGT,SAASqH,KACP,IAAIrH,EAEAK,EAAe,SAAU7K,GACAmK,GAAWnK,IAoBxC,OAjBA6K,EAAarF,GACyB,KAAlCxC,EAAMd,WAAW2G,KACnB2B,EApiDU,IAqiDV3B,MAEA2B,EAAKpH,EAEHoH,IAAOpH,IACTyH,EAAapF,GACyB,KAAlCzC,EAAMd,WAAW2G,KACnB2B,EA3iDQ,IA4iDR3B,MAEA2B,EAAKpH,GAIFoH,EAGT,SAASsH,KACP,IAAItH,EAAIC,EAAIC,EAAIC,EAAIY,EAAIC,EAQxB,GAFAhB,EAAK3B,IACL4B,EAAKmH,QACMxO,EAAY,CAiBrB,IAhBAsH,EAAK,GACLC,EAAK9B,IACL0C,EAAKsG,QACMzO,IACToI,EAAKoG,QACMxO,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,GAEAuH,IAAOvH,GACZsH,EAAGJ,KAAKK,GACRA,EAAK9B,IACL0C,EAAKsG,QACMzO,IACToI,EAAKoG,QACMxO,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,GAGT0F,GAAe0B,EACfA,EAAK7B,GAAQ8B,EAAIC,QAEjB7B,GAAc2B,EACdA,EAAKpH,EAGP,OAAOoH,EAGT,SAASuH,KACP,IAAIvH,EAEAK,EAAe,SAAU7K,GACAmK,GAAWnK,IAwDxC,OArDA6K,EAAanF,GACyB,KAAlC1C,EAAMd,WAAW2G,KACnB2B,EAnnDU,IAonDV3B,MAEA2B,EAAKpH,EAEHoH,IAAOpH,IACTyH,EAAalF,GAxnDH,OAynDN3C,EAAM8H,OAAOjC,GAAa,IAC5B2B,EA1nDQ,KA2nDR3B,IAAe,GAEf2B,EAAKpH,EAEHoH,IAAOpH,IACTyH,EAAajF,GA/nDL,OAgoDJ5C,EAAM8H,OAAOjC,GAAa,IAC5B2B,EAjoDM,KAkoDN3B,IAAe,GAEf2B,EAAKpH,EAEHoH,IAAOpH,IACTyH,EAAahF,GACyB,KAAlC7C,EAAMd,WAAW2G,KACnB2B,EAxoDI,IAyoDJ3B,MAEA2B,EAAKpH,EAEHoH,IAAOpH,IACTyH,EAAa/E,GA7oDT,OA8oDA9C,EAAM8H,OAAOjC,GAAa,IAC5B2B,EA/oDE,KAgpDF3B,IAAe,GAEf2B,EAAKpH,EAEHoH,IAAOpH,IACTyH,EAAa9E,GACyB,KAAlC/C,EAAMd,WAAW2G,KACnB2B,EAtpDA,IAupDA3B,MAEA2B,EAAKpH,OAQVoH,EAGT,SAASI,KACP,IAAIJ,EAAIC,EAAIC,EAAIC,EAAIY,EAAIC,EAQxB,GAFAhB,EAAK3B,IACL4B,EAAKqH,QACM1O,EAAY,CAiBrB,IAhBAsH,EAAK,GACLC,EAAK9B,IACL0C,EAAKwG,QACM3O,IACToI,EAAKsG,QACM1O,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,GAEAuH,IAAOvH,GACZsH,EAAGJ,KAAKK,GACRA,EAAK9B,IACL0C,EAAKwG,QACM3O,IACToI,EAAKsG,QACM1O,EAETuH,EADAY,EAAK,CAACA,EAAIC,IAOZ3C,GAAc8B,EACdA,EAAKvH,GAGT0F,GAAe0B,EACfA,EAAK7B,GAAQ8B,EAAIC,QAEjB7B,GAAc2B,EACdA,EAAKpH,EAGP,OAAOoH,EAGT,SAASoB,KACP,IAAIpB,EAAIC,EAAIC,EA2BZ,OArBAF,EAAK3B,GAJc,SAAU7I,GACAmK,GAAWnK,GAIxC6K,CAAa7E,GACyB,KAAlChD,EAAMd,WAAW2G,KACnB4B,EAnuDU,IAouDV5B,MAEA4B,EAAKrH,EAEHqH,IAAOrH,IACTsH,EAAKE,QACMxH,EACToH,EAAKE,GAMP7B,GAAc2B,EACdA,EAAKpH,GAGAoH,EAqxCP,MAAMnC,GAAQ,EAAS,GACjBI,GAAO,EAAS,GAMxB,GAxuFES,GAAaoB,KAAK,CAAEf,IAAKV,GAAawB,SAAU,MAsuFlDlH,EAAaK,OAEMJ,GAAcyF,KAAgB7F,EAAMN,OACrD,OAAOS,EAMP,MAJIA,IAAeC,GAAcyF,GAAc7F,EAAMN,QACnDyH,GA9yFK,CAAE7H,KAAM,QA+GjB,WACE,IAAItC,EAAWkJ,GAAa,GACxB8I,EAAUhS,EAASuJ,IAEvB,OAAOgB,GACLvK,EAASqK,SACT2H,EAAUhP,EAAMN,OAASM,EAAMkM,OAAO8C,GAAW,KACjDA,EAAUhP,EAAMN,OACZiH,GAAoBqI,EAASA,EAAU,GACvCrI,GAAoBqI,EAASA,IAyrF7BC,M,6BCzrGV,mOAKO,SAASrJ,EAAuBL,EAAMC,GAC3C,OAAOA,EAAK0J,QAAO,SAAUC,EAAQC,GACnC,MAAO,CACL9P,KAAM,SACN6F,SAAUiK,EAAQ,GAClBC,KAAMF,EACNG,MAAOF,EAAQ,MAEhB7J,GAGE,SAASG,EAA+BH,EAAMC,EAAM7G,GACzD,MAAMsO,EAAOzH,EAAK+J,OAIlB,OAHY,OAAR5Q,GACFsO,EAAK3F,KAAK3I,GAELsO,EAAKiC,QAAO,SAAUC,EAAQC,GACnC,MAAO,CACL9P,KAAM,SACN6F,SAAU,IACVkK,KAAMF,EACNG,MAAOF,KAER7J,GAGE,SAAS0E,EAAoBD,EAAO/J,GACzC,MAAMuP,EAAUvP,EAAQ7B,KAAI,SAAUgR,GACpC,MAAO,CACLK,OAAQL,EAAQ,GAChBlS,SAAUkS,EAAQ,OAGtB,MAAO,CACL9P,KAAM,gBACN0K,QACAwF,WAIG,SAASnB,EAAW9I,EAAMC,GAC/B,MAAO,CACLlG,KAAM,OACNoQ,SAAU,CAACnK,GAAMoK,OAAOnK,M,6JC3C5B,SAASoK,EAAOtQ,EAAMuQ,EAAMC,GAAa,GACvC,MAAO,CACLxQ,KAAMA,EACNuQ,KAAMA,EACNC,WAAYA,GAIhB,SAASC,EAASF,EAAMC,GAAa,GACnC,OAAOF,EAAMvK,EAAA,GAAUwK,EAAMC,GAGxB,MAAME,EAAgBD,EAAQ,aACxB9V,EAAc8V,EAAQ,UACtBE,EAAiBF,EAAQ,aACzBG,EAAaH,EAAQ,SACrBI,EAAgBJ,EAAQ,YACxBK,EAAmBL,EAAQ,gBAC3BM,EAAoBN,EAAQ,eAC5BO,EAAkBP,EAAQ,eAC1BQ,EAAcR,EAAQ,UAE5B,SAASS,EAAUX,EAAMC,GAAa,GAC3C,OAAOF,EAAMvK,EAAA,IAAWwK,EAAMC,GAGzB,MAAMW,EAAqBD,EAAS,iBASpC,SAASE,EAAU1X,EAAQ,GAChC,MAAO,CAAEsG,KAAM+F,EAAA,OAAcsL,MAAO3X,GAG/B,MAAM4X,EAAMF,EAAS,GAEfG,EAAWH,GAAU,G,oBCxC3B,SAAS3Q,EAAO+Q,EAAQ7Q,EAAU,IACvC,QAAeC,IAAX4Q,EACF,MAAM,IAAI1T,MAAM,qBAGlB,MAAM2T,EAAY9Q,EAAQ8Q,WAAa,SAuBvC,OAlBoBD,EAAOE,MAAM,SACD5S,IAAItE,IAClC,IAAImX,EACJ,IACEA,EAAa,IAAYlR,MAAMjG,GAC/B,MAAO8V,GACP,GAAmB,gBAAfA,EAAMtX,KAGR,MAAMsX,EAFNqB,EAAa,CAAE3R,KAAM,eAQzB,MAHkB,WAAdyR,IACFE,EAAWH,OAAShX,GAEfmX,ICzBJ,SAASC,EAAUlY,GACxB,GAAIA,EAAMsG,OAAS+F,EAAA,OACjB,OAAuB,IAAhBrM,EAAM2X,MAEf,MAAM,EAGD,SAASQ,EAAgBC,EAAKrI,EAAU/P,GAC7C,GAAI+P,EAASzJ,OAAS+F,EAAA,gBACpB,GAAIrM,EAAMsG,OAAS+F,EAAA,OACjB,MAAM,OAEH,GAAI0D,EAASzJ,OAAS+F,EAAA,UAC3B,GAAIrM,EAAMsG,OAAS+F,EAAA,OACjB,YAEG,GAAI0D,EAASzJ,OAAS+F,EAAA,cAC3B,GAAIrM,EAAMsG,OAAS+F,EAAA,KACjB,MAAM,MAEH,IAAI0D,EAASzJ,OAAS+F,EAAA,UAK3B,MAAM,EAAc,4BAJpB,GAAIrM,EAAMsG,OAAS+F,EAAA,KACjB,MAAM,EAKV+L,EAAIC,KAAKtI,EAASzQ,MAAQU,EAWrB,SAASsY,EAAWF,EAAKpY,GAC9BoY,EAAIG,IAAMvY,EAGL,SAASwY,EAAiBnC,EAAMlK,EAAUmK,GAC/C,MAAO,CACLhQ,KAAM+F,EAAA,OACNF,WACAkK,OACAC,SAIG,SAASmC,EAAezY,GAC7B,IAAI0Y,EAAM,GAUV,YATsBxR,IAAlBlH,EAAMwU,SAA2C,OAAlBxU,EAAMwU,UACvCkE,GAAO1Y,EAAMwU,cAEQtN,IAAnBlH,EAAMyU,UAA6C,OAAnBzU,EAAMyU,WACxCiE,GAAO,IAAM1Y,EAAMyU,eAEEvN,IAAnBlH,EAAM0U,UAA6C,OAAnB1U,EAAM0U,WACxCgE,GAAO,IAAM1Y,EAAM0U,UAEdiE,WAAWD,GAqBb,SAASE,EAAe5Y,EAAO6Y,GAAS,GAC7C,GAAIA,GAAU7Y,EAAMsG,OAAS+F,EAAA,OAC3B,MAAM,EAER,IAAIqM,EAAM,GACV,OAAQ1Y,EAAMsG,MACZ,KAAK+F,EAAA,OACHqM,EAAM1Y,EAAM2X,MAAMxR,WACduS,EAAII,WAAW,QACjBJ,EAAMA,EAAItL,UAAU,IAEtB,MACF,KAAKf,EAAA,OACHqM,EAAM1Y,EAAM8U,MACZ,MACF,KAAKzI,EAAA,KACHqM,EAAM,IAAM1Y,EAAM0W,SAAStR,IAAI2T,GAAKH,EAAcG,IAAInS,KAAK,KAAO,IAClE,MACF,QACE,MAAM,EAAc,6BAExB,OAAO8R,ECvGF,SAASM,EAAUhZ,EAAOoY,GAC/B,MAAMa,EAAWC,EAAalZ,EAAMsG,MACpC,QAAiBY,IAAb+R,EACF,MAAM,EAAc,oBAEtB,OAAOA,EAASjZ,EAAOoY,GAGzB,MAAMc,EAAe,GAIrBA,EAAa7M,EAAA,aAAqB,CAACrM,EAAOoY,KACxC,MAAM,GAKRc,EAAa7M,EAAA,QAAgB,CAACrM,EAAOoY,SACflR,IAAhBlH,EAAM2X,MACD3X,EAEF,CACLsG,KAAM+F,EAAA,OACNsL,MAAO,EAAwB3X,IAInCkZ,EAAa7M,EAAA,QAAgB,CAACrM,EAAOoY,IAC5BpY,EAGTkZ,EAAa7M,EAAA,MAAc,CAACrM,EAAOoY,KACV,IAAnBpY,EAAMmZ,SACDnZ,EAEF,CACLsG,KAAM+F,EAAA,KACNqK,SAAU1W,EAAM0W,SAAStR,KAAI,SAAUgR,GACrC,MAAMD,EAAS6C,EAAS5C,EAASgC,GACjC,GAAIjC,EAAO7P,OAAS+F,EAAA,OAIlB,MAAM,EAER,OAAO8J,KAETgD,UAAU,GAMdD,EAAa7M,EAAA,UAAkB,CAACrM,EAAOoY,KACrC,IAAIjC,EAASiC,EAAIC,KAAKrY,EAAMV,MAI5B,YAHe4H,IAAXiP,IACFA,EAASiC,EAAIC,KAAKrY,EAAMV,MAAQ,KAE3B6W,GAGT+C,EAAa7M,EAAA,gBAAwB,CAACrM,EAAOoY,KAC3C,MAAMjC,EAASiC,EAAIC,KAAKrY,EAAMV,MAC9B,QAAe4H,IAAXiP,EACF,MAAM,EAER,OAAOA,GAGT+C,EAAa7M,EAAA,cAAsB,CAACrM,EAAOoY,KACzC,MAAMjC,EAASiC,EAAIC,KAAKrY,EAAMV,MAC9B,QAAe4H,IAAXiP,EACF,MAAM,EAER,OAAOA,GAGT+C,EAAa7M,EAAA,WAAmB,CAACrM,EAAOoY,KACtC,MAAMnE,EAAO+E,EAAShZ,EAAMiU,KAAMmE,GAC5BlE,EAAQ8E,EAAShZ,EAAMkU,MAAOkE,GACpC,GAAIlE,EAAM5N,OAAS+F,EAAA,OACjB,MAAM,EAER,GAAI6H,EAAMyD,MAAQ,GAAKzD,EAAMyD,MAAQ1D,EAAKyC,SAAShQ,OACjD,MAAM,EAER,MAAO,CACLJ,KAAM+F,EAAA,OACNsL,MAAO1D,EAAKyC,SAASxC,EAAMyD,MAAQ,GAAGA,QAM1CuB,EAAa7M,EAAA,KAAa,CAACrM,EAAOoY,IACzBA,EAAIG,IAGbW,EAAa7M,EAAA,QAAgB,CAACrM,EAAOoY,KACnC,MAAM,GAKRc,EAAa7M,EAAA,OAAe,CAACrM,EAAOoY,KAClC,MAAMhM,EAAW4M,EAAShZ,EAAMoM,SAAUgM,GACpCa,EAAWG,EAAQhN,EAAS9F,MAClC,QAAiBY,IAAb+R,EACF,MAAM,EAAc,6BAEtB,OAAOA,EAASjZ,EAAMmM,SAAUC,IAGlC8M,EAAa7M,EAAA,QAAgB,CAACrM,EAAOoY,KACnC,MAAM/B,EAAO2C,EAAShZ,EAAMqW,KAAM+B,GAC5B9B,EAAQ0C,EAAShZ,EAAMsW,MAAO8B,GAC9Ba,EAAWI,EAAShD,EAAK/P,MAC/B,QAAiBY,IAAb+R,EACF,MAAM,EAAc,0BAEtB,OAAOA,EAASjZ,EAAMmM,SAAUkK,EAAMC,IAKxC,MAAM8C,EAAU,GAEhBA,EAAQ/M,EAAA,QAAgB,CAACF,EAAUC,KAC1B,CAAE9F,KAAM+F,EAAA,OAAcsL,MAAO2B,EAAoBnN,EAAUC,EAASuL,SAG7EyB,EAAQ/M,EAAA,QAAgB,CAACF,EAAUC,KACjC,MAAM,GAGRgN,EAAQ/M,EAAA,MAAc,CAACF,EAAUC,KACxB,CACL9F,KAAM+F,EAAA,KACNqK,SAAUtK,EAASsK,SAAStR,IAAI2T,IAAK,CAAGzS,KAAM+F,EAAA,OAAcsL,MAAO2B,EAAoBnN,EAAU4M,EAAEpB,UACnGwB,UAAU,IAMd,MAAME,EAAW,GA4CjB,SAASE,EAAmCpN,EAAU8H,EAAMuF,GAC1D,MAAO,CACLlT,KAAM+F,EAAA,KACNqK,SAAUzC,EAAKyC,SAAStR,IAAI,CAAC2T,EAAGha,KAAM,CAAGuH,KAAM+F,EAAA,OAAcsL,MAAO8B,EAAqBtN,EAAU4M,EAAEpB,MAAO6B,EAAO7B,UACnHwB,UAAU,GAId,SAASG,EAAqBnN,EAAUuN,GACtC,OAAQvN,GACN,IAAK,KAAM,OAAY,EAALuN,EAClB,QAAS,MAAM,EAAc,8BAIjC,SAASD,EAAsBtN,EAAUuN,EAAGC,GAC1C,GAAiB,MAAbxN,GAA0B,IAANwN,EACtB,MAAM,EAER,OAAQxN,GACN,IAAK,IAAK,OAAOuN,EAAIC,EACrB,IAAK,IAAK,OAAOD,EAAIC,EACrB,IAAK,IAAK,OAAOD,EAAIC,EACrB,IAAK,IAAK,OAAOD,EAAIC,EACrB,IAAK,IAAK,OAAOD,IAAMC,EAAI,EAAI,EAC/B,IAAK,KAAM,OAAOD,IAAMC,EAAI,EAAI,EAChC,IAAK,KAAM,OAAOD,GAAKC,EAAI,EAAI,EAC/B,IAAK,IAAK,OAAOD,EAAIC,EAAI,EAAI,EAC7B,IAAK,KAAM,OAAOD,GAAKC,EAAI,EAAI,EAC/B,IAAK,IAAK,OAAOD,EAAIC,EAAI,EAAI,EAC7B,QAAS,MAAM,EAAc,+BAxEjCN,EAAShN,EAAA,QAAgB,CAACF,EAAUkK,EAAMC,KACxC,GAAIA,EAAMhQ,OAAS+F,EAAA,OAAc,CAC/B,GAAIiK,EAAMhQ,OAAS+F,EAAA,KACjB,OAAOkN,EAAkCpN,EAAUmK,EAAOD,GAE5D,MAAM,EAER,MAAO,CAAE/P,KAAM+F,EAAA,OAAcsL,MAAO8B,EAAqBtN,EAAUkK,EAAKsB,MAAOrB,EAAMqB,SAGvF0B,EAAShN,EAAA,QAAgB,CAACF,EAAUkK,EAAMC,KACxC,GAAIA,EAAMhQ,OAAS+F,EAAA,OACjB,MAAM,EAER,GAAI,CAAC,KAAKuN,SAASzN,GACjB,MAAO,CAAE7F,KAAM+F,EAAA,OAAcyI,MAAO2E,EAAqBtN,EAAUkK,EAAKvB,MAAOwB,EAAMxB,QAEvF,GAAI,CAAC,IAAK,MAAM8E,SAASzN,GACvB,MAAO,CAAE7F,KAAM+F,EAAA,OAAcsL,MAAO8B,EAAqBtN,EAAUkK,EAAKvB,MAAOwB,EAAMxB,QAEvF,MAAM,GAGRuE,EAAShN,EAAA,MAAc,CAACF,EAAUkK,EAAMC,KACtC,GAAIA,EAAMhQ,OAAS+F,EAAA,KAAY,CAC7B,GAAIiK,EAAMhQ,OAAS+F,EAAA,OACjB,OAAOkN,EAAkCpN,EAAUkK,EAAMC,GAE3D,MAAM,EAER,GAAID,EAAKK,SAAShQ,SAAW4P,EAAMI,SAAShQ,OAC1C,MAAM,EAER,MAAO,CACLJ,KAAM+F,EAAA,KACNqK,SAAUL,EAAKK,SAAStR,IAAI,CAAC2T,EAAGha,KAAM,CAAGuH,KAAM+F,EAAA,OAAcsL,MAAO8B,EAAqBtN,EAAU4M,EAAEpB,MAAOrB,EAAMI,SAAS3X,GAAG4Y,UAC9HwB,UAAU,IChLd,MAAMU,EAAe,GAIrBA,EAAaxN,EAAA,UAAkB,CAAC2C,EAAYhP,EAAOoY,KAC7CpY,EAAMsG,OAAS+F,EAAA,SAGnB+L,EAAIC,KAAKrJ,EAAW1P,MAAQU,IAG9B6Z,EAAaxN,EAAA,gBAAwB,CAAC2C,EAAYhP,EAAOoY,KACvD,GAAIpY,EAAMsG,OAAS+F,EAAA,OACjB,MAAM,EAER+L,EAAIC,KAAKrJ,EAAW1P,MAAQU,GAG9B6Z,EAAaxN,EAAA,cAAsB,CAAC2C,EAAYhP,EAAOoY,KACrD,GAAIpY,EAAMsG,OAAS+F,EAAA,KACjB,MAAM,EAER+L,EAAIC,KAAKrJ,EAAW1P,MAAQU,GAG9B6Z,EAAaxN,EAAA,WAAmB,CAAC2C,EAAYhP,EAAOoY,KAClD,MAAMnE,EAAO,EAAoBjF,EAAWiF,KAAMmE,GAC5ClE,EAAQ,EAAoBlF,EAAWkF,MAAOkE,GACpD,GAAIlE,EAAM5N,OAAS+F,EAAA,OACjB,MAAM,EAER,GAAI6H,EAAMyD,MAAQ,GAAKzD,EAAMyD,MAAQ1D,EAAKyC,SAAShQ,OACjD,MAAM,EAER0R,EAAIC,KAAKrJ,EAAWiF,KAAK3U,MAAMoX,SAASxC,EAAMyD,MAAQ,GAAK3X,GC1CtD,SAAS8Z,EAAQ9Z,EAAOiH,EAAU,GAAI8S,GAAU,QAChC7S,IAAjBD,EAAQ+S,KAIZC,WAAW,KACT,IAAI9D,EAASlP,EAAQ+S,KAAKE,MAAQla,EAC9B+Z,IACF5D,GAAU,MAEZlP,EAAQ+S,KAAKE,IAAI/D,IAChB,GATDgE,QAAQC,IAAIpa,GAoCT,SAASqa,EAASC,EAAUrT,EAAU,SACrBC,IAAlBD,EAAQsT,OAAyC,KAAlBtT,EAAQsT,YAAuCrT,IAAvBD,EAAQuT,aACjEvT,EAAQuT,WAAavT,EAAQsT,MAAMvC,MAAM,MAAMyC,gBAEtBvT,IAAvBD,EAAQuT,gBASUtT,IAAlBD,EAAQD,OAQZiT,WAAW,IAAMhT,EAAQD,MAAMkT,IAAI,IAAK,GACxCjT,EAAQD,MAAM0T,GAAG,WAAY3B,IAC3B,GA/Da,KA+DTA,EAAE4B,QAAsB,CAC1B,MAAMxE,EAASlP,EAAQD,MAAMkT,MAC7BD,WAAW,IAAMhT,EAAQD,MAAMkT,IAAI,IAAK,IACf,IAArBI,EAASnE,IACXlP,EAAQD,MAAM4T,IAAI,gBAbtBX,WAAW,MAC0B,IAA/BK,EAASO,OAAO,YAClBR,EAAQC,EAAUrT,IAEnB,KAbHgT,WAAW,KACT,MAAM9D,EAASlP,EAAQuT,WAAWM,OACT,IAArBR,EAASnE,IACXkE,EAAQC,EAAUrT,IAEnB,GCnCP,MAAM8T,EAAc,GA8PpB,SAASC,EAAW5C,EAAKrI,EAAUC,GACjC,IJ3OK,SAAsBoI,EAAKrI,GAChC,OAAOA,EAASzQ,QAAQ8Y,EAAIC,KI0OvB,CAAsBD,EAAKrI,GAC9B,MAAM,EAER,EAAyBqI,EAAKrI,EAAU,EAAoB,CAC1DzJ,KAAM+F,EAAA,OACNF,SAAU,IACVkK,KAAMtG,EACNuG,MAAOtG,GACNoI,IAGL,SAAS6C,EAAUjW,EAAM+K,EAAUmL,EAAOC,GAwBxC,OAvBA,EAAanW,EAAMkW,EAAME,IAAI,GAC7B,EAAcpU,IACZ,GAAIA,SAAmD,KAAVA,EAC3C,OAAO,EAETkU,EAAMG,OAAO,KAGX,IAAIrb,EAFJ,EAAagH,EAAOkU,EAAME,IAIxBpb,EADE+P,EAASzJ,OAAS+F,EAAA,gBAAwB8O,EACpC,CAAE7U,KAAM+F,EAAA,OAAcyI,MAAO9N,GAE7B,ELtQT,SAA0B8Q,GAC/B,QAAe5Q,IAAX4Q,EACF,MAAM,IAAI1T,MAAM,qBAGlB,MAAMkX,EAAcxD,EAAOE,MAAM,SACjC,GAAIsD,EAAYC,OAAS,EACvB,MAAM,IAAInX,MAAM,oCAElB,MAAMoX,EAAaF,EAAY,GAC/B,IAAIrD,EACJ,IACEA,EAAa,IAAYlR,MAAMyU,GAC/B,MAAO5E,GACP,GAAmB,gBAAfA,EAAMtX,KACR,MAAMsX,EAIV,YAAsB1P,IAAf+Q,GAA4BA,EAAW3R,OAAS+F,EAAA,eAAuB4L,EAAWjY,MAAQ,CAAEsG,KAAM,eKmPvE,CAAuBU,GAAQkU,EAAM9C,KAI/DrI,EAASzJ,OAAS+F,EAAA,UAAkBrM,EAAMsG,OAAS+F,EAAA,OACrD0D,EAAW,CAAEzJ,KAAM+F,EAAA,aAAoB/M,KAAM,OAAOyQ,EAASzQ,KAAQwU,QAAQ,IAG/E,EAAyBoH,EAAM9C,IAAKrI,EAAU/P,MAE/Ckb,EAAME,IC/SY,UDkBvBL,EAAY1O,EAAA,qBAA6B,CAACW,EAAMkO,KAC9C,MAAMlb,EAAQ,EAAoBgN,EAAKhN,MAAOkb,EAAM9C,MFlB/C,SAAmBpJ,EAAYhP,EAAOoY,GAC3C,MAAMa,EAAWY,EAAa7K,EAAW1I,MACzC,QAAiBY,IAAb+R,EACF,MAAM,EAAc,8BAEfA,EAASjK,EAAYhP,EAAOoY,GEcnC,CAAoBpL,EAAKgC,WAAYhP,EAAOkb,EAAM9C,KAClD,EAAoB8C,EAAM9C,IAAKpY,IAGjC+a,EAAY1O,EAAA,gBAAwB,CAACW,EAAMkO,KACzC,EAAoBA,EAAM9C,IAAK,EAAoBpL,EAAKhN,MAAOkb,EAAM9C,OAGvE2C,EAAY1O,EAAA,aAAqB,CAACW,EAAMkO,KACtC,MAAM,GAKRH,EAAY1O,EAAA,aAAqB,CAACW,EAAMkO,KACtC,GAAmB,OAAflO,EAAKhN,MACP,MAAM,EAERkb,EAAMO,SAAW,EAAmB,EAAoBzO,EAAKhN,MAAOkb,EAAM9C,OAG5E2C,EAAY1O,EAAA,eAAuB,CAACW,EAAMkO,KACxC,MAAM,GAGRH,EAAY1O,EAAA,eAAuB,CAACW,EAAMkO,KACxC,GAAgC,IAA5BA,EAAMQ,WAAWhV,OACnB,MAAM,EAER,GAAIwU,EAAMS,MAAMT,EAAMQ,WAAWZ,OAAOxU,OAAS+F,EAAA,cAI/C,MAAM,EAHN6O,EAAMQ,WAAWpN,KAAK4M,EAAMnc,GAC5Bmc,EAAMU,iBAAmBV,EAAMQ,WAAWhV,QAM9CqU,EAAY1O,EAAA,SAAiB,CAACW,EAAMkO,KAClC,GAAsB,OAAlBlO,EAAK+C,UAAoC,OAAf/C,EAAKgB,OAA+B,OAAbhB,EAAKrH,IACxD,MAAM,EAER,EAAyBuV,EAAM9C,IAAKpL,EAAK+C,SAAU,EAAoB/C,EAAKgB,MAAOkN,EAAM9C,MACzF8C,EAAMQ,WAAWpN,KAAK4M,EAAMnc,GACvB,EAAmB,EAAoB,EAA0BiO,EAAK+C,SAAU,KAAM/C,EAAKrH,KAAMuV,EAAM9C,QAC1G8C,EAAMU,iBAAmBV,EAAMQ,WAAWhV,SAI9CqU,EAAY1O,EAAA,WAAmB,CAACW,EAAMkO,KACpC,GAAmB,OAAflO,EAAKhN,MACP,MAAM,EAERkb,EAAMQ,WAAWpN,KAAK4M,EAAMnc,GACvB,EAAmB,EAAoBiO,EAAKhN,MAAOkb,EAAM9C,QAC5D8C,EAAMU,iBAAmBV,EAAMQ,WAAWhV,SAI9CqU,EAAY1O,EAAA,YAAoB,CAACW,EAAMkO,KACrC,GAAmB,OAAflO,EAAKhN,MACP,MAAM,EAERkb,EAAMQ,WAAWpN,KAAK4M,EAAMnc,IAG9Bgc,EAAY1O,EAAA,cAAsB,CAACW,EAAMkO,KACvC,GAAgC,IAA5BA,EAAMQ,WAAWhV,OACnB,MAAM,EAER,MAAMoR,EAASoD,EAAMQ,WAAWZ,MAC1BU,EAAaN,EAAMS,MAAM7D,GAC/B,GAAI0D,EAAWlV,OAAS+F,EAAA,SACZmP,EAAWlV,OAAS+F,EAAA,WACpBmP,EAAWlV,OAAS+F,EAAA,WAC1BmP,EAAWlV,OAAS+F,EAAA,SACtB2O,EAAUE,EAAM9C,IAAKoD,EAAWzL,SAA8B,OAApByL,EAAWxL,KAAgBwL,EAAWxL,KAAO,GACnF,EAAmB,EAAoB,EAA0BwL,EAAWzL,SAAU,KAAMyL,EAAW7V,KAAMuV,EAAM9C,QACrH8C,EAAMQ,WAAWpN,KAAKwJ,GACtBoD,EAAMnc,EAAI+Y,IAEH,EAAmB,EAAoB0D,EAAWxb,MAAOkb,EAAM9C,QACxE8C,EAAMQ,WAAWpN,KAAKwJ,GACtBoD,EAAMnc,EAAI+Y,QAEP,GAAI0D,EAAWlV,OAAS+F,EAAA,eACfmP,EAAWlV,OAAS+F,EAAA,cAGlC,MAAM,EAAc,qBAAqBmP,EAAWlV,OAIxDyU,EAAY1O,EAAA,gBAAwB,CAACW,EAAMkO,KACzC,MAAM,GAGRH,EAAY1O,EAAA,gBAAwB,CAACW,EAAMkO,OAG3CH,EAAY1O,EAAA,eAAuB,CAACW,EAAMkO,KACxCA,EAAMW,YAAc7O,EAAK9I,SACzBgX,EAAMnc,GAAK,GAGbgc,EAAY1O,EAAA,eAAuB,CAACW,EAAMkO,KACxC,GAAsB,OAAlBlO,EAAK+C,UAAkC,OAAb/C,EAAKrH,IACjC,MAAM,EAERqV,EAAUE,EAAM9C,IAAKpL,EAAK+C,SAAU,GACpCmL,EAAMY,yBAA2B,EAAmB,EAAoB,EAA0B9O,EAAK+C,SAAU,KAAM/C,EAAKrH,KAAMuV,EAAM9C,OAG1I2C,EAAY1O,EAAA,eAAuB,CAACW,EAAMkO,KACxC,GAAsB,OAAlBlO,EAAK+C,UAAkC,OAAb/C,EAAKrH,IACjC,MAAM,EAERqV,EAAUE,EAAM9C,IAAKpL,EAAK+C,SAAU,GACpCmL,EAAMY,yBAA2B,EAAmB,EAAoB,EAA0B9O,EAAK+C,SAAU,KAAM/C,EAAKrH,KAAMuV,EAAM9C,OAG1I2C,EAAY1O,EAAA,eAAuB,CAACW,EAAMkO,KACxC,GAAmB,OAAflO,EAAKgE,OAA0C,IAAxBhE,EAAKwJ,QAAQ9P,QAAgBsG,EAAKwJ,QAAQ9P,OAAS,EAC5E,MAAM,EAeR,OAbA,EAAa,EAAwB,EAAoBsG,EAAKgE,MAAOkK,EAAM9C,MAAM,GAAO8C,EAAME,IAC9FpO,EAAKwJ,QAAQuF,QAAQ,CAACC,EAAQC,KAC5B,EAAa,GAAGA,EAAM,KAAK,EAAwBD,EAAOvF,UAAWyE,EAAME,MAE7E,EAAcpU,IACZ,MAAMkV,EJ1CH,SAAqBxD,GAC1B,GAAIA,SAA6C,KAARA,GAAcA,EAAIhS,OAAS,EAClE,OAEF,MAAMwV,EAAQxD,EAAIxS,WAAW,GAAK,IAAIA,WAAW,GACjD,OAAIgW,EAAQ,GAAKA,EAAQ,OAAzB,EAGOA,EIkCS,CAAqBlV,GACnC,QAAcE,IAAVgV,GAAiC,IAAVA,GAAeA,EAAQlP,EAAKwJ,QAAQ9P,OAC7D,OAAO,EAETwU,EAAMW,YAAc7O,EAAKwJ,QAAQ0F,EAAQ,GAAGhY,SAC5CgX,EAAMnc,EAAI,EACVmc,EAAMG,UACLH,EAAME,IC5JY,WDgKvBL,EAAY1O,EAAA,kBAA0B,CAACW,EAAMkO,KAC3C,MAAM,GAGRH,EAAY1O,EAAA,iBAAyB,CAACW,EAAMkO,ICtKxB,OD2KpBH,EAAY1O,EAAA,eAAuB,CAACW,EAAMkO,IC3KtB,OD+KpBH,EAAY1O,EAAA,iBAAyB,CAACW,EAAMkO,KAC1C,GAAsB,OAAlBlO,EAAK+C,SACP,MAAM,EJjJH,IAAyBqI,EAAKrI,EAALqI,EImJL8C,EAAM9C,IJnJIrI,EImJC/C,EAAK+C,gBJlJlCqI,EAAIC,KAAKtI,EAASzQ,OIqJ3Byb,EAAY1O,EAAA,qBAA6B,CAACW,EAAMkO,KAC9C,MAAM,GAGRH,EAAY1O,EAAA,kBAA0B,CAACW,EAAMkO,KAC3C,MAAM,GAGRH,EAAY1O,EAAA,kBAA0B,CAACW,EAAMkO,KAC3C,MAAM,GAKRH,EAAY1O,EAAA,SAAiB,CAACW,EAAMkO,KACf,OAAflO,EAAKhN,OACP,EAAa,EAAwB,EAAoBgN,EAAKhN,MAAOkb,EAAM9C,MAAO8C,EAAME,KAI5FL,EAAY1O,EAAA,OAAe,CAACW,EAAMkO,KAChC,GAAsB,OAAlBlO,EAAK+C,SAAmB,CAC1B,GAAkB,OAAd/C,EAAKhI,KACP,MAAM,EAER,MAAM,EAER,IAAIA,EAAO,IAIX,OAHkB,OAAdgI,EAAKhI,OACPA,EAAO,EAAwB,EAAoBgI,EAAKhI,KAAMkW,EAAM9C,MAAM,IAErE6C,EAASjW,EAAMgI,EAAK+C,SAAUmL,GAAO,IAG9CH,EAAY1O,EAAA,QAAgB,CAACW,EAAMkO,KACjC,GAAsB,OAAlBlO,EAAK+C,SACP,MAAM,EAGR,OAAOkL,EJ1JF,SAA2BlL,GAChC,IAAI2I,EAAM3I,EAASzQ,KACnB,OAAQyQ,EAASzJ,MACf,KAAK+F,EAAA,SACL,KAAKA,EAAA,eACH,MACF,KAAKA,EAAA,aACHqM,EAAMA,EAAItL,UAAU,GACf2C,EAAS+D,SACZ4E,EAAM,KAAKA,GAEb,MACF,QACE,MAAM,EAAc,gCAExB,OAAOA,EI0IM,CAA2B1L,EAAK+C,UAC7B,KAAa/C,EAAK+C,SAAUmL,GAAO,IAGrDH,EAAY1O,EAAA,WAAmB,CAACW,EAAMkO,KACpC,MAAM,GAGRH,EAAY1O,EAAA,WAAmB,CAACW,EAAMkO,KACpC,MAAM,GAGRH,EAAY1O,EAAA,QAAgB,CAACW,EAAMkO,KACjC,GAAiB,OAAblO,EAAKsF,KAAgC,OAAhBtF,EAAKC,QAAkC,OAAfD,EAAKhN,MACpD,MAAM,EAER,MAAMsS,EAAM,EAAoBtF,EAAKsF,IAAK4I,EAAM9C,KAC1CnL,EAAS,EAAoBD,EAAKC,OAAQiO,EAAM9C,KACtD,GAAI9F,EAAIhM,OAAS+F,EAAA,QAAgBY,EAAO3G,OAAS+F,EAAA,OAC/C,MAAM,EAER,GAAIiG,EAAIqF,MAAQ,GAAKrF,EAAIqF,MAAQuD,EAAMiB,MAAQlP,EAAO0K,MAAQ,GAAK1K,EAAO0K,MAAQuD,EAAMkB,QACtF,MAAM,EAGR,EAAa,EAAwB,EAAoBpP,EAAKhN,MAAOkb,EAAM9C,MAAO8C,EAAME,KAG1FL,EAAY1O,EAAA,SAAiB,CAACW,EAAMkO,KAClC,MAAM,GAGRH,EAAY1O,EAAA,UAAkB,CAACW,EAAMkO,KACnC,MAAM,GAGRH,EAAY1O,EAAA,SAAiB,CAACW,EAAMkO,KAClC,MAAM,GAGRH,EAAY1O,EAAA,KAAa,CAACW,EAAMkO,KAC9B,MAAM,GAGRH,EAAY1O,EAAA,MAAc,CAACW,EAAMkO,KAC/B,MAAM,GExQR,MAGMmB,EAAQ,GACRC,EAAa,GACnB,IAAIC,GAAU,EACVC,EAAa,EACjB,MAEMC,EAAcC,SAASC,eAAe,MAE5C,SAASC,EAAWtd,GAClB,MAAMud,EAAQ,IAAIC,MAAMxd,GACxBmd,EAAYM,cAAcF,GAG5B,SAASG,KACS,IAAZT,IACFA,GAAU,EACVK,EAAU,SACVK,OAAOC,YApBa,cAoBgB,MAIxC,SAASC,EAAYC,EAAMC,EAAOC,GAChC,MAAMC,EAASf,IAcf,OAZArC,QAAQqD,MAAM,SAASD,YAEvBlB,EAAMkB,GAAU,CACdH,KAAMA,EACNC,MAAOI,KAAKC,IAAIL,EA7BC,MA8BjBM,aAASzW,EACToW,QAASA,EACTM,iBAAiB,EACjBC,WAAW,GAGbb,IACOO,EAcT,SAASO,EAAaP,GAGpB,GAFApD,QAAQqD,MAAM,SAASD,gBAEjBA,KAAUlB,GACd,MAAM,IAAIjY,MAAM,2BAA2BmZ,gBAE7ClB,EAAMkB,GAAQM,WAAY,EAG5B,SAASE,EAAYR,GACnBpD,QAAQqD,MAAM,SAASD,kBAChBlB,EAAMkB,GAyGR,SAASS,EAAoBC,IA/HpC,SAAqBV,GAGnB,GAFApD,QAAQqD,MAAM,SAASD,eAEjBA,KAAUlB,GAEd,MADAlC,QAAQqD,MAAMnB,GACR,IAAIjY,MAAM,yBAAyBmZ,gBAE3ClB,EAAMkB,GAAQM,WAAY,EAC1Bb,IAwHAkB,CAAWD,GAZbhB,OAAOkB,iBAAiB,WA3FxB,SAAwBtB,GACtB,GAAMA,EAAM/E,SAAWmF,QApED,gBAoEWJ,EAAMuB,KACrC,OAGFvB,EAAMwB,kBAEN,MAAMC,EAAOC,YAAYC,MACnBC,EAAUhf,OAAOif,KAAKrC,GAC5B,IAAIsC,EAAmB,EACnBC,EAAqB,EAEzBH,EAAQ1C,QAAQwB,IACd,MAAMsB,EAAOxC,EAAMkB,GAEnB,IAAIuB,EACJ,IAAuB,IAAnBD,EAAKhB,UACPiB,EAAO,EACPF,GAAsB,OAItB,GAFAD,GAAoB,OAECzX,IAAjB2X,EAAKlB,SAAyBkB,EAAKvB,QACrCwB,EAAO,MACF,CACL,MAAMC,EAAeT,EAAOO,EAAKlB,QACjCmB,EAAOrB,KAAKuB,MAAMD,EAAeF,EAAKxB,OAItCyB,EAAO,IACTD,EAAKlB,QAAUW,GAGjB,IAAK,IAAIvf,EAAI,EAAGA,EAAI+f,EAAM/f,IAAK,CAC7B,IAAIoX,EAEJ,IACEA,EAAS0I,EAAKzB,OACd,MAAO6B,GACP9I,ED3Ge,UC6GXmG,EAAW5V,OAtGD,MAuGZ4V,EAAWhO,KAAK2Q,GAChBhC,OAAOC,YA9GK,mBA8GsB,MAItC,GDpHc,SCoHV/G,GACM0I,EAAKvB,SACJuB,EAAKjB,iBDrHC,YCqHkBzH,EAA4B,CAC7D4H,EAAWR,GACXoB,GAAoB,EACpB,MAGF,GD1HiB,YC0HbxI,EAA2B,CAC7B2H,EAAYP,GACZoB,GAAoB,EACpBC,GAAsB,EACtB,MAGF,GDpIe,UCoIXzI,EACF,SAKmB,IAArBwI,GACFpC,GAAU,EAERK,EADEgC,EAAqB,EACb,UAEA,SAGZ3B,OAAOC,YAhJa,cAgJgB,QAcU,GAClDD,OAAOkB,iBAAiB,WAXxB,SAA0BtB,GACxB,GAAMA,EAAM/E,SAAWmF,QApJH,qBAoJaJ,EAAMuB,MAInC9B,EAAW5V,OAAS,EACtB,MAAM4V,EAAWxB,SAK+B,GAsB7C,MAAMJ,EAAK+B,EAAY0B,iBAAiB5d,KAAKkc,GACjCA,EAAYyC,oBAAoB3e,KAAKkc,GCjLjD,SAAS0C,GAAKxD,EAAO1U,EAAU,IACpC,IAAIqU,EAAc,QACKpU,IAAnBD,EAAQ6Q,SAERwD,EADEhW,MAAMC,QAAQ0B,EAAQ6Q,QACV7Q,EAAQ6Q,OAER7Q,EAAQ6Q,OAAOE,MAAM,UAIvC,IAAIoH,EAAc,OACUlY,IAAxBD,EAAQmY,cACVA,EAAcnY,EAAQmY,aAGxB,MAAMlE,EAAQ,CACZ9C,ITQK,CACLC,KAAM,GACNE,IAAKb,KSRL2D,YAAQnU,EACRmY,oBAAgBnY,EAEhBsW,OAAyB,IAAlBvW,EAAQuW,MACflC,YAAaA,EAEbO,iBAAa3U,EACbuU,cAAUvU,EACV4U,8BAA0B5U,EAE1BoY,aAAc,GACdC,SAAU,EAEV7D,WAAY,GACZE,sBAAkB1U,EAClBsY,0BAAsBtY,EAEtBnI,EAAG,EACH4c,MAAOA,EAEPrB,SAAUrT,EAAQqT,SAClB8E,YAAaA,EAEbK,OAAQ,UAERtD,KAAM,EACNC,QAAS,GAEThB,GAAI,CACFpB,KAAM/S,EAAQ+S,KACdhT,MAAOC,EAAQD,MACfuT,MAAOtT,EAAQsT,MACfmF,mBAAyCxY,IAA1BD,EAAQyY,gBAAyD,IAA1BzY,EAAQyY,cAC9DC,sBAA+CzY,IAA7BD,EAAQ0Y,mBAA+D,IAA7B1Y,EAAQ0Y,iBACpEC,wBAAmD1Y,IAA/BD,EAAQ2Y,qBAAmE,IAA/B3Y,EAAQ2Y,mBACxEC,mBAAyC3Y,IAA1BD,EAAQ4Y,gBAAyD,IAA1B5Y,EAAQ4Y,gBAI5DtC,GDmGyBH,ECnGO,IAgBxC,SAAkBlC,GAChB,IAAI/E,EAEJ,IACE+E,EAAMuE,OAAS,UACftJ,EAsCJ,SAAkB+E,GAmBhB,GAlBIA,EAAMsC,OACRrD,QAAQqD,MAAM,CACZsC,KAAM5E,EAAMnc,EACZ8c,YAAaX,EAAMW,YACnBJ,SAAUP,EAAMO,SAChBC,WAAYR,EAAMQ,WAClBE,iBAAkBV,EAAMU,iBACxB4D,qBAAsBtE,EAAMsE,qBAC5B1H,OAAQoD,EAAMpD,OACdM,IAAK8C,EAAM9C,WAIclR,IAAzBgU,EAAMmE,iBACRnE,EAAMmE,iBACNnE,EAAMmE,oBAAiBnY,GAGrBgU,EAAMnc,GAAKmc,EAAMS,MAAMjV,OAAQ,CACjC,QAA0BQ,IAAtBgU,EAAMW,YACR,MAAM,EAGR,QAAuB3U,IAAnBgU,EAAMO,eAA6DvU,IAAnCgU,EAAMY,yBACxC,MAAM,EAOR,OAJIZ,EAAMsC,OACRrD,QAAQqD,MAAMtC,EAAM9C,KFvJN,OE+JlB,GAFA8C,EAAMqE,WAEFrE,EAAMqE,UAAYrE,EAAMoE,aAC1B,MAAM,EAAc,YAGtB,MAAMtS,EAAOkO,EAAMS,MAAMT,EAAMnc,GACzBuH,EAAO0G,EAAK1G,KAIlB,QAA+BY,IAA3BgU,EAAMU,iBAAgC,CACxC,MAAMmE,EAAiB7E,EAAMQ,WAAWR,EAAMQ,WAAWhV,OAAS,GAC5DsZ,EAAY9E,EAAMS,MAAMoE,GAoB9B,OAlBIzZ,IAAS+F,EAAA,cACV/F,IAAS+F,EAAA,eAAuB2T,EAAU1Z,OAAS+F,EAAA,iBACpD6O,EAAMQ,WAAWZ,MAEbI,EAAMQ,WAAWhV,OAASwU,EAAMU,mBAClCV,EAAMU,sBAAmB1U,KAIzBZ,IAAS+F,EAAA,SACX/F,IAAS+F,EAAA,YACT/F,IAAS+F,EAAA,WACR/F,IAAS+F,EAAA,gBAAsD,IAA/B6O,EAAMsE,sBACtClZ,IAAS+F,EAAA,eAAuB2T,EAAU1Z,OAAS+F,EAAA,gBACpD6O,EAAMQ,WAAWpN,KAAK4M,EAAMnc,QAG9Bmc,EAAMsE,qBAAuBlZ,IAAS+F,EAAA,aAQxC,GAJA6O,EAAMsE,0BAAuBtY,OAIHA,IAAtBgU,EAAMW,YAAV,CAUA,QAAuB3U,IAAnBgU,EAAMO,SAAwB,CAChC,MAAMwE,GAAmC,IAAnB/E,EAAMO,SAG5B,GAFAP,EAAMO,cAAWvU,EAEbZ,IAAS+F,EAAA,cAOX,OANA6O,EAAMQ,WAAWpN,KAAK4M,EAAMnc,QAExBkhB,IACF/E,EAAMU,iBAAmBV,EAAMQ,WAAWhV,SAM9C,GAAIuZ,EACF,OAMJ,QAAuC/Y,IAAnCgU,EAAMY,yBAAwC,CAChD,MAAMoE,GAAmE,IAAnChF,EAAMY,yBAG5C,GAFAZ,EAAMY,8BAA2B5U,EAE7BgZ,EACF,OAMJ,IAAmB,IAAflT,EAAKmC,MACP,MAAM,EAER,IAAkB,IAAdnC,EAAKiD,KACP,MAAM,EAGR,OH9OK,SAAmBjD,EAAMkO,GAC9B,MAAMjC,EAAW8B,EAAY/N,EAAK1G,MAClC,QAAiBY,IAAb+R,EACF,MAAM,EAAc,cAEtB,OAAOA,EAASjM,EAAMkO,GGyOf,CAAmBlO,EAAMkO,GAhD1B5U,IAAS+F,EAAA,gBAAwBW,EAAK9I,WAAagX,EAAMW,cAC3DX,EAAMW,iBAAc3U,GAnHbiZ,CAAQjF,GACjB,MAAO+D,GAGP,GAFA/D,EAAMuE,OAAS,eAECvY,IAAZ+X,EAAG3Y,KACL,MAAM2Y,EAGR,GAAI/D,EAAMnc,EAAImc,EAAMS,MAAMjV,SAA4B,IAAlBuY,EAAGnI,WAAqB,CAC1D,IAAIgB,EAASoD,EAAMS,MAAMT,EAAMnc,GAAG+Y,YACR5Q,IAAtBgU,EAAMI,cACRxD,EAASoD,EAAMI,YAAYJ,EAAMnc,IAEnCkgB,EAAGnH,OAAS,CACV5D,MAAOgH,EAAMnc,EACbiO,KAAM8K,IJlFP,SAAiBmH,EAAIhY,EAAU,IACpC,GAAKgY,EAAG3Y,OAAS+F,EAAA,KAAapF,EAAQyY,eACjCT,EAAG3Y,OAAS+F,EAAA,MAAcpF,EAAQ0Y,iBAErC,YADAxF,QAAQC,IAAI6E,GAGd,IAAIjf,EAAQ,GACRif,EAAG3Y,OAAS+F,EAAA,GACdrM,GAAS,OACAif,EAAG3Y,OAAS+F,EAAA,IACrBrM,GAAS,UAETA,GAAS,eAEXA,GAASif,EAAGpI,KACR5P,EAAQ2Y,yBAAoC1Y,IAAd+X,EAAGnH,aAA4C5Q,IAApB+X,EAAGnH,OAAO5D,QACrElU,GAAS,YAAYif,EAAGnH,OAAO5D,OAE7BjN,EAAQ4Y,oBAA+B3Y,IAAd+X,EAAGnH,aAA2C5Q,IAAnB+X,EAAGnH,OAAO9K,OAChEhN,GAAS,KAAKif,EAAGnH,OAAO9K,MAE1B8M,EAAO9Z,EAAOiH,GIiEZ,CAAagY,EAAI/D,EAAME,IACvBjF,EFxGgB,OEuHlB,MFvHkB,SE2GdA,GACmB,YAAjB+E,EAAMuE,SACRvE,EAAMuE,OAAS,aAGMvY,IAAnBgU,EAAMZ,UACRL,WAAWiB,EAAMZ,SAAU,IAG7BY,EAAMnc,GAAK,EAGNoX,EAxDqCiK,CAAQlF,GDmGfmC,ECnGuBnC,EAAMkE,YDoG3DjC,EAAWC,EAAMC,IADnB,IAA0BD,EAAMC,EC7FrC,OALAnC,EAAMG,OAAUf,IACdY,EAAMmE,eAAiB/E,EACvB,EAA0BiD,IAGrB,CACL8C,UAAW,IAAMnF,EAAMuE,OACvBa,SAAU,IAAuB,YAAjBpF,EAAMuE,QAAyC,YAAjBvE,EAAMuE,OACpDc,KAAM,MJEH,SAAkBtZ,EAAU,SACXC,IAAlBD,EAAQD,OACVC,EAAQD,MAAM4T,IAAI,YIHhB,CAAcM,EAAME,ID8FxB2C,EC7F6BR","file":"ti.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// types\r\n// =====\r\n\r\n// ----- Errors -----\r\n\r\nexport const ti = 'ti'\r\nexport const lib = 'lib'\r\nexport const SyntaxError = 'SyntaxError'\r\n\r\n// ----- Values -----\r\n\r\nexport const NUMBER = 'number'\r\nexport const LIST = 'list'\r\nexport const STRING = 'string'\r\n\r\n// ----- Tokens -----\r\n\r\nexport const ANS = 'ans'\r\nexport const GetKey = 'GetKey'\r\n\r\n// ----- Variables -----\r\n\r\nexport const VARIABLE = 'variable'\r\nexport const STRINGVARIABLE = 'stringVariable'\r\nexport const LISTVARIABLE = 'listVariable'\r\nexport const LISTINDEX = 'listIndex'\r\n\r\n// ----- Expressions -----\r\n\r\nexport const BINARY = 'binary'\r\nexport const UNARY = 'unary'\r\n\r\n// ----- Statements -----\r\n\r\nexport const ValueStatement = 'value'\r\nexport const AssignmentStatement = 'assign'\r\n\r\n// ----- CTL -----\r\n\r\nexport const IfStatement = 'IfStatement'\r\nexport const ThenStatement = 'ThenStatement'\r\nexport const ElseStatement = 'ElseStatement'\r\nexport const ForLoop = 'ForLoop'\r\nexport const WhileLoop = 'WhileLoop'\r\nexport const RepeatLoop = 'RepeatLoop'\r\nexport const EndStatement = 'EndStatement'\r\nexport const PauseStatement = 'PauseStatement'\r\nexport const LabelStatement = 'LabelStatement'\r\nexport const GotoStatement = 'GotoStatement'\r\nexport const IncrementSkip = 'IncrementSkip'\r\nexport const DecrementSkip = 'DecrementSkip'\r\nexport const MenuStatement = 'MenuStatement'\r\nexport const ProgramStatement = 'ProgramStatement'\r\nexport const ReturnStatement = 'ReturnStatement'\r\nexport const StopStatement = 'StopStatement'\r\nexport const DelVarStatement = 'DelVarStatement'\r\nexport const GraphStyleStatement = 'GraphStyleStatement'\r\nexport const OpenLibStatement = 'OpenLibStatement'\r\nexport const ExecLibStatement = 'ExecLibStatement'\r\n\r\n// ----- I/O -----\r\n\r\nexport const Input = 'Input'\r\nexport const Prompt = 'Prompt'\r\nexport const Display = 'display'\r\nexport const DispGraph = 'DispGraph'\r\nexport const DispTable = 'DispTable'\r\nexport const Output = 'Output'\r\nexport const ClrHome = 'ClrHome'\r\nexport const ClrTable = 'ClrTable'\r\nexport const GetCalc = 'GetCalc'\r\nexport const Get = 'Get'\r\nexport const Send = 'Send'\r\n","// Generated by PEG.js v0.11.0-master.0b102d2, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \")\";\n  var peg$c1 = \"&theta\";\n  var peg$c2 = \"Str\";\n  var peg$c3 = \"&L\";\n  var peg$c4 = \"&list\";\n  var peg$c5 = \"(\";\n  var peg$c6 = \"&E\";\n  var peg$c7 = \".\";\n  var peg$c8 = \"\\\"\";\n  var peg$c9 = \"Ans\";\n  var peg$c10 = \"getKey\";\n  var peg$c11 = \"{\";\n  var peg$c12 = \"}\";\n  var peg$c13 = \"&-\";\n  var peg$c14 = \"*\";\n  var peg$c15 = \"/\";\n  var peg$c16 = \"+\";\n  var peg$c17 = \"-\";\n  var peg$c18 = \"=\";\n  var peg$c19 = \"!=\";\n  var peg$c20 = \">=\";\n  var peg$c21 = \">\";\n  var peg$c22 = \"<=\";\n  var peg$c23 = \"<\";\n  var peg$c24 = \",\";\n  var peg$c25 = \"->\";\n  var peg$c26 = \"If \";\n  var peg$c27 = \"Then\";\n  var peg$c28 = \"Else\";\n  var peg$c29 = \"For(\";\n  var peg$c30 = \"While \";\n  var peg$c31 = \"Repeat \";\n  var peg$c32 = \"End\";\n  var peg$c33 = \"Pause\";\n  var peg$c34 = \"Lbl \";\n  var peg$c35 = \"Goto \";\n  var peg$c36 = \"IS>(\";\n  var peg$c37 = \"DS<(\";\n  var peg$c38 = \"Menu(\";\n  var peg$c39 = \"prgm\";\n  var peg$c40 = \"Return\";\n  var peg$c41 = \"Stop\";\n  var peg$c42 = \"DelVar \";\n  var peg$c43 = \"GraphStyle(\";\n  var peg$c44 = \"OpenLib(\";\n  var peg$c45 = \"ExecLib(\";\n  var peg$c46 = \"Input \";\n  var peg$c47 = \"Prompt \";\n  var peg$c48 = \"Disp \";\n  var peg$c49 = \"DispGraph\";\n  var peg$c50 = \"DispTable\";\n  var peg$c51 = \"Output(\";\n  var peg$c52 = \"ClrHome\";\n  var peg$c53 = \"ClrTable\";\n  var peg$c54 = \"GetCalc(\";\n  var peg$c55 = \"Get(\";\n  var peg$c56 = \"Send(\";\n\n  var peg$r0 = /^[A-Z]/;\n  var peg$r1 = /^[A-Z0-9]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[1-6]/;\n  var peg$r4 = /^[+\\-]/;\n  var peg$r5 = /^[^\"]/;\n\n  var peg$e0 = peg$anyExpectation();\n  var peg$e1 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e2 = peg$classExpectation([[\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e4 = peg$literalExpectation(\")\", false);\n  var peg$e5 = peg$literalExpectation(\"&theta\", false);\n  var peg$e6 = peg$literalExpectation(\"Str\", false);\n  var peg$e7 = peg$literalExpectation(\"&L\", false);\n  var peg$e8 = peg$classExpectation([[\"1\", \"6\"]], false, false);\n  var peg$e9 = peg$literalExpectation(\"&list\", false);\n  var peg$e10 = peg$literalExpectation(\"(\", false);\n  var peg$e11 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e12 = peg$literalExpectation(\"&E\", false);\n  var peg$e13 = peg$literalExpectation(\".\", false);\n  var peg$e14 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e15 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e16 = peg$literalExpectation(\"Ans\", false);\n  var peg$e17 = peg$literalExpectation(\"getKey\", false);\n  var peg$e18 = peg$literalExpectation(\"{\", false);\n  var peg$e19 = peg$literalExpectation(\"}\", false);\n  var peg$e20 = peg$literalExpectation(\"&-\", false);\n  var peg$e21 = peg$literalExpectation(\"*\", false);\n  var peg$e22 = peg$literalExpectation(\"/\", false);\n  var peg$e23 = peg$literalExpectation(\"+\", false);\n  var peg$e24 = peg$literalExpectation(\"-\", false);\n  var peg$e25 = peg$literalExpectation(\"=\", false);\n  var peg$e26 = peg$literalExpectation(\"!=\", false);\n  var peg$e27 = peg$literalExpectation(\">=\", false);\n  var peg$e28 = peg$literalExpectation(\">\", false);\n  var peg$e29 = peg$literalExpectation(\"<=\", false);\n  var peg$e30 = peg$literalExpectation(\"<\", false);\n  var peg$e31 = peg$literalExpectation(\",\", false);\n  var peg$e32 = peg$literalExpectation(\"->\", false);\n  var peg$e33 = peg$literalExpectation(\"If \", false);\n  var peg$e34 = peg$literalExpectation(\"Then\", false);\n  var peg$e35 = peg$literalExpectation(\"Else\", false);\n  var peg$e36 = peg$literalExpectation(\"For(\", false);\n  var peg$e37 = peg$literalExpectation(\"While \", false);\n  var peg$e38 = peg$literalExpectation(\"Repeat \", false);\n  var peg$e39 = peg$literalExpectation(\"End\", false);\n  var peg$e40 = peg$literalExpectation(\"Pause\", false);\n  var peg$e41 = peg$literalExpectation(\"Lbl \", false);\n  var peg$e42 = peg$literalExpectation(\"Goto \", false);\n  var peg$e43 = peg$literalExpectation(\"IS>(\", false);\n  var peg$e44 = peg$literalExpectation(\"DS<(\", false);\n  var peg$e45 = peg$literalExpectation(\"Menu(\", false);\n  var peg$e46 = peg$literalExpectation(\"prgm\", false);\n  var peg$e47 = peg$literalExpectation(\"Return\", false);\n  var peg$e48 = peg$literalExpectation(\"Stop\", false);\n  var peg$e49 = peg$literalExpectation(\"DelVar \", false);\n  var peg$e50 = peg$literalExpectation(\"GraphStyle(\", false);\n  var peg$e51 = peg$literalExpectation(\"OpenLib(\", false);\n  var peg$e52 = peg$literalExpectation(\"ExecLib(\", false);\n  var peg$e53 = peg$literalExpectation(\"Input \", false);\n  var peg$e54 = peg$literalExpectation(\"Prompt \", false);\n  var peg$e55 = peg$literalExpectation(\"Disp \", false);\n  var peg$e56 = peg$literalExpectation(\"DispGraph\", false);\n  var peg$e57 = peg$literalExpectation(\"DispTable\", false);\n  var peg$e58 = peg$literalExpectation(\"Output(\", false);\n  var peg$e59 = peg$literalExpectation(\"ClrHome\", false);\n  var peg$e60 = peg$literalExpectation(\"ClrTable\", false);\n  var peg$e61 = peg$literalExpectation(\"GetCalc(\", false);\n  var peg$e62 = peg$literalExpectation(\"Get(\", false);\n  var peg$e63 = peg$literalExpectation(\"Send(\", false);\n\n  var peg$f0 = function() { return true };\n  var peg$f1 = function() { return text(); };\n  var peg$f2 = function() { return 'THETA' };\n  var peg$f3 = function(number) { return 'List' + number; };\n  var peg$f4 = function() { return 'List' + text().substring(5); };\n  var peg$f5 = function(name) { return { type: types.VARIABLE, name } };\n  var peg$f6 = function(name) { return { type: types.STRINGVARIABLE, name } };\n  var peg$f7 = function(name) { return { type: types.LISTVARIABLE, name, custom: false } };\n  var peg$f8 = function(name) { return { type: types.LISTVARIABLE, name, custom: true } };\n  var peg$f9 = function(list, index) { return { type: types.LISTINDEX, list, index } };\n  var peg$f10 = function(integer, fraction, exponent) { \r\n      return { type: types.NUMBER, integer, fraction, exponent }\r\n    };\n  var peg$f11 = function(fraction, exponent) { \r\n      return { type: types.NUMBER, fraction, exponent }\r\n    };\n  var peg$f12 = function(integer, exponent) { \r\n      return { type: types.NUMBER, integer, exponent }\r\n    };\n  var peg$f13 = function(chars) { return { type: types.STRING, chars } };\n  var peg$f14 = function() { return { type: types.ANS } };\n  var peg$f15 = function() { return { type: types.GetKey } };\n  var peg$f16 = function(head, tail) { return util.buildList(head, tail); };\n  var peg$f17 = function(operator, argument) { return { type: types.UNARY, operator, argument } };\n  var peg$f18 = function(head, tail, end) { return util.buildImplicitBinaryExpression(head, tail, end); };\n  var peg$f19 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f20 = function(value) { return { type: types.ValueStatement, value }};\n  var peg$f21 = function(value, assignable) { return { type: types.AssignmentStatement, value, assignable }};\n  var peg$f22 = function(value, extra) { return { type: types.IfStatement, value, extra }};\n  var peg$f23 = function(extra) { return { type: types.ThenStatement, extra }};\n  var peg$f24 = function(extra) { return { type: types.ElseStatement, extra }};\n  var peg$f25 = function(variable, start, end, step, args, extra) { return { type: types.ForLoop, variable, start, end, step, args, extra }};\n  var peg$f26 = function(value, extra) { return { type: types.WhileLoop, value, extra }};\n  var peg$f27 = function(value, extra) { return { type: types.RepeatLoop, value, extra }};\n  var peg$f28 = function(extra) { return { type: types.EndStatement, extra }};\n  var peg$f29 = function() { return { type: types.PauseStatement }};\n  var peg$f30 = function(location) { return { type: types.LabelStatement, location }};\n  var peg$f31 = function(location) { return { type: types.GotoStatement, location }};\n  var peg$f32 = function(variable, end) { return { type: types.IncrementSkip, variable, end }};\n  var peg$f33 = function(variable, end) { return { type: types.DecrementSkip, variable, end }};\n  var peg$f34 = function(title, options) { return util.buildMenuStatement(title, options); };\n  var peg$f35 = function(name) { return { type: types.ProgramStatement, name }};\n  var peg$f36 = function() { return { type: types.ReturnStatement }};\n  var peg$f37 = function() { return { type: types.StopStatement }};\n  var peg$f38 = function(variable) { return { type: types.DelVarStatement, variable }};\n  var peg$f39 = function(equation, style) { return { type: types.GraphStyleStatement, equation, style }};\n  var peg$f40 = function(name) { return { type: types.OpenLibStatement, name }};\n  var peg$f41 = function(name) { return { type: types.ExecLibStatement, name }};\n  var peg$f42 = function(text, variable) { return { type: types.Input, text, variable } };\n  var peg$f43 = function(variable) { return { type: types.Prompt, variable } };\n  var peg$f44 = function(value) { return { type: types.Display, value } };\n  var peg$f45 = function() { return { type: types.DispGraph } };\n  var peg$f46 = function() { return { type: types.DispTable } };\n  var peg$f47 = function(row, column, value) { return { type: types.Output, row, column, value } };\n  var peg$f48 = function() { return { type: types.ClrHome } };\n  var peg$f49 = function() { return { type: types.ClrTable } };\n  var peg$f50 = function(variable, portflag) { return { type: types.GetCalc, variable, portflag } };\n  var peg$f51 = function(variable) { return { type: types.Get, variable } };\n  var peg$f52 = function(variable) { return { type: types.Send, variable } };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parseStart() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStatement();\n\n    return s0;\n  }\n\n  function peg$parseSourceCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e0);\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlpha() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e1);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlphaNum() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e2);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e3);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraCharacters() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseSourceCharacter();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseSourceCharacter();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOptionalEndParen() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e4);\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLocation() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlphaNum();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgramName() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlpha();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseAlphaNum();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseAlphaNum();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseAlphaNum();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseAlphaNum();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseAlphaNum();\n      if (s7 === peg$FAILED) {\n        s7 = null;\n      }\n      s8 = peg$parseAlphaNum();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariableIdentifier() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAlpha();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e5);\n      if (input.substr(peg$currPos, 6) === peg$c1) {\n        s1 = peg$c1;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f2();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (input.substr(peg$currPos, 3) === peg$c2) {\n      s1 = peg$c2;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDigit();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f1();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseListVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e7);\n    if (input.substr(peg$currPos, 2) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e8);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f3(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCustomListVariableIdentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e9);\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlpha();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAlphaNum();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseAlphaNum();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        s5 = peg$parseAlphaNum();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$parseAlphaNum();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f4();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumericVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f5(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStringVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseStringVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f6(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseListVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f7(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseCustomListVariableIdentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f8(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStringVariable();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericVariable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListVariable();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListIndex() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariable();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c5;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseTestExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOptionalEndParen();\n          peg$savedPos = s0;\n          s0 = peg$f9(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAssignable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseListIndex();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseVariable();\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseDigit();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDigit();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSignedInteger() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e11);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parseInteger();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentIndicator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e12);\n    if (input.substr(peg$currPos, 2) === peg$c6) {\n      s0 = peg$c6;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentPart() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponentIndicator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseSignedInteger();\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericLiteral() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseExponentPart();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f10(s1, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseInteger();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExponentPart();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f11(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseInteger();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseExponentPart();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f12(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e14);\n    if (peg$r5.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterString() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCharacter();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCharacter();\n    }\n    s0 = input.substring(s0, peg$currPos);\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e15);\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCharacterString();\n      rule$expects(peg$e15);\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnswer() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e16);\n    if (input.substr(peg$currPos, 3) === peg$c9) {\n      s1 = peg$c9;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f14();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetKey() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e17);\n    if (input.substr(peg$currPos, 6) === peg$c10) {\n      s1 = peg$c10;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f15();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseToken() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAnswer();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGetKey();\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenLiteral() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseStringLiteral();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListExpression() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e18);\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseArgumentExpression();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseArgumentExpression();\n        }\n        rule$expects(peg$e19);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s4 = peg$c12;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f16(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenExpression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTestExpression();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e4);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s0 = s2;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e20);\n    if (input.substr(peg$currPos, 2) === peg$c13) {\n      s0 = peg$c13;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTokenUnaryExpression();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f17(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenUnaryExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseUnaryOperator();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseUnaryExpression();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f17(s1, s2);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicitMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTokenUnaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseUnaryExpression();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTokenUnaryExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTokenUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      s3 = peg$parseUnaryExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f18(s1, s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseTokenUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseTokenUnaryExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseUnaryExpression();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        s3 = peg$parseTokenUnaryExpression();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f18(s1, s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e21);\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e22);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c15;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseImplicitMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseMultiplicativeOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseImplicitMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseMultiplicativeOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseImplicitMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e23);\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c16;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e24);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c17;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseAdditiveOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseAdditiveOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e25);\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e26);\n      if (input.substr(peg$currPos, 2) === peg$c19) {\n        s0 = peg$c19;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.substr(peg$currPos, 2) === peg$c20) {\n          s0 = peg$c20;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          rule$expects(peg$e28);\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s0 = peg$c21;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            rule$expects(peg$e29);\n            if (input.substr(peg$currPos, 2) === peg$c22) {\n              s0 = peg$c22;\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              rule$expects(peg$e30);\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s0 = peg$c23;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditiveExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseTestOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAdditiveExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseTestOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAdditiveExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e31);\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c24;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e31);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c24;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraArguments() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseArgumentExpression();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseArgumentExpression();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseValueStatement() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f20(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAssignment() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e32);\n      if (input.substr(peg$currPos, 2) === peg$c25) {\n        s2 = peg$c25;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAssignable();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f21(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfStatement() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e33);\n    if (input.substr(peg$currPos, 3) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f22(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThen() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e34);\n    if (input.substr(peg$currPos, 4) === peg$c27) {\n      s1 = peg$c27;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f23(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e35);\n    if (input.substr(peg$currPos, 4) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f24(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e36);\n    if (input.substr(peg$currPos, 4) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseArgumentExpression();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseExtraArguments();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseOptionalEndParen();\n      s8 = peg$parseExtraCharacters();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f25(s2, s3, s4, s5, s6, s8);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e37);\n    if (input.substr(peg$currPos, 6) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f26(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRepeat() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e38);\n    if (input.substr(peg$currPos, 7) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f27(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnd() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e39);\n    if (input.substr(peg$currPos, 3) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f28(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePause() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e40);\n    if (input.substr(peg$currPos, 5) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f29();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLabel() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e41);\n    if (input.substr(peg$currPos, 4) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f30(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGoto() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e42);\n    if (input.substr(peg$currPos, 5) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f31(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIncrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e43);\n    if (input.substr(peg$currPos, 4) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f32(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e44);\n    if (input.substr(peg$currPos, 4) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f33(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMenu() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e45);\n    if (input.substr(peg$currPos, 5) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$currPos;\n      rule$expects(peg$e31);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s5 = peg$c24;\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$parseStringLiteral();\n        if (s6 !== peg$FAILED) {\n          rule$expects(peg$e31);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c24;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseLocation();\n            if (s8 !== peg$FAILED) {\n              s5 = [s5, s6, s7, s8];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        rule$expects(peg$e31);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c24;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseStringLiteral();\n          if (s6 !== peg$FAILED) {\n            rule$expects(peg$e31);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c24;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseLocation();\n              if (s8 !== peg$FAILED) {\n                s5 = [s5, s6, s7, s8];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f34(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgram() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e46);\n    if (input.substr(peg$currPos, 4) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f35(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e47);\n    if (input.substr(peg$currPos, 6) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f36();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStop() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e48);\n    if (input.substr(peg$currPos, 4) === peg$c41) {\n      s1 = peg$c41;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f37();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDelVar() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e49);\n    if (input.substr(peg$currPos, 7) === peg$c42) {\n      s1 = peg$c42;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f38(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGraphStyle() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e50);\n    if (input.substr(peg$currPos, 11) === peg$c43) {\n      s1 = peg$c43;\n      peg$currPos += 11;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f39(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOpenLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e51);\n    if (input.substr(peg$currPos, 8) === peg$c44) {\n      s1 = peg$c44;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f40(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExecLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e52);\n    if (input.substr(peg$currPos, 8) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f41(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCtlStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseIfStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseThen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseElse();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseWhile();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseEnd();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsePause();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseLabel();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGoto();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseIncrementSkip();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseDecrementSkip();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseMenu();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseProgram();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseReturn();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseStop();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseDelVar();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseGraphStyle();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseOpenLib();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseExecLib();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInput() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e53);\n    if (input.substr(peg$currPos, 6) === peg$c46) {\n      s1 = peg$c46;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsePrefixArgumentExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseVariable();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f42(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrompt() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e54);\n    if (input.substr(peg$currPos, 7) === peg$c47) {\n      s1 = peg$c47;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f43(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisplay() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e55);\n    if (input.substr(peg$currPos, 5) === peg$c48) {\n      s1 = peg$c48;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f44(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDispGraph() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e56);\n    if (input.substr(peg$currPos, 9) === peg$c49) {\n      s1 = peg$c49;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f45();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDispTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e57);\n    if (input.substr(peg$currPos, 9) === peg$c50) {\n      s1 = peg$c50;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f46();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOutput() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e58);\n    if (input.substr(peg$currPos, 7) === peg$c51) {\n      s1 = peg$c51;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f47(s2, s3, s4);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClrHome() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e59);\n    if (input.substr(peg$currPos, 7) === peg$c52) {\n      s1 = peg$c52;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f48();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseClrTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e60);\n    if (input.substr(peg$currPos, 8) === peg$c53) {\n      s1 = peg$c53;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f49();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetCalc() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e61);\n    if (input.substr(peg$currPos, 8) === peg$c54) {\n      s1 = peg$c54;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f50(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGet() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e62);\n    if (input.substr(peg$currPos, 4) === peg$c55) {\n      s1 = peg$c55;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f51(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSend() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e63);\n    if (input.substr(peg$currPos, 5) === peg$c56) {\n      s1 = peg$c56;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f52(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIoStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseInput();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrompt();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDisplay();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseDispGraph();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseDispTable();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseOutput();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseClrHome();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseClrTable();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseGetCalc();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGet();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseSend();\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAssignment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCtlStatement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseIoStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseValueStatement();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n\r\n    const types = require ('../common/types');\r\n    const util = require ('./pegutil');\r\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","// pegutil\r\n// =======\r\n\r\nimport * as types from '../common/types'\r\n\r\nexport function buildBinaryExpression (head, tail) {\r\n  return tail.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: element[0],\r\n      left: result,\r\n      right: element[1]\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildImplicitBinaryExpression (head, tail, end) {\r\n  const list = tail.flat()\r\n  if (end !== null) {\r\n    list.push(end)\r\n  }\r\n  return list.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: '*',\r\n      left: result,\r\n      right: element\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildMenuStatement (title, options) {\r\n  const choices = options.map(function (element) {\r\n    return {\r\n      option: element[1],\r\n      location: element[3]\r\n    }\r\n  })\r\n  return {\r\n    type: types.MenuStatement,\r\n    title,\r\n    choices\r\n  }\r\n}\r\n\r\nexport function buildList (head, tail) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: [head].concat(tail)\r\n  }\r\n}\r\n","// core\r\n// ====\r\n\r\nimport * as types from './types'\r\n\r\nfunction error (type, code, hideSource = false) {\r\n  return {\r\n    type: type,\r\n    code: code,\r\n    hideSource: hideSource\r\n  }\r\n}\r\n\r\nfunction tiError (code, hideSource = false) {\r\n  return error(types.ti, code, hideSource)\r\n}\r\n\r\nexport const DataTypeError = tiError('DATA TYPE')\r\nexport const SyntaxError = tiError('SYNTAX')\r\nexport const UndefinedError = tiError('UNDEFINED')\r\nexport const LabelError = tiError('LABEL')\r\nexport const ArgumentError = tiError('ARGUMENT')\r\nexport const DimMismatchError = tiError('DIM MISMATCH')\r\nexport const DivideByZeroError = tiError('DIVIDE BY 0')\r\nexport const InvalidDimError = tiError('INVALID DIM')\r\nexport const DomainError = tiError('DOMAIN')\r\n\r\nexport function libError (code, hideSource = false) {\r\n  return error(types.lib, code, hideSource)\r\n}\r\n\r\nexport const UnimplementedError = libError('unimplemented')\r\n\r\nexport function newMem () {\r\n  return {\r\n    vars: {},\r\n    ans: newFloat()\r\n  }\r\n}\r\n\r\nexport function newFloat (value = 0) {\r\n  return { type: types.NUMBER, float: value }\r\n}\r\n\r\nexport const ONE = newFloat(1)\r\n\r\nexport const MINUSONE = newFloat(-1)\r\n","// parser\r\n// ======\r\n\r\nimport * as types from '../common/types'\r\nimport pegJsParser from './tibasic.pegjs'\r\n\r\nexport function parse (source, options = {}) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceMap = options.sourceMap || 'inline'\r\n\r\n  // TODO:\r\n  // * Allow blank lines\r\n  // * Allow multiple statements per line with ':'\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  const parsedLines = sourceLines.map(s => {\r\n    let parsedLine\r\n    try {\r\n      parsedLine = pegJsParser.parse(s)\r\n    } catch (error) {\r\n      if (error.name === 'SyntaxError') {\r\n        parsedLine = { type: 'SyntaxError' }\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    if (sourceMap === 'inline') {\r\n      parsedLine.source = s\r\n    }\r\n    return parsedLine\r\n  })\r\n\r\n  return parsedLines\r\n}\r\n\r\nexport function parseExpression (source) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  if (sourceLines.Length > 1) {\r\n    throw new Error('Too many lines for an expression')\r\n  }\r\n  const sourceLine = sourceLines[0]\r\n  let parsedLine\r\n  try {\r\n    parsedLine = pegJsParser.parse(sourceLine)\r\n  } catch (error) {\r\n    if (error.name !== 'SyntaxError') {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  return parsedLine !== undefined && parsedLine.type === types.ValueStatement ? parsedLine.value : { type: 'SyntaxError' }\r\n}\r\n","// operation\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\n\r\nexport function isTruthy (value) {\r\n  if (value.type === types.NUMBER) {\r\n    return value.float !== 0\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nexport function assignVariable (mem, variable, value) {\r\n  if (variable.type === types.STRINGVARIABLE) {\r\n    if (value.type !== types.STRING) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.VARIABLE) {\r\n    if (value.type !== types.NUMBER) {\r\n      return\r\n    }\r\n  } else if (variable.type === types.LISTVARIABLE) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.LISTINDEX) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else {\r\n    throw core.libError('unexpected variable type')\r\n  }\r\n  mem.vars[variable.name] = value\r\n}\r\n\r\nexport function deleteVariable (mem, variable) {\r\n  delete mem.vars[variable.name]\r\n}\r\n\r\nexport function hasVariable (mem, variable) {\r\n  return variable.name in mem.vars\r\n}\r\n\r\nexport function assignAns (mem, value) {\r\n  mem.ans = value\r\n}\r\n\r\nexport function binaryOperation (left, operator, right) {\r\n  return {\r\n    type: types.BINARY,\r\n    operator,\r\n    left,\r\n    right\r\n  }\r\n}\r\n\r\nexport function resolveNumber (value) {\r\n  let str = ''\r\n  if (value.integer !== undefined && value.integer !== null) {\r\n    str += value.integer\r\n  }\r\n  if (value.fraction !== undefined && value.fraction !== null) {\r\n    str += '.' + value.fraction\r\n  }\r\n  if (value.exponent !== undefined && value.exponent !== null) {\r\n    str += 'e' + value.exponent\r\n  }\r\n  return parseFloat(str)\r\n}\r\n\r\nexport function variableToString (variable) {\r\n  let str = variable.name\r\n  switch (variable.type) {\r\n    case types.VARIABLE:\r\n    case types.STRINGVARIABLE:\r\n      break\r\n    case types.LISTVARIABLE:\r\n      str = str.substring(4)\r\n      if (!variable.custom) {\r\n        str = `&L${str}`\r\n      }\r\n      break\r\n    default:\r\n      throw core.libError('unexpected variable tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function valueToString (value, strict = false) {\r\n  if (strict && value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  let str = ''\r\n  switch (value.type) {\r\n    case types.NUMBER:\r\n      str = value.float.toString()\r\n      if (str.startsWith('0.')) {\r\n        str = str.substring(1)\r\n      }\r\n      break\r\n    case types.STRING:\r\n      str = value.chars\r\n      break\r\n    case types.LIST:\r\n      str = '{' + value.elements.map(e => valueToString(e)).join(' ') + '}'\r\n      break\r\n    default:\r\n      throw core.libError('unexpected value tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function parseDigit (str) {\r\n  if (str === undefined || str === null || str === '' || str.length > 1) {\r\n    return\r\n  }\r\n  const digit = str.charCodeAt(0) - '0'.charCodeAt(0)\r\n  if (digit < 0 || digit > 9) {\r\n    return\r\n  }\r\n  return digit\r\n}\r\n","// expression\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as operation from './operation'\r\n\r\nexport function evaluate (value, mem) {\r\n  const behavior = expressionOf[value.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected value')\r\n  }\r\n  return behavior(value, mem)\r\n}\r\n\r\nconst expressionOf = {}\r\n\r\n// ----- Expressions -----\r\n\r\nexpressionOf[types.SyntaxError] = (value, mem) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- Values -----\r\n\r\nexpressionOf[types.NUMBER] = (value, mem) => {\r\n  if (value.float !== undefined) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: operation.resolveNumber(value)\r\n  }\r\n}\r\n\r\nexpressionOf[types.STRING] = (value, mem) => {\r\n  return value\r\n}\r\n\r\nexpressionOf[types.LIST] = (value, mem) => {\r\n  if (value.resolved === true) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: value.elements.map(function (element) {\r\n      const result = evaluate(element, mem)\r\n      if (result.type !== types.NUMBER) {\r\n        // TODO: a list of lists should be a syntax error\r\n        // However, a list of list variables should still be a data type error\r\n        // Distinguishing them here is hard - should be done in grammar?\r\n        throw core.DataTypeError\r\n      }\r\n      return result\r\n    }),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Variables -----\r\n\r\nexpressionOf[types.VARIABLE] = (value, mem) => {\r\n  let result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    result = mem.vars[value.name] = core.newFloat()\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.STRINGVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTINDEX] = (value, mem) => {\r\n  const list = evaluate(value.list, mem)\r\n  const index = evaluate(value.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.InvalidDimError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: list.elements[index.float - 1].float\r\n  }\r\n}\r\n\r\n// ----- Tokens -----\r\n\r\nexpressionOf[types.ANS] = (value, mem) => {\r\n  return mem.ans\r\n}\r\n\r\nexpressionOf[types.GetKey] = (value, mem) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Operators -----\r\n\r\nexpressionOf[types.UNARY] = (value, mem) => {\r\n  const argument = evaluate(value.argument, mem)\r\n  const behavior = unaryOf[argument.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected unary argument')\r\n  }\r\n  return behavior(value.operator, argument)\r\n}\r\n\r\nexpressionOf[types.BINARY] = (value, mem) => {\r\n  const left = evaluate(value.left, mem)\r\n  const right = evaluate(value.right, mem)\r\n  const behavior = binaryOf[left.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected binary left')\r\n  }\r\n  return behavior(value.operator, left, right)\r\n}\r\n\r\n// ----- Unary -----\r\n\r\nconst unaryOf = {}\r\n\r\nunaryOf[types.NUMBER] = (operator, argument) => {\r\n  return { type: types.NUMBER, float: applyUnaryOperation(operator, argument.float) }\r\n}\r\n\r\nunaryOf[types.STRING] = (operator, argument) => {\r\n  throw core.DataTypeError\r\n}\r\n\r\nunaryOf[types.LIST] = (operator, argument) => {\r\n  return {\r\n    type: types.LIST,\r\n    elements: argument.elements.map(e => ({ type: types.NUMBER, float: applyUnaryOperation(operator, e.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Binary -----\r\n\r\nconst binaryOf = {}\r\n\r\nbinaryOf[types.NUMBER] = (operator, left, right) => {\r\n  if (right.type !== types.NUMBER) {\r\n    if (right.type === types.LIST) {\r\n      return applyBinaryOperationListAndNumber(operator, right, left)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  return { type: types.NUMBER, float: applyBinaryOperation(operator, left.float, right.float) }\r\n}\r\n\r\nbinaryOf[types.STRING] = (operator, left, right) => {\r\n  if (right.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (['+'].includes(operator)) {\r\n    return { type: types.STRING, chars: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  if (['=', '!='].includes(operator)) {\r\n    return { type: types.NUMBER, float: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nbinaryOf[types.LIST] = (operator, left, right) => {\r\n  if (right.type !== types.LIST) {\r\n    if (right.type === types.NUMBER) {\r\n      return applyBinaryOperationListAndNumber(operator, left, right)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  if (left.elements.length !== right.elements.length) {\r\n    throw core.DimMismatchError\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: left.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, right.elements[i].float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Helper -----\r\n\r\nfunction applyBinaryOperationListAndNumber (operator, list, number) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: list.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, number.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\nfunction applyUnaryOperation (operator, x) {\r\n  switch (operator) {\r\n    case '&-': return x * -1\r\n    default: throw core.libError('unexpected unary operator')\r\n  }\r\n}\r\n\r\nfunction applyBinaryOperation (operator, x, y) {\r\n  if (operator === '/' && y === 0) {\r\n    throw core.DivideByZeroError\r\n  }\r\n  switch (operator) {\r\n    case '+': return x + y\r\n    case '-': return x - y\r\n    case '*': return x * y\r\n    case '/': return x / y\r\n    case '=': return x === y ? 1 : 0\r\n    case '!=': return x !== y ? 1 : 0\r\n    case '>=': return x >= y ? 1 : 0\r\n    case '>': return x > y ? 1 : 0\r\n    case '<=': return x <= y ? 1 : 0\r\n    case '<': return x < y ? 1 : 0\r\n    default: throw core.libError('unexpected binary operator')\r\n  }\r\n}\r\n","// assignment\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as expression from './expression'\r\n\r\nexport function evaluate (assignable, value, mem) {\r\n  const behavior = assignmentOf[assignable.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected assignable type')\r\n  }\r\n  return behavior(assignable, value, mem)\r\n}\r\n\r\nconst assignmentOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nassignmentOf[types.VARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.NUMBER) {\r\n    return\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.STRINGVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.LIST) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTINDEX] = (assignable, value, mem) => {\r\n  const list = expression.evaluate(assignable.list, mem)\r\n  const index = expression.evaluate(assignable.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  mem.vars[assignable.list.name].elements[index.float - 1] = value\r\n}\r\n","// iolib\r\n// =====\r\n\r\nimport * as types from '../common/types'\r\n\r\nconst enterkey = 13\r\n\r\nexport function stdout (value, options = {}, newline = true) {\r\n  if (options.elem === undefined) {\r\n    console.log(value)\r\n    return\r\n  }\r\n  setTimeout(() => {\r\n    let result = options.elem.val() + value\r\n    if (newline) {\r\n      result += '\\n'\r\n    }\r\n    options.elem.val(result)\r\n  }, 0)\r\n}\r\n\r\nexport function stderr (ex, options = {}) {\r\n  if ((ex.type === types.ti && !options.includeErrors) ||\r\n      (ex.type === types.lib && !options.includeLibErrors)) {\r\n    console.log(ex)\r\n    return\r\n  }\r\n  let value = ''\r\n  if (ex.type === types.ti) {\r\n    value += 'ERR:'\r\n  } else if (ex.type === types.lib) {\r\n    value += 'Error: '\r\n  } else {\r\n    value += 'Unexpected: '\r\n  }\r\n  value += ex.code\r\n  if (options.includeLineNumbers && ex.source !== undefined && ex.source.index !== undefined) {\r\n    value += ` on line ${ex.source.index}`\r\n  }\r\n  if (options.includeSource && ex.source !== undefined && ex.source.line !== undefined) {\r\n    value += ` :${ex.source.line}`\r\n  }\r\n  stdout(value, options)\r\n}\r\n\r\nexport function onStdin (callback, options = {}) {\r\n  if (options.stdin !== undefined && options.stdin !== '' && options.stdinQueue === undefined) {\r\n    options.stdinQueue = options.stdin.split('\\n').reverse()\r\n  }\r\n  if (options.stdinQueue !== undefined) {\r\n    setTimeout(() => {\r\n      const result = options.stdinQueue.pop()\r\n      if (callback(result) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 0)\r\n    return\r\n  }\r\n  if (options.input === undefined) {\r\n    setTimeout(() => {\r\n      if (callback(prompt('Input?')) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 100)\r\n    return\r\n  }\r\n  setTimeout(() => options.input.val(''), 0)\r\n  options.input.on('keypress', e => {\r\n    if (e.keyCode === enterkey) {\r\n      const result = options.input.val()\r\n      setTimeout(() => options.input.val(''), 0)\r\n      if (callback(result) !== true) {\r\n        options.input.off('keypress')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function cleanup (options = {}) {\r\n  if (options.input !== undefined) {\r\n    options.input.off('keypress')\r\n  }\r\n}\r\n","// statement\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as parser from '../parse/parser'\r\nimport * as operation from './operation'\r\nimport * as expression from './expression'\r\nimport * as assignment from './assignment'\r\nimport * as iolib from './iolib'\r\n\r\nexport function evaluate (line, state) {\r\n  const behavior = statementOf[line.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected')\r\n  }\r\n  return behavior(line, state)\r\n}\r\n\r\nconst statementOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nstatementOf[types.AssignmentStatement] = (line, state) => {\r\n  const value = expression.evaluate(line.value, state.mem)\r\n  assignment.evaluate(line.assignable, value, state.mem)\r\n  operation.assignAns(state.mem, value)\r\n}\r\n\r\nstatementOf[types.ValueStatement] = (line, state) => {\r\n  operation.assignAns(state.mem, expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.SyntaxError] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- CTL -----\r\n\r\nstatementOf[types.IfStatement] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.ifResult = operation.isTruthy(expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.ThenStatement] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\nstatementOf[types.ElseStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (state.lines[state.blockStack.pop()].type === types.ThenStatement) {\r\n    state.blockStack.push(state.i)\r\n    state.falsyStackHeight = state.blockStack.length\r\n  } else {\r\n    throw core.SyntaxError\r\n  }\r\n}\r\n\r\nstatementOf[types.ForLoop] = (line, state) => {\r\n  if (line.variable === null || line.start === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.assignVariable(state.mem, line.variable, expression.evaluate(line.start, state.mem))\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.WhileLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(line.value, state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.RepeatLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n}\r\n\r\nstatementOf[types.EndStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  const source = state.blockStack.pop()\r\n  const sourceLine = state.lines[source]\r\n  if (sourceLine.type === types.ForLoop ||\r\n              sourceLine.type === types.WhileLoop ||\r\n              sourceLine.type === types.RepeatLoop) {\r\n    if (sourceLine.type === types.ForLoop) {\r\n      increment(state.mem, sourceLine.variable, sourceLine.step !== null ? sourceLine.step : core.ONE)\r\n      if (operation.isTruthy(expression.evaluate(operation.binaryOperation(sourceLine.variable, '<=', sourceLine.end), state.mem))) {\r\n        state.blockStack.push(source)\r\n        state.i = source\r\n      }\r\n    } else if (operation.isTruthy(expression.evaluate(sourceLine.value, state.mem))) {\r\n      state.blockStack.push(source)\r\n      state.i = source\r\n    }\r\n  } else if (sourceLine.type === types.ThenStatement ||\r\n                  sourceLine.type === types.ElseStatement) {\r\n    // empty\r\n  } else {\r\n    throw core.libError(`impossibleEndFrom'${sourceLine.type}`)\r\n  }\r\n}\r\n\r\nstatementOf[types.PauseStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.LabelStatement] = (line, state) => {\r\n}\r\n\r\nstatementOf[types.GotoStatement] = (line, state) => {\r\n  state.searchLabel = line.location\r\n  state.i = -1\r\n}\r\n\r\nstatementOf[types.IncrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.ONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.DecrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.MINUSONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '>=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.MenuStatement] = (line, state) => {\r\n  if (line.title === null || line.choices.length === 0 || line.choices.length > 7) {\r\n    throw core.ArgumentError\r\n  }\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.title, state.mem), true), state.io)\r\n  line.choices.forEach((choice, idx) => {\r\n    iolib.stdout(`${idx + 1}:${operation.valueToString(choice.option)}`, state.io)\r\n  })\r\n  iolib.onStdin(input => {\r\n    const digit = operation.parseDigit(input)\r\n    if (digit === undefined || digit === 0 || digit > line.choices.length) {\r\n      return true\r\n    }\r\n    state.searchLabel = line.choices[digit - 1].location\r\n    state.i = 0\r\n    state.resume()\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n\r\nstatementOf[types.ProgramStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ReturnStatement] = (line, state) => {\r\n  // TODO interaction with subprograms\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.StopStatement] = (line, state) => {\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.DelVarStatement] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.deleteVariable(state.mem, line.variable)\r\n}\r\n\r\nstatementOf[types.GraphStyleStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.OpenLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ExecLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- I/O -----\r\n\r\nstatementOf[types.Display] = (line, state) => {\r\n  if (line.value !== null) {\r\n    iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n  }\r\n}\r\n\r\nstatementOf[types.Input] = (line, state) => {\r\n  if (line.variable === null) {\r\n    if (line.text !== null) {\r\n      throw core.ArgumentError\r\n    }\r\n    throw core.UnimplementedError\r\n  }\r\n  let text = '?'\r\n  if (line.text !== null) {\r\n    text = operation.valueToString(expression.evaluate(line.text, state.mem), true)\r\n  }\r\n  return getInput(text, line.variable, state, true)\r\n}\r\n\r\nstatementOf[types.Prompt] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const text = operation.variableToString(line.variable)\r\n  return getInput(`${text}=?`, line.variable, state, false)\r\n}\r\n\r\nstatementOf[types.DispGraph] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.DispTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Output] = (line, state) => {\r\n  if (line.row === null || line.column === null || line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const row = expression.evaluate(line.row, state.mem)\r\n  const column = expression.evaluate(line.column, state.mem)\r\n  if (row.type !== types.NUMBER || column.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (row.float < 1 || row.float > state.rows || column.float < 1 || column.float > state.columns) {\r\n    throw core.DomainError\r\n  }\r\n  // TODO: respect rows and columns\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n}\r\n\r\nstatementOf[types.ClrHome] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ClrTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.GetCalc] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Get] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Send] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Helpers -----\r\n\r\nfunction increment (mem, variable, step) {\r\n  if (!operation.hasVariable(mem, variable)) {\r\n    throw core.UndefinedError\r\n  }\r\n  operation.assignVariable(mem, variable, expression.evaluate({\r\n    type: types.BINARY,\r\n    operator: '+',\r\n    left: variable,\r\n    right: step\r\n  }, mem), mem)\r\n}\r\n\r\nfunction getInput (text, variable, state, allowStringLiterals) {\r\n  iolib.stdout(text, state.io, false)\r\n  iolib.onStdin(input => {\r\n    if (input === null || input === undefined || input === '') {\r\n      return true\r\n    }\r\n    state.resume(() => {\r\n      iolib.stdout(input, state.io)\r\n\r\n      let value\r\n      if (variable.type === types.STRINGVARIABLE && allowStringLiterals) {\r\n        value = { type: types.STRING, chars: input }\r\n      } else {\r\n        value = expression.evaluate(parser.parseExpression(input), state.mem)\r\n      }\r\n\r\n      // special case where a prompt for a numerical variable is interpreted as a list variable\r\n      if (variable.type === types.VARIABLE && value.type === types.LIST) {\r\n        variable = { type: types.LISTVARIABLE, name: `List${variable.name}`, custom: true }\r\n      }\r\n\r\n      operation.assignVariable(state.mem, variable, value)\r\n    })\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n","// signal\r\n// ======\r\n\r\nexport const YIELD = 'yield'\r\nexport const DONE = 'done'\r\nexport const FAULTED = 'faulted'\r\nexport const SUSPEND = 'suspend'\r\n","// daemon\r\n// ======\r\n\r\nimport * as signal from '../common/signal'\r\n\r\nconst loopMessageName = 'daemon-loop'\r\nconst exceptionName = 'daemon-exception'\r\nconst minimumDelay = 0.001 // 1 microsecond\r\nconst tasks = {}\r\nconst exceptions = []\r\nlet running = false\r\nlet nextTaskId = 0\r\nconst maxExceptions = 1000\r\n\r\nconst eventTarget = document.createTextNode(null)\r\n\r\nfunction fireEvent (name) {\r\n  const event = new Event(name)\r\n  eventTarget.dispatchEvent(event)\r\n}\r\n\r\nfunction startIfNeeded () {\r\n  if (running === false) {\r\n    running = true\r\n    fireEvent('start')\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n}\r\n\r\nfunction createTask (func, delay, runOnce) {\r\n  const taskId = nextTaskId++\r\n\r\n  console.debug(`[Task ${taskId}] Start`)\r\n\r\n  tasks[taskId] = {\r\n    func: func,\r\n    delay: Math.max(delay, minimumDelay),\r\n    lastRun: undefined,\r\n    runOnce: runOnce,\r\n    stopOnException: true,\r\n    suspended: false\r\n  }\r\n\r\n  startIfNeeded()\r\n  return taskId\r\n}\r\n\r\nfunction resumeTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Resume`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    console.debug(tasks)\r\n    throw new Error(`Error resuming: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = false\r\n  startIfNeeded()\r\n};\r\n\r\nfunction suspendTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Suspend`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    throw new Error(`Error suspending: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = true\r\n};\r\n\r\nfunction deleteTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Stop`)\r\n  delete tasks[taskId]\r\n};\r\n\r\nfunction handleMessage (event) {\r\n  if (!(event.source === window && event.data === loopMessageName)) {\r\n    return\r\n  }\r\n\r\n  event.stopPropagation()\r\n\r\n  const time = performance.now()\r\n  const taskIds = Object.keys(tasks)\r\n  let runningTaskCount = 0\r\n  let suspendedTaskCount = 0\r\n\r\n  taskIds.forEach(taskId => {\r\n    const task = tasks[taskId]\r\n\r\n    let runs\r\n    if (task.suspended === true) {\r\n      runs = 0\r\n      suspendedTaskCount += 1\r\n    } else {\r\n      runningTaskCount += 1\r\n\r\n      if (task.lastRun === undefined || task.runOnce) {\r\n        runs = 1\r\n      } else {\r\n        const timeSinceRun = time - task.lastRun\r\n        runs = Math.floor(timeSinceRun / task.delay)\r\n      }\r\n    }\r\n\r\n    if (runs > 0) {\r\n      task.lastRun = time\r\n    }\r\n\r\n    for (let i = 0; i < runs; i++) {\r\n      let result\r\n\r\n      try {\r\n        result = task.func()\r\n      } catch (ex) {\r\n        result = signal.FAULTED\r\n\r\n        if (exceptions.length < maxExceptions) {\r\n          exceptions.push(ex)\r\n          window.postMessage(exceptionName, '*')\r\n        }\r\n      }\r\n\r\n      if (result === signal.DONE ||\r\n                task.runOnce ||\r\n                (task.stopOnException && result === signal.FAULTED)) {\r\n        deleteTask(taskId)\r\n        runningTaskCount -= 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.SUSPEND) {\r\n        suspendTask(taskId)\r\n        runningTaskCount -= 1\r\n        suspendedTaskCount += 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.YIELD) {\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (runningTaskCount === 0) {\r\n    running = false\r\n    if (suspendedTaskCount > 0) {\r\n      fireEvent('suspend')\r\n    } else {\r\n      fireEvent('stop')\r\n    }\r\n  } else {\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n};\r\n\r\nfunction handleException (event) {\r\n  if (!(event.source === window && event.data === exceptionName)) {\r\n    return\r\n  }\r\n\r\n  if (exceptions.length > 0) {\r\n    throw exceptions.pop()\r\n  }\r\n}\r\n\r\nwindow.addEventListener('message', handleMessage, true)\r\nwindow.addEventListener('message', handleException, true)\r\n\r\nexport function setTinyInterval (func, delay) {\r\n  return createTask(func, delay)\r\n}\r\n\r\nexport function clearTinyInterval (tinyIntervalID) {\r\n  deleteTask(tinyIntervalID)\r\n}\r\n\r\nexport function resumeTinyInterval (tinyIntervalID) {\r\n  resumeTask(tinyIntervalID)\r\n}\r\n\r\nexport function setTinyTimeout (func, delay) {\r\n  return createTask(func, delay, true)\r\n}\r\n\r\nexport function clearTinyTimeout (tinyTimeoutID) {\r\n  deleteTask(tinyTimeoutID)\r\n}\r\n\r\nexport const on = eventTarget.addEventListener.bind(eventTarget)\r\nexport const off = eventTarget.removeEventListener.bind(eventTarget)\r\n// export const dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget)\r\n","// runtime\r\n// =======\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as statement from '../evaluate/statement'\r\nimport * as iolib from '../evaluate/iolib'\r\nimport * as daemon from './daemon'\r\n\r\nexport function run (lines, options = {}) {\r\n  let sourceLines = []\r\n  if (options.source !== undefined) {\r\n    if (Array.isArray(options.source)) {\r\n      sourceLines = options.source\r\n    } else {\r\n      sourceLines = options.source.split(/\\r?\\n/)\r\n    }\r\n  }\r\n\r\n  let frequencyMs = 1\r\n  if (options.frequencyMs !== undefined) {\r\n    frequencyMs = options.frequencyMs\r\n  }\r\n\r\n  const state = {\r\n    mem: core.newMem(),\r\n\r\n    resume: undefined,\r\n    resumeCallback: undefined,\r\n\r\n    debug: options.debug === true,\r\n    sourceLines: sourceLines,\r\n\r\n    searchLabel: undefined,\r\n    ifResult: undefined,\r\n    incrementDecrementResult: undefined,\r\n\r\n    maximumLines: 50,\r\n    linesRun: 0,\r\n\r\n    blockStack: [],\r\n    falsyStackHeight: undefined,\r\n    falsyBlockPreviousIf: undefined,\r\n\r\n    i: 0,\r\n    lines: lines,\r\n\r\n    callback: options.callback,\r\n    frequencyMs: frequencyMs,\r\n\r\n    status: 'pending',\r\n\r\n    rows: 8,\r\n    columns: 16,\r\n\r\n    io: {\r\n      elem: options.elem,\r\n      input: options.input,\r\n      stdin: options.stdin,\r\n      includeErrors: options.includeErrors === undefined || options.includeErrors === true,\r\n      includeLibErrors: options.includeLibErrors === undefined || options.includeLibErrors === true,\r\n      includeLineNumbers: options.includeLineNumbers === undefined || options.includeLineNumbers === true,\r\n      includeSource: options.includeSource === undefined || options.includeSource === true\r\n    }\r\n  }\r\n\r\n  const taskId = daemon.setTinyInterval(() => runLoop(state), state.frequencyMs)\r\n  state.resume = (callback) => {\r\n    state.resumeCallback = callback\r\n    daemon.resumeTinyInterval(taskId)\r\n  }\r\n\r\n  return {\r\n    getStatus: () => state.status,\r\n    isActive: () => state.status === 'pending' || state.status === 'running',\r\n    stop: () => {\r\n      iolib.cleanup(state.io)\r\n      daemon.clearTinyInterval(taskId)\r\n    }\r\n  }\r\n}\r\n\r\nfunction runLoop (state) {\r\n  let result\r\n\r\n  try {\r\n    state.status = 'running'\r\n    result = runLine(state)\r\n  } catch (ex) {\r\n    state.status = 'faulted'\r\n\r\n    if (ex.type === undefined) {\r\n      throw ex\r\n    }\r\n\r\n    if (state.i < state.lines.length && ex.hideSource !== true) {\r\n      let source = state.lines[state.i].source\r\n      if (state.sourceLines !== undefined) {\r\n        source = state.sourceLines[state.i]\r\n      }\r\n      ex.source = {\r\n        index: state.i,\r\n        line: source\r\n      }\r\n    }\r\n\r\n    iolib.stderr(ex, state.io)\r\n    result = signal.DONE\r\n  }\r\n\r\n  if (result === signal.DONE) {\r\n    if (state.status !== 'faulted') {\r\n      state.status = 'done'\r\n    }\r\n\r\n    if (state.callback !== undefined) {\r\n      setTimeout(state.callback, 0)\r\n    }\r\n  } else {\r\n    state.i += 1\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction runLine (state) {\r\n  if (state.debug) {\r\n    console.debug({\r\n      Line: state.i,\r\n      searchLabel: state.searchLabel,\r\n      ifResult: state.ifResult,\r\n      blockStack: state.blockStack,\r\n      falsyStackHeight: state.falsyStackHeight,\r\n      falsyBlockPreviousIf: state.falsyBlockPreviousIf,\r\n      source: state.source,\r\n      mem: state.mem\r\n    })\r\n  }\r\n\r\n  if (state.resumeCallback !== undefined) {\r\n    state.resumeCallback()\r\n    state.resumeCallback = undefined\r\n  }\r\n\r\n  if (state.i >= state.lines.length) {\r\n    if (state.searchLabel !== undefined) {\r\n      throw core.LabelError\r\n    }\r\n\r\n    if (state.ifResult !== undefined || state.incrementDecrementResult !== undefined) {\r\n      throw core.SyntaxError\r\n    }\r\n\r\n    if (state.debug) {\r\n      console.debug(state.mem)\r\n    }\r\n\r\n    return signal.DONE\r\n  }\r\n\r\n  state.linesRun++\r\n\r\n  if (state.linesRun >= state.maximumLines) {\r\n    throw core.libError('maxlines')\r\n  }\r\n\r\n  const line = state.lines[state.i]\r\n  const type = line.type\r\n\r\n  // ----- scan for end -----\r\n\r\n  if (state.falsyStackHeight !== undefined) {\r\n    const lastBlockIndex = state.blockStack[state.blockStack.length - 1]\r\n    const lastBlock = state.lines[lastBlockIndex]\r\n\r\n    if (type === types.EndStatement ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.pop()\r\n\r\n      if (state.blockStack.length < state.falsyStackHeight) {\r\n        state.falsyStackHeight = undefined\r\n      }\r\n    }\r\n\r\n    if (type === types.ForLoop ||\r\n      type === types.RepeatLoop ||\r\n      type === types.WhileLoop ||\r\n      (type === types.ThenStatement && state.falsyBlockPreviousIf === true) ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.push(state.i)\r\n    }\r\n\r\n    state.falsyBlockPreviousIf = type === types.IfStatement\r\n    return\r\n  }\r\n\r\n  state.falsyBlockPreviousIf = undefined\r\n\r\n  // ----- search for label -----\r\n\r\n  if (state.searchLabel !== undefined) {\r\n    if (type === types.LabelStatement && line.location === state.searchLabel) {\r\n      state.searchLabel = undefined\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  // ----- check if result -----\r\n\r\n  if (state.ifResult !== undefined) {\r\n    const ifResultFalse = state.ifResult !== true\r\n    state.ifResult = undefined\r\n\r\n    if (type === types.ThenStatement) {\r\n      state.blockStack.push(state.i)\r\n\r\n      if (ifResultFalse) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (ifResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- check incrementDecrementResult -----\r\n\r\n  if (state.incrementDecrementResult !== undefined) {\r\n    const incrementDecrementResultFalse = state.incrementDecrementResult !== true\r\n    state.incrementDecrementResult = undefined\r\n\r\n    if (incrementDecrementResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- normal execution -----\r\n\r\n  if (line.extra === true) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (line.args === true) {\r\n    throw core.ArgumentError\r\n  }\r\n\r\n  return statement.evaluate(line, state)\r\n}\r\n"],"sourceRoot":""}