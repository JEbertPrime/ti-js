{"version":3,"sources":["webpack://ti/webpack/bootstrap","webpack://ti/./src/types.js","webpack://ti/./src/tibasic.pegjs","webpack://ti/./src/pegutil.js","webpack://ti/./src/daemon.js","webpack://ti/./src/io.js","webpack://ti/./src/core.js","webpack://ti/./src/parser.js","webpack://ti/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","NUMBER","BINARY","UNARY","VARIABLE","STRING","ANS","ValueStatement","AssignmentStatement","IfStatement","Display","ThenStatement","ElseStatement","ForLoop","WhileLoop","RepeatLoop","EndStatement","PauseStatement","LabelStatement","GotoStatement","IncrementSkip","DecrementSkip","MenuStatement","ProgramStatement","ReturnStatement","StopStatement","DelVarStatement","GraphStyleStatement","OpenLibStatement","ExecLibStatement","Prompt","SyntaxError","peg$SyntaxError","message","expected","found","location","this","Error","captureStackTrace","child","parent","C","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","any","end","other","description","not","describeExpectation","hex","ch","charCodeAt","toString","toUpperCase","replace","type","j","descriptions","sort","length","slice","join","describeExpected","describeFound","parse","input","options","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$e0","peg$classExpectation","peg$e1","peg$e2","peg$literalExpectation","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$f0","substring","peg$savedPos","peg$currPos","peg$f1","peg$f2","types","peg$f3","integer","fraction","exponent","peg$f4","peg$f5","peg$f6","chars","peg$f7","peg$f8","operator","argument","peg$f9","head","tail","util","buildBinaryExpression","peg$f10","peg$f11","variable","peg$f12","peg$f13","peg$f14","peg$f15","start","step","peg$f16","peg$f17","peg$f18","peg$f19","peg$f20","peg$f21","peg$f22","peg$f23","peg$f24","peg$f25","peg$f26","peg$f27","peg$f28","peg$f29","peg$f30","peg$f31","peg$f32","peg$f33","peg$posDetailsCache","line","column","peg$expected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","details","peg$VALIDFILENAME","filename","peg$computeLocation","startPos","endPos","loc","startPosDetails","offset","endPosDetails","peg$expect","top","variants","push","peg$buildStructuredError","s0","s1","s2","s3","peg$parseTestExpression","rule$expects","substr","peg$parseVariable","peg$parseAssignment","peg$parseIfStatement","peg$parseThen","peg$parseElse","s4","s5","s6","s7","s8","peg$parseOptionalEndParen","peg$parseFor","peg$parseWhile","peg$parseRepeat","peg$parseEnd","peg$parsePause","peg$parseLocation","peg$parseLabel","peg$parseGoto","peg$parseIncrementSkip","peg$parseDecrementSkip","peg$parseMenu","peg$parseProgram","peg$parseReturn","peg$parseStop","peg$parseDelVar","peg$parseGraphStyle","peg$parseOpenLib","peg$parseExecLib","peg$parseCtlStatement","peg$parsePrompt","peg$parseDisplay","peg$parseIoStatement","peg$parseValueStatement","peg$parseStatement","test","charAt","peg$parseVariableIdentifier","peg$parseDigit","peg$parseExponentPart","peg$parseExponentIndicator","peg$parseInteger","peg$parseSignedInteger","peg$parseCharacter","peg$parseStringLiteral","peg$parseCharacterString","peg$parseLiteral","peg$parseNumericLiteral","peg$parseAnswer","peg$parseUnaryExpression","peg$parsePrimaryExpression","peg$parseUnaryOperator","peg$parseMultiplicativeOperator","peg$parseMultiplicativeExpression","peg$parseAdditiveOperator","peg$parseAdditiveExpression","peg$parseTestOperator","failPos","peg$buildError","reduce","result","element","left","right","loopMessageName","exceptionName","minimumDelay","tasks","exceptions","running","nextTaskId","maxExceptions","eventTarget","document","createTextNode","fireEvent","event","Event","dispatchEvent","startIfNeeded","window","postMessage","createTask","func","delay","runOnce","taskId","console","debug","Math","max","lastRun","stopOnException","suspended","suspendTask","deleteTask","resumeTinyInterval","tinyIntervalID","resumeTask","addEventListener","source","data","stopPropagation","time","performance","now","taskIds","keys","runningTaskCount","suspendedTaskCount","forEach","task","runs","timeSinceRun","floor","ex","FAULTED","DONE","SUSPEND","YIELD","pop","on","removeEventListener","fromConsole","stdout","x","log","stderr","liberr","onStdin","callback","setTimeout","prompt","cleanup","ioFromVal","elem","parseOption","option","defaultValue","includeErrors","includeLineNumbers","includeSource","includeLibErrors","appendToOutput","newline","val","appendToError","index","e","keyCode","off","code","hideSource","newFloat","float","ONE","MINUSONE","isTruthy","resolveNumber","run","lines","sourceLines","split","io","frequencyMs","state","bus","mem","vars","A","B","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","THETA","ans","ctl","resume","searchLabel","ifResult","incrementDecrementResult","maximumLines","linesRun","blockStack","falsyStackHeight","falsyBlockPreviousIf","status","ifResultFalse","evaluate","str","runLine","runLoop","getStatus","isActive","stop","leftNumber","rightNumber"],"mappings":"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","file":"ti.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// types to use for the ti-basic AST\r\n// ==================\r\n\r\nexport const NUMBER = 'number'\r\nexport const BINARY = 'binary'\r\nexport const UNARY = 'unary'\r\nexport const VARIABLE = 'variable'\r\nexport const STRING = 'string'\r\nexport const ANS = 'ans'\r\nexport const ValueStatement = 'value'\r\nexport const AssignmentStatement = 'assign'\r\nexport const IfStatement = 'if'\r\nexport const Display = 'display'\r\nexport const ThenStatement = 'ThenStatement'\r\nexport const ElseStatement = 'ElseStatement'\r\nexport const ForLoop = 'ForLoop'\r\nexport const WhileLoop = 'WhileLoop'\r\nexport const RepeatLoop = 'RepeatLoop'\r\nexport const EndStatement = 'EndStatement'\r\nexport const PauseStatement = 'PauseStatement'\r\nexport const LabelStatement = 'LabelStatement'\r\nexport const GotoStatement = 'GotoStatement'\r\nexport const IncrementSkip = 'IncrementSkip'\r\nexport const DecrementSkip = 'DecrementSkip'\r\nexport const MenuStatement = 'MenuStatement'\r\nexport const ProgramStatement = 'ProgramStatement'\r\nexport const ReturnStatement = 'ReturnStatement'\r\nexport const StopStatement = 'StopStatement'\r\nexport const DelVarStatement = 'DelVarStatement'\r\nexport const GraphStyleStatement = 'GraphStyleStatement'\r\nexport const OpenLibStatement = 'OpenLibStatement'\r\nexport const ExecLibStatement = 'ExecLibStatement'\r\nexport const Prompt = 'Prompt'\r\nexport const SyntaxError = 'SyntaxError'\r\n","// Generated by PEG.js v0.11.0-master.0b102d2, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \"&theta\";\n  var peg$c1 = \".\";\n  var peg$c2 = \"&E\";\n  var peg$c3 = \"\\\"\";\n  var peg$c4 = \"Ans\";\n  var peg$c5 = \")\";\n  var peg$c6 = \"(\";\n  var peg$c7 = \"-\";\n  var peg$c8 = \"*\";\n  var peg$c9 = \"/\";\n  var peg$c10 = \"+\";\n  var peg$c11 = \"=\";\n  var peg$c12 = \"!=\";\n  var peg$c13 = \">=\";\n  var peg$c14 = \">\";\n  var peg$c15 = \"<=\";\n  var peg$c16 = \"<\";\n  var peg$c17 = \"->\";\n  var peg$c18 = \"If \";\n  var peg$c19 = \"Then\";\n  var peg$c20 = \"Else\";\n  var peg$c21 = \"For(\";\n  var peg$c22 = \",\";\n  var peg$c23 = \"While \";\n  var peg$c24 = \"Repeat \";\n  var peg$c25 = \"End\";\n  var peg$c26 = \"Pause\";\n  var peg$c27 = \"Lbl \";\n  var peg$c28 = \"Goto \";\n  var peg$c29 = \"IS>(\";\n  var peg$c30 = \"DS<(\";\n  var peg$c31 = \"Menu(\";\n  var peg$c32 = \"prgm\";\n  var peg$c33 = \"Return\";\n  var peg$c34 = \"Stop\";\n  var peg$c35 = \"DelVar\";\n  var peg$c36 = \"GraphStyle(\";\n  var peg$c37 = \"OpenLib(\";\n  var peg$c38 = \"ExecLib(\";\n  var peg$c39 = \"Prompt \";\n  var peg$c40 = \"Disp \";\n\n  var peg$r0 = /^[A-Z0-9]/;\n  var peg$r1 = /^[A-Z]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[+\\-]/;\n  var peg$r4 = /^[^\"]/;\n\n  var peg$e0 = peg$classExpectation([[\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e1 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e2 = peg$literalExpectation(\"&theta\", false);\n  var peg$e3 = peg$literalExpectation(\".\", false);\n  var peg$e4 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e5 = peg$literalExpectation(\"&E\", false);\n  var peg$e6 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e7 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e8 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e9 = peg$literalExpectation(\"Ans\", false);\n  var peg$e10 = peg$literalExpectation(\")\", false);\n  var peg$e11 = peg$literalExpectation(\"(\", false);\n  var peg$e12 = peg$literalExpectation(\"-\", false);\n  var peg$e13 = peg$literalExpectation(\"*\", false);\n  var peg$e14 = peg$literalExpectation(\"/\", false);\n  var peg$e15 = peg$literalExpectation(\"+\", false);\n  var peg$e16 = peg$literalExpectation(\"=\", false);\n  var peg$e17 = peg$literalExpectation(\"!=\", false);\n  var peg$e18 = peg$literalExpectation(\">=\", false);\n  var peg$e19 = peg$literalExpectation(\">\", false);\n  var peg$e20 = peg$literalExpectation(\"<=\", false);\n  var peg$e21 = peg$literalExpectation(\"<\", false);\n  var peg$e22 = peg$literalExpectation(\"->\", false);\n  var peg$e23 = peg$literalExpectation(\"If \", false);\n  var peg$e24 = peg$literalExpectation(\"Then\", false);\n  var peg$e25 = peg$literalExpectation(\"Else\", false);\n  var peg$e26 = peg$literalExpectation(\"For(\", false);\n  var peg$e27 = peg$literalExpectation(\",\", false);\n  var peg$e28 = peg$literalExpectation(\"While \", false);\n  var peg$e29 = peg$literalExpectation(\"Repeat \", false);\n  var peg$e30 = peg$literalExpectation(\"End\", false);\n  var peg$e31 = peg$literalExpectation(\"Pause\", false);\n  var peg$e32 = peg$literalExpectation(\"Lbl \", false);\n  var peg$e33 = peg$literalExpectation(\"Goto \", false);\n  var peg$e34 = peg$literalExpectation(\"IS>(\", false);\n  var peg$e35 = peg$literalExpectation(\"DS<(\", false);\n  var peg$e36 = peg$literalExpectation(\"Menu(\", false);\n  var peg$e37 = peg$literalExpectation(\"prgm\", false);\n  var peg$e38 = peg$literalExpectation(\"Return\", false);\n  var peg$e39 = peg$literalExpectation(\"Stop\", false);\n  var peg$e40 = peg$literalExpectation(\"DelVar\", false);\n  var peg$e41 = peg$literalExpectation(\"GraphStyle(\", false);\n  var peg$e42 = peg$literalExpectation(\"OpenLib(\", false);\n  var peg$e43 = peg$literalExpectation(\"ExecLib(\", false);\n  var peg$e44 = peg$literalExpectation(\"Prompt \", false);\n  var peg$e45 = peg$literalExpectation(\"Disp \", false);\n\n  var peg$f0 = function() { return text(); };\n  var peg$f1 = function() { return \"THETA\" };\n  var peg$f2 = function(name) { return { type: types.VARIABLE, name } };\n  var peg$f3 = function(integer, fraction, exponent) { \r\n      return { type: types.NUMBER, integer, fraction, exponent }\r\n    };\n  var peg$f4 = function(fraction, exponent) { \r\n      return { type: types.NUMBER, fraction, exponent }\r\n    };\n  var peg$f5 = function(integer, exponent) { \r\n      return { type: types.NUMBER, integer, exponent }\r\n    };\n  var peg$f6 = function(chars) { return { type: types.STRING, chars } };\n  var peg$f7 = function() { return { type: types.ANS } };\n  var peg$f8 = function(operator, argument) { return { type: types.UNARY, operator, argument } };\n  var peg$f9 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f10 = function(value) { return { type: types.ValueStatement, value }};\n  var peg$f11 = function(value, variable) { return { type: types.AssignmentStatement, value, variable }};\n  var peg$f12 = function(value) { return { type: types.IfStatement, value }};\n  var peg$f13 = function() { return { type: types.ThenStatement }};\n  var peg$f14 = function() { return { type: types.ElseStatement }};\n  var peg$f15 = function(variable, start, end, step) { return { type: types.ForLoop, variable, start, end, step }};\n  var peg$f16 = function(value) { return { type: types.WhileLoop, value }};\n  var peg$f17 = function(value) { return { type: types.RepeatLoop, value }};\n  var peg$f18 = function() { return { type: types.EndStatement }};\n  var peg$f19 = function() { return { type: types.PauseStatement }};\n  var peg$f20 = function(location) { return { type: types.LabelStatement, location }};\n  var peg$f21 = function(location) { return { type: types.GotoStatement, location }};\n  var peg$f22 = function(variable, end) { return { type: types.IncrementSkip, variable, end }};\n  var peg$f23 = function(variable, end) { return { type: types.DecrementSkip, variable, end }};\n  var peg$f24 = function() { return { type: types.MenuStatement }};\n  var peg$f25 = function() { return { type: types.ProgramStatement }};\n  var peg$f26 = function() { return { type: types.ReturnStatement }};\n  var peg$f27 = function() { return { type: types.StopStatement }};\n  var peg$f28 = function() { return { type: types.DelVarStatement }};\n  var peg$f29 = function() { return { type: types.GraphStyleStatement }};\n  var peg$f30 = function() { return { type: types.OpenLibStatement }};\n  var peg$f31 = function() { return { type: types.ExecLibStatement }};\n  var peg$f32 = function(variable) { return { type: types.Prompt, variable } };\n  var peg$f33 = function(value) { return { type: types.Display, value } };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parseStart() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStatement();\n\n    return s0;\n  }\n\n  function peg$parseLocation() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e0);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e0);\n      if (peg$r0.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f0();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariableIdentifier() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e1);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e2);\n      if (input.substr(peg$currPos, 6) === peg$c0) {\n        s1 = peg$c0;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f1();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f2(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseNumericLiteral() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e3);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c1;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseExponentPart();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f3(s1, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e3);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c1;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseInteger();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExponentPart();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f4(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseInteger();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseExponentPart();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f5(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e4);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentPart() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponentIndicator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseSignedInteger();\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentIndicator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e5);\n    if (input.substr(peg$currPos, 2) === peg$c2) {\n      s0 = peg$c2;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseDigit();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDigit();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSignedInteger() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e6);\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parseInteger();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e7);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterString() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCharacter();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCharacter();\n    }\n    s0 = input.substring(s0, peg$currPos);\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e8);\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCharacterString();\n      rule$expects(peg$e8);\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c3;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f6(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnswer() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e9);\n    if (input.substr(peg$currPos, 3) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f7();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOptionalEndParen() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e10);\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c5;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLiteral() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseNumericLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAnswer();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseVariable();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseStringLiteral();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrimaryExpression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e11);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c6;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTestExpression();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e10);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c5;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s0 = s2;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e12);\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s0 = peg$c7;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parsePrimaryExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseUnaryExpression();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f8(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e13);\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c8;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e14);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c9;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseUnaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseMultiplicativeOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseUnaryExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseMultiplicativeOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f9(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e15);\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c10;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e12);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c7;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseAdditiveOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseAdditiveOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f9(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e16);\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c11;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e17);\n      if (input.substr(peg$currPos, 2) === peg$c12) {\n        s0 = peg$c12;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e18);\n        if (input.substr(peg$currPos, 2) === peg$c13) {\n          s0 = peg$c13;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          rule$expects(peg$e19);\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s0 = peg$c14;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            rule$expects(peg$e20);\n            if (input.substr(peg$currPos, 2) === peg$c15) {\n              s0 = peg$c15;\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              rule$expects(peg$e21);\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s0 = peg$c16;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditiveExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseTestOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAdditiveExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseTestOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAdditiveExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f9(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseValueStatement() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f10(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAssignment() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e22);\n      if (input.substr(peg$currPos, 2) === peg$c17) {\n        s2 = peg$c17;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseVariable();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f11(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfStatement() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e23);\n    if (input.substr(peg$currPos, 3) === peg$c18) {\n      s1 = peg$c18;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f12(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThen() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e24);\n    if (input.substr(peg$currPos, 4) === peg$c19) {\n      s1 = peg$c19;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f13();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e25);\n    if (input.substr(peg$currPos, 4) === peg$c20) {\n      s1 = peg$c20;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f14();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e26);\n    if (input.substr(peg$currPos, 4) === peg$c21) {\n      s1 = peg$c21;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c22;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseTestExpression();\n          if (s4 !== peg$FAILED) {\n            rule$expects(peg$e27);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c22;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseTestExpression();\n              if (s6 !== peg$FAILED) {\n                rule$expects(peg$e27);\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s7 = peg$c22;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseTestExpression();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parseOptionalEndParen();\n                    peg$savedPos = s0;\n                    s0 = peg$f15(s2, s4, s6, s8);\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e28);\n    if (input.substr(peg$currPos, 6) === peg$c23) {\n      s1 = peg$c23;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f16(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRepeat() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e29);\n    if (input.substr(peg$currPos, 7) === peg$c24) {\n      s1 = peg$c24;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnd() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e30);\n    if (input.substr(peg$currPos, 3) === peg$c25) {\n      s1 = peg$c25;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f18();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsePause() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e31);\n    if (input.substr(peg$currPos, 5) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f19();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLabel() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e32);\n    if (input.substr(peg$currPos, 4) === peg$c27) {\n      s1 = peg$c27;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f20(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGoto() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e33);\n    if (input.substr(peg$currPos, 5) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f21(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIncrementSkip() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e34);\n    if (input.substr(peg$currPos, 4) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c22;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseTestExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseOptionalEndParen();\n            peg$savedPos = s0;\n            s0 = peg$f22(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecrementSkip() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e35);\n    if (input.substr(peg$currPos, 4) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s3 = peg$c22;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseTestExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseOptionalEndParen();\n            peg$savedPos = s0;\n            s0 = peg$f23(s2, s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMenu() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e36);\n    if (input.substr(peg$currPos, 5) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f24();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseProgram() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e37);\n    if (input.substr(peg$currPos, 4) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f25();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e38);\n    if (input.substr(peg$currPos, 6) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f26();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStop() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e39);\n    if (input.substr(peg$currPos, 4) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f27();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDelVar() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e40);\n    if (input.substr(peg$currPos, 6) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f28();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGraphStyle() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e41);\n    if (input.substr(peg$currPos, 11) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 11;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f29();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOpenLib() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e42);\n    if (input.substr(peg$currPos, 8) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f30();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseExecLib() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e43);\n    if (input.substr(peg$currPos, 8) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f31();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseCtlStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseIfStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseThen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseElse();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseWhile();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseEnd();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsePause();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseLabel();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGoto();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseIncrementSkip();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseDecrementSkip();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseMenu();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseProgram();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseReturn();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseStop();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseDelVar();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseGraphStyle();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseOpenLib();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseExecLib();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrompt() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e44);\n    if (input.substr(peg$currPos, 7) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f32(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisplay() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e45);\n    if (input.substr(peg$currPos, 5) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f33(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIoStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parsePrompt();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDisplay();\n    }\n\n    return s0;\n  }\n\n  function peg$parseStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAssignment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCtlStatement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseIoStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseValueStatement();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n\r\n      const types = require ('./types.js');\r\n      const util = require ('./pegutil.js');\r\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","// utilities for use in parsing ti-basic\r\n// ==================\r\n\r\nimport * as types from './types.js'\r\n\r\nexport function buildBinaryExpression (head, tail) {\r\n  return tail.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: element[0],\r\n      left: result,\r\n      right: element[1]\r\n    }\r\n  }, head)\r\n}\r\n","// daemon to get around setTimeout limitations\r\n// ==================\r\n\r\nconst loopMessageName = 'daemon-loop'\r\nconst exceptionName = 'daemon-exception'\r\nconst minimumDelay = 0.001 // 1 microsecond\r\nconst tasks = {}\r\nconst exceptions = []\r\nlet running = false\r\nlet nextTaskId = 0\r\nconst maxExceptions = 1000\r\n\r\nconst eventTarget = document.createTextNode(null)\r\n\r\nfunction fireEvent (name) {\r\n  const event = new Event(name)\r\n  eventTarget.dispatchEvent(event)\r\n}\r\n\r\nfunction startIfNeeded () {\r\n  if (running === false) {\r\n    running = true\r\n    fireEvent('start')\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n}\r\n\r\nfunction createTask (func, delay, runOnce) {\r\n  const taskId = nextTaskId++\r\n\r\n  console.debug(`[Task ${taskId}] Start`)\r\n\r\n  tasks[taskId] = {\r\n    func: func,\r\n    delay: Math.max(delay, minimumDelay),\r\n    lastRun: undefined,\r\n    runOnce: runOnce,\r\n    stopOnException: true,\r\n    suspended: false\r\n  }\r\n\r\n  startIfNeeded()\r\n  return taskId\r\n}\r\n\r\nfunction resumeTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Resume`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    console.debug(tasks)\r\n    throw new Error(`Error resuming: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = false\r\n  startIfNeeded()\r\n};\r\n\r\nfunction suspendTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Suspend`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    throw new Error(`Error suspending: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = true\r\n};\r\n\r\nfunction deleteTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Stop`)\r\n  delete tasks[taskId]\r\n};\r\n\r\nfunction handleMessage (event) {\r\n  if (!(event.source === window && event.data === loopMessageName)) {\r\n    return\r\n  }\r\n\r\n  event.stopPropagation()\r\n\r\n  const time = performance.now()\r\n  const taskIds = Object.keys(tasks)\r\n  let runningTaskCount = 0\r\n  let suspendedTaskCount = 0\r\n\r\n  taskIds.forEach(taskId => {\r\n    const task = tasks[taskId]\r\n\r\n    let runs\r\n    if (task.suspended === true) {\r\n      runs = 0\r\n      suspendedTaskCount += 1\r\n    } else {\r\n      runningTaskCount += 1\r\n\r\n      if (task.lastRun === undefined || task.runOnce) {\r\n        runs = 1\r\n      } else {\r\n        const timeSinceRun = time - task.lastRun\r\n        runs = Math.floor(timeSinceRun / task.delay)\r\n      }\r\n    }\r\n\r\n    if (runs > 0) {\r\n      task.lastRun = time\r\n    }\r\n\r\n    for (let i = 0; i < runs; i++) {\r\n      let result\r\n\r\n      try {\r\n        result = task.func()\r\n      } catch (ex) {\r\n        result = FAULTED\r\n\r\n        if (exceptions.length < maxExceptions) {\r\n          exceptions.push(ex)\r\n          window.postMessage(exceptionName, '*')\r\n        }\r\n      }\r\n\r\n      if (result === DONE ||\r\n                task.runOnce ||\r\n                (task.stopOnException && result === FAULTED)) {\r\n        deleteTask(taskId)\r\n        runningTaskCount -= 1\r\n        break\r\n      }\r\n\r\n      if (result === SUSPEND) {\r\n        suspendTask(taskId)\r\n        runningTaskCount -= 1\r\n        suspendedTaskCount += 1\r\n        break\r\n      }\r\n\r\n      if (result === YIELD) {\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (runningTaskCount === 0) {\r\n    running = false\r\n    if (suspendedTaskCount > 0) {\r\n      fireEvent('suspend')\r\n    } else {\r\n      fireEvent('stop')\r\n    }\r\n  } else {\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n};\r\n\r\nfunction handleException (event) {\r\n  if (!(event.source === window && event.data === exceptionName)) {\r\n    return\r\n  }\r\n\r\n  if (exceptions.length > 0) {\r\n    throw exceptions.pop()\r\n  }\r\n}\r\n\r\nwindow.addEventListener('message', handleMessage, true)\r\nwindow.addEventListener('message', handleException, true)\r\n\r\nexport function setTinyInterval (func, delay) {\r\n  return createTask(func, delay)\r\n}\r\n\r\nexport function clearTinyInterval (tinyIntervalID) {\r\n  deleteTask(tinyIntervalID)\r\n}\r\n\r\nexport function resumeTinyInterval (tinyIntervalID) {\r\n  resumeTask(tinyIntervalID)\r\n}\r\n\r\nexport function setTinyTimeout (func, delay) {\r\n  return createTask(func, delay, true)\r\n}\r\n\r\nexport function clearTinyTimeout (tinyTimeoutID) {\r\n  deleteTask(tinyTimeoutID)\r\n}\r\n\r\nexport const YIELD = 'yield'\r\nexport const DONE = 'done'\r\nexport const FAULTED = 'faulted'\r\nexport const SUSPEND = 'suspend'\r\n\r\nexport const on = eventTarget.addEventListener.bind(eventTarget)\r\nexport const off = eventTarget.removeEventListener.bind(eventTarget)\r\n// export const dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget)\r\n","// input/output\r\n// ==================\r\n\r\nexport function error (io, ex) {\r\n  if (ex.type === 'ti') {\r\n    io.stderr(`ERR:${ex.code}`, ex.source)\r\n  } else if (ex.type === 'lib') {\r\n    io.liberr(`Error: ${ex.code}`, ex.source)\r\n  }\r\n};\r\n\r\nexport const fromConsole = {\r\n  stdout: x => console.log(x),\r\n  stderr: (x, source) => console.log(x),\r\n  liberr: (x, source) => console.log(x),\r\n  onStdin: callback => setTimeout(() => callback(prompt('Input?')), 100),\r\n  cleanup: () => {}\r\n}\r\n\r\nexport function ioFromVal (elem, options = {}) {\r\n  const parseOption = (option, defaultValue) => {\r\n    return option === undefined ? defaultValue : option === true\r\n  }\r\n\r\n  const includeErrors = parseOption(options.includeErrors, true)\r\n  const includeLineNumbers = parseOption(options.includeLineNumbers, true)\r\n  const includeSource = parseOption(options.includeSource, true)\r\n  const includeLibErrors = parseOption(options.includeLibErrors, true)\r\n  const input = options.input\r\n\r\n  const appendToOutput = (x, newline = true) => setTimeout(() => {\r\n    let result = elem.val() + x\r\n    if (newline) {\r\n      result += '\\n'\r\n    }\r\n    elem.val(result)\r\n  }, 0)\r\n\r\n  const appendToError = (x, source) => {\r\n    let result = x\r\n    if (source !== undefined) {\r\n      if (source.index !== undefined && includeLineNumbers) {\r\n        result += ` on line ${source.index}`\r\n      }\r\n\r\n      if (source.line !== undefined && includeSource) {\r\n        result += ` :${source.line}`\r\n      }\r\n    }\r\n    appendToOutput(result)\r\n  }\r\n\r\n  const enterkey = 13\r\n\r\n  const onStdin = callback => {\r\n    setTimeout(() => input.val(''), 0)\r\n    input.on('keypress', e => {\r\n      if (e.keyCode === enterkey) {\r\n        input.off('keypress')\r\n        const result = input.val()\r\n        setTimeout(() => input.val(''), 0)\r\n        callback(result)\r\n      }\r\n    })\r\n  }\r\n\r\n  return {\r\n    stdout: appendToOutput,\r\n    stderr: includeErrors ? appendToError : fromConsole.stderr,\r\n    liberr: includeLibErrors ? appendToError : fromConsole.stderr,\r\n    onStdin: input !== undefined ? onStdin : fromConsole.onStdin,\r\n    cleanup: () => input.off('keypress')\r\n  }\r\n};\r\n","// core runtime\r\n// ==================\r\n\r\nimport * as daemon from './daemon'\r\nimport * as iolib from './io'\r\nimport * as types from './types'\r\n\r\nexport function error (type, code, hideSource = false) {\r\n  return {\r\n    type: type,\r\n    code: code,\r\n    hideSource: hideSource\r\n  }\r\n}\r\n\r\nfunction newFloat (value = 0) {\r\n  return { type: types.NUMBER, float: value }\r\n}\r\n\r\nconst ONE = newFloat(1)\r\n\r\nconst MINUSONE = newFloat(-1)\r\n\r\nfunction newMem () {\r\n  return {\r\n    vars: {\r\n      A: newFloat(),\r\n      B: newFloat(),\r\n      C: newFloat(),\r\n      D: newFloat(),\r\n      E: newFloat(),\r\n      F: newFloat(),\r\n      G: newFloat(),\r\n      H: newFloat(),\r\n      I: newFloat(),\r\n      J: newFloat(),\r\n      K: newFloat(),\r\n      L: newFloat(),\r\n      M: newFloat(),\r\n      N: newFloat(),\r\n      O: newFloat(),\r\n      P: newFloat(),\r\n      Q: newFloat(),\r\n      R: newFloat(),\r\n      S: newFloat(),\r\n      T: newFloat(),\r\n      U: newFloat(),\r\n      V: newFloat(),\r\n      W: newFloat(),\r\n      X: newFloat(),\r\n      Y: newFloat(),\r\n      Z: newFloat(),\r\n      THETA: newFloat()\r\n    },\r\n    ans: newFloat()\r\n  }\r\n};\r\n\r\nfunction isTruthy (value) {\r\n  if (value.type === types.NUMBER) {\r\n    return resolveNumber(value) !== 0\r\n  }\r\n  return false\r\n}\r\n\r\nexport function run (lines, options = {}) {\r\n  let sourceLines = []\r\n  if (options.source !== undefined) {\r\n    if (Array.isArray(options.source)) {\r\n      sourceLines = options.source\r\n    } else {\r\n      sourceLines = options.source.split(/\\r?\\n/)\r\n    }\r\n  }\r\n\r\n  let io = iolib.fromConsole\r\n  if (options.io !== undefined) {\r\n    io = options.io\r\n  }\r\n\r\n  let frequencyMs = 1\r\n  if (options.frequencyMs !== undefined) {\r\n    frequencyMs = options.frequencyMs\r\n  }\r\n\r\n  const state = {\r\n    bus: {\r\n      mem: newMem(),\r\n      io: io,\r\n      ctl: {\r\n        resume: undefined,\r\n        callback: undefined\r\n      }\r\n    },\r\n\r\n    debug: options.debug === true,\r\n    sourceLines: sourceLines,\r\n\r\n    searchLabel: undefined,\r\n    ifResult: undefined,\r\n    incrementDecrementResult: undefined,\r\n\r\n    maximumLines: 50,\r\n    linesRun: 0,\r\n\r\n    blockStack: [],\r\n    falsyStackHeight: undefined,\r\n    falsyBlockPreviousIf: undefined,\r\n\r\n    i: 0,\r\n    lines: lines,\r\n\r\n    callback: options.callback,\r\n    frequencyMs: frequencyMs,\r\n\r\n    status: 'pending'\r\n  }\r\n\r\n  const taskId = daemon.setTinyInterval(() => runLoop(state), state.frequencyMs)\r\n  state.bus.ctl.resume = (callback) => {\r\n    state.bus.ctl.callback = callback\r\n    daemon.resumeTinyInterval(taskId)\r\n  }\r\n\r\n  return {\r\n    getStatus: () => state.status,\r\n    isActive: () => state.status === 'pending' || state.status === 'running',\r\n    stop: () => {\r\n      io.cleanup()\r\n      daemon.clearTinyInterval(taskId)\r\n    }\r\n  }\r\n}\r\n\r\nfunction runLoop (state) {\r\n  let result\r\n\r\n  try {\r\n    state.status = 'running'\r\n    result = runLine(state)\r\n  } catch (ex) {\r\n    state.status = 'faulted'\r\n\r\n    if (ex.type === undefined) {\r\n      throw ex\r\n    }\r\n\r\n    if (state.i < state.lines.length && ex.hideSource !== true) {\r\n      let source = state.lines[state.i].source\r\n      if (state.sourceLines !== undefined) {\r\n        source = state.sourceLines[state.i]\r\n      }\r\n      ex.source = {\r\n        index: state.i,\r\n        line: source\r\n      }\r\n    }\r\n\r\n    iolib.error(state.bus.io, ex)\r\n    result = daemon.DONE\r\n  }\r\n\r\n  if (result === daemon.DONE) {\r\n    if (state.status !== 'faulted') {\r\n      state.status = 'done'\r\n    }\r\n\r\n    if (state.callback !== undefined) {\r\n      setTimeout(state.callback, 0)\r\n    }\r\n  } else {\r\n    state.i += 1\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction runLine (state) {\r\n  if (state.debug) {\r\n    console.debug(`Line: ${state.i}, \\t\\\r\nsearchLabel: ${state.searchLabel || ''}, \\t\\\r\nifResult: ${state.ifResult || ''}, \\t\\\r\nblockStack: ${state.blockStack || ''} \\t\\\r\nfalsyStackHeight: ${state.falsyStackHeight || ''}, \\t\\\r\nfalsyBlockPreviousIf: ${state.falsyBlockPreviousIf || ''}, \\t\\\r\nsource: ${state.sourceLines[state.i] || ''}`)\r\n  }\r\n\r\n  if (state.i >= state.lines.length) {\r\n    if (state.searchLabel !== undefined) {\r\n      throw error('ti', 'LABEL')\r\n    }\r\n\r\n    if (state.debug) {\r\n      console.debug(state.bus.mem)\r\n    }\r\n\r\n    return daemon.DONE\r\n  }\r\n\r\n  if (state.bus.ctl.callback !== undefined) {\r\n    state.bus.ctl.callback()\r\n    state.bus.ctl.callback = undefined\r\n  }\r\n\r\n  state.linesRun++\r\n\r\n  if (state.linesRun >= state.maximumLines) {\r\n    throw error('lib', 'maxlines')\r\n  }\r\n\r\n  const line = state.lines[state.i]\r\n  const type = line.type\r\n\r\n  // ----- scan for end -----\r\n\r\n  if (state.falsyStackHeight !== undefined) {\r\n    const lastBlockIndex = state.blockStack[state.blockStack.length - 1]\r\n    const lastBlock = state.lines[lastBlockIndex]\r\n\r\n    if (type === types.EndStatement ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.pop()\r\n\r\n      if (state.blockStack.length < state.falsyStackHeight) {\r\n        state.falsyStackHeight = undefined\r\n      }\r\n    }\r\n\r\n    if (type === types.ForLoop ||\r\n      type === types.RepeatLoop ||\r\n      type === types.WhileLoop ||\r\n      (type === types.ThenStatement && state.falsyBlockPreviousIf === true) ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.push(state.i)\r\n    }\r\n\r\n    state.falsyBlockPreviousIf = type === types.IfStatement\r\n    return\r\n  }\r\n\r\n  state.falsyBlockPreviousIf = undefined\r\n\r\n  // ----- search for label -----\r\n\r\n  if (state.searchLabel !== undefined) {\r\n    if (type === types.LabelStatement && line.location === state.searchLabel) {\r\n      state.searchLabel = undefined\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  // ----- check if result -----\r\n\r\n  if (state.ifResult !== undefined) {\r\n    const ifResultFalse = state.ifResult !== true\r\n    state.ifResult = undefined\r\n\r\n    if (type === types.ThenStatement) {\r\n      state.blockStack.push(state.i)\r\n\r\n      if (ifResultFalse) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (ifResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- check incrementDecrementResult -----\r\n\r\n  if (state.incrementDecrementResult !== undefined) {\r\n    const incrementDecrementResultFalse = state.incrementDecrementResult !== true\r\n    state.incrementDecrementResult = undefined\r\n\r\n    if (incrementDecrementResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- normal execution -----\r\n\r\n  let source, sourceLine\r\n\r\n  switch (type) {\r\n    // ----- CtlStatement -----\r\n    case types.IfStatement:\r\n      state.ifResult = isTruthy(evaluate(line.value, state.bus.mem))\r\n      break\r\n    case types.ThenStatement:\r\n      throw error('ti', 'SYNTAX')\r\n    case types.ElseStatement:\r\n      if (state.blockStack.length === 0) {\r\n        throw error('ti', 'SYNTAX')\r\n      }\r\n      if (state.lines[state.blockStack.pop()].type === types.ThenStatement) {\r\n        state.blockStack.push(state.i)\r\n        state.falsyStackHeight = state.blockStack.length\r\n      } else {\r\n        throw error('ti', 'SYNTAX')\r\n      }\r\n      break\r\n    case types.ForLoop:\r\n      assignVariable(state.bus.mem, line.variable.name, evaluate(line.start, state.bus.mem))\r\n      state.blockStack.push(state.i)\r\n      if (!isTruthy(evaluate(binaryOperation(line.variable, '<=', line.end), state.bus.mem))) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n      break\r\n    case types.WhileLoop:\r\n      state.blockStack.push(state.i)\r\n      if (!isTruthy(evaluate(line.value, state.bus.mem))) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n      break\r\n    case types.RepeatLoop:\r\n      state.blockStack.push(state.i)\r\n      break\r\n    case types.EndStatement:\r\n      if (state.blockStack.length === 0) {\r\n        throw error('ti', 'SYNTAX')\r\n      }\r\n      source = state.blockStack.pop()\r\n      sourceLine = state.lines[source]\r\n      if (sourceLine.type === types.ForLoop ||\r\n              sourceLine.type === types.WhileLoop ||\r\n              sourceLine.type === types.RepeatLoop) {\r\n        if (sourceLine.type === types.ForLoop) {\r\n          increment(state.bus.mem, sourceLine.variable, sourceLine.step)\r\n          if (isTruthy(evaluate(binaryOperation(sourceLine.variable, '<=', sourceLine.end), state.bus.mem))) {\r\n            state.blockStack.push(source)\r\n            state.i = source\r\n          }\r\n        } else if (isTruthy(evaluate(sourceLine.value, state.bus.mem))) {\r\n          state.blockStack.push(source)\r\n          state.i = source\r\n        }\r\n      } else if (sourceLine.type === types.ThenStatement ||\r\n                  sourceLine.type === types.ElseStatement) {\r\n        // empty\r\n      } else {\r\n        throw error('lib', `impossibleEndFrom'${sourceLine.type}`)\r\n      }\r\n      break\r\n    case types.PauseStatement:\r\n      throw error('lib', 'unimplemented')\r\n    case types.LabelStatement:\r\n      break\r\n    case types.GotoStatement:\r\n      state.searchLabel = line.location\r\n      state.i = -1\r\n      break\r\n      // TODO increment and decrement have an interaction with DelVar\r\n    case types.IncrementSkip:\r\n      increment(state.bus.mem, line.variable, ONE)\r\n      state.incrementDecrementResult = isTruthy(evaluate(binaryOperation(line.variable, '<=', line.end), state.bus.mem))\r\n      break\r\n    case types.DecrementSkip:\r\n      increment(state.bus.mem, line.variable, MINUSONE)\r\n      state.incrementDecrementResult = isTruthy(evaluate(binaryOperation(line.variable, '>=', line.end), state.bus.mem))\r\n      break\r\n      // ----- other -----\r\n    case types.AssignmentStatement:\r\n      assignVariable(state.bus.mem, line.variable.name, evaluate(line.value, state.bus.mem))\r\n      break\r\n    case types.Display:\r\n      state.bus.io.stdout(valueToString(evaluate(line.value, state.bus.mem)))\r\n      break\r\n    case types.Prompt:\r\n      state.bus.io.stdout(`${line.variable.name}=?`, false)\r\n      state.bus.io.onStdin(input => state.bus.ctl.resume(() => {\r\n        if (input === null || input === undefined || input === '') {\r\n          state.bus.io.stdout('')\r\n          throw error('ti', 'SYNTAX', true)\r\n        }\r\n        state.bus.io.stdout(input)\r\n        assignVariable(state.bus.mem, line.variable.name, newFloat(parseFloat(input)))\r\n      }))\r\n      return daemon.SUSPEND\r\n    case types.ValueStatement:\r\n      assignAns(state.bus.mem, evaluate(line.value, state.bus.mem))\r\n      break\r\n    case types.SyntaxError:\r\n      throw error('ti', 'SYNTAX')\r\n    default:\r\n      throw error('lib', 'unexpected')\r\n  }\r\n}\r\n\r\nfunction assignVariable (mem, name, value) {\r\n  if (value.type === types.NUMBER) {\r\n    mem.vars[name] = value\r\n  }\r\n}\r\n\r\nfunction assignAns (mem, value) {\r\n  mem.ans = value\r\n}\r\n\r\nfunction binaryOperation (left, operator, right) {\r\n  return {\r\n    type: types.BINARY,\r\n    operator,\r\n    left,\r\n    right\r\n  }\r\n}\r\n\r\nfunction increment (mem, variable, step) {\r\n  assignVariable(mem, variable.name, evaluate({\r\n    type: types.BINARY,\r\n    operator: '+',\r\n    left: variable,\r\n    right: step\r\n  }, mem), mem)\r\n}\r\n\r\nfunction evaluate (value, mem) {\r\n  const t = value.type\r\n  if (t === types.NUMBER || t === types.STRING) {\r\n    return value\r\n  } else if (t === types.UNARY) {\r\n    const argument = evaluate(value.argument, mem)\r\n    if (argument.type === types.NUMBER) {\r\n      const argumentNumber = resolveNumber(argument)\r\n      let result\r\n      switch (value.operator) {\r\n        case '-': result = -1 * argumentNumber; break\r\n        default: throw error('lib', 'unexpected numeric unary operator')\r\n      }\r\n      return { type: types.NUMBER, float: result }\r\n    }\r\n  } else if (t === types.BINARY) {\r\n    const left = evaluate(value.left, mem)\r\n    const right = evaluate(value.right, mem)\r\n    if (left.type !== right.type) {\r\n      throw error('ti', 'DATA TYPE')\r\n    }\r\n    if (left.type === types.NUMBER) {\r\n      const leftNumber = resolveNumber(left)\r\n      const rightNumber = resolveNumber(right)\r\n      let result\r\n      switch (value.operator) {\r\n        case '+': result = leftNumber + rightNumber; break\r\n        case '-': result = leftNumber - rightNumber; break\r\n        case '*': result = leftNumber * rightNumber; break\r\n        case '/': result = leftNumber / rightNumber; break\r\n        case '=': result = leftNumber === rightNumber ? 1 : 0; break\r\n        case '!=': result = leftNumber !== rightNumber ? 1 : 0; break\r\n        case '>=': result = leftNumber >= rightNumber ? 1 : 0; break\r\n        case '>': result = leftNumber > rightNumber ? 1 : 0; break\r\n        case '<=': result = leftNumber <= rightNumber ? 1 : 0; break\r\n        case '<': result = leftNumber < rightNumber ? 1 : 0; break\r\n        default: throw error('lib', 'unexpected numeric binray operator')\r\n      }\r\n      return { type: types.NUMBER, float: result }\r\n    } else if (left.type === types.STRING) {\r\n      let result\r\n      let numberResult\r\n      switch (value.operator) {\r\n        case '+': result = left.chars + right.chars; break\r\n        case '=': numberResult = left.chars === right.chars ? 1 : 0; break\r\n        case '!=': numberResult = left.chars !== right.chars ? 1 : 0; break\r\n        default: throw error('lib', 'unexpected string binary operator')\r\n      }\r\n      if (result !== undefined) {\r\n        return { type: types.STRING, chars: result }\r\n      }\r\n      if (numberResult !== undefined) {\r\n        return { type: types.NUMBER, float: numberResult }\r\n      }\r\n      throw error('lib', 'unexpected string binary result')\r\n    }\r\n  } else if (t === types.VARIABLE) {\r\n    return mem.vars[value.name]\r\n  } else if (t === types.ANS) {\r\n    return mem.ans\r\n  }\r\n\r\n  throw error('lib', 'unexpected value')\r\n}\r\n\r\nfunction resolveNumber (value) {\r\n  if (value.float !== undefined) {\r\n    return value.float\r\n  }\r\n  let str = ''\r\n  if (value.integer !== undefined && value.integer !== null) {\r\n    str += value.integer\r\n  }\r\n  if (value.fraction !== undefined && value.fraction !== null) {\r\n    str += '.' + value.fraction\r\n  }\r\n  if (value.exponent !== undefined && value.exponent !== null) {\r\n    str += 'e' + value.exponent\r\n  }\r\n  return parseFloat(str)\r\n}\r\n\r\nfunction valueToString (value) {\r\n  let str = ''\r\n  switch (value.type) {\r\n    case types.NUMBER:\r\n      str = resolveNumber(value).toString()\r\n      if (str.startsWith('0.')) {\r\n        str = str.substring(1)\r\n      }\r\n      break\r\n    case types.STRING:\r\n      str = value.chars\r\n      break\r\n    default:\r\n      throw error('lib', 'unexpected value tostring')\r\n  }\r\n  return str\r\n}\r\n","// ti-basic parser using pegjs\r\n// ==================\r\n\r\nimport parser from './tibasic.pegjs'\r\n\r\nexport function parse (source, options = {}) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceMap = options.sourceMap || 'inline'\r\n\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  const parsedLines = sourceLines.map(s => {\r\n    let parsedLine\r\n    try {\r\n      parsedLine = parser.parse(s)\r\n    } catch (error) {\r\n      if (error.name === 'SyntaxError') {\r\n        parsedLine = { type: 'SyntaxError' }\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    if (sourceMap === 'inline') {\r\n      parsedLine.source = s\r\n    }\r\n    return parsedLine\r\n  })\r\n\r\n  return parsedLines\r\n}\r\n","// entry point\r\n// ==================\r\n\r\nexport { run } from './core.js'\r\nexport { on } from './daemon.js'\r\nexport { ioFromVal } from './io.js'\r\nexport { parse } from './parser.js'\r\n"],"sourceRoot":""}