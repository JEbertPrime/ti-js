{"version":3,"sources":["webpack://ti/webpack/bootstrap","webpack://ti/./src/common/types.js","webpack://ti/./src/parse/tibasic.pegjs","webpack://ti/./src/parse/pegutil.js","webpack://ti/./src/common/core.js","webpack://ti/./src/parse/parser.js","webpack://ti/./src/evaluate/operation.js","webpack://ti/./src/evaluate/expression.js","webpack://ti/./src/evaluate/assignment.js","webpack://ti/./src/evaluate/iolib.js","webpack://ti/./src/evaluate/statement.js","webpack://ti/./src/common/signal.js","webpack://ti/./src/run/daemon.js","webpack://ti/./src/run/runtime.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ti","lib","SyntaxError","NUMBER","LIST","STRING","ANS","GetKey","VARIABLE","STRINGVARIABLE","LISTVARIABLE","LISTINDEX","BINARY","UNARY","EmptyStatement","ValueStatement","AssignmentStatement","IfStatement","ThenStatement","ElseStatement","ForLoop","WhileLoop","RepeatLoop","EndStatement","PauseStatement","LabelStatement","GotoStatement","IncrementSkip","DecrementSkip","MenuStatement","ProgramStatement","ReturnStatement","StopStatement","DelVarStatement","GraphStyleStatement","OpenLibStatement","ExecLibStatement","Input","Prompt","Display","DispGraph","DispTable","Output","ClrHome","ClrTable","GetCalc","Get","Send","peg$SyntaxError","message","expected","found","location","this","Error","captureStackTrace","child","parent","C","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","any","end","other","description","not","describeExpectation","hex","ch","charCodeAt","toString","toUpperCase","replace","type","j","descriptions","sort","length","slice","join","describeExpected","describeFound","parse","input","options","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$e0","peg$e1","peg$classExpectation","peg$e2","peg$e3","peg$e4","peg$literalExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$e63","peg$f1","peg$f17","operator","argument","types","peg$f18","head","tail","util","buildImplicitBinaryExpression","peg$f19","buildBinaryExpression","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$expected","startRule","substring","ignoreCase","peg$computePosDetails","pos","details","peg$VALIDFILENAME","filename","peg$computeLocation","startPos","endPos","loc","startPosDetails","start","offset","endPosDetails","peg$begin","push","variants","peg$expect","top","peg$buildStructuredError","s0","s1","s2","peg$parseSourceCharacter","invert","pop","e","apply","peg$end","peg$parseEmptyStatement","s3","peg$parseTestExpression","rule$expects","substr","peg$parseAssignable","assignable","peg$parseAssignment","peg$parseExtraCharacters","extra","peg$parseIfStatement","peg$parseThen","peg$parseElse","s4","s5","s6","s8","peg$parseVariable","peg$parseArgumentExpression","peg$parseExtraArguments","peg$parseOptionalEndParen","variable","step","args","peg$parseFor","peg$parseWhile","peg$parseRepeat","peg$parseEnd","peg$parsePause","peg$parseLocation","peg$f31","peg$parseLabel","peg$f32","peg$parseGoto","peg$parseIncrementSkip","peg$parseDecrementSkip","s7","peg$parseStringLiteral","title","buildMenuStatement","peg$f35","peg$parseMenu","peg$parseProgramName","peg$parseProgram","peg$parseReturn","peg$parseStop","peg$parseDelVar","equation","style","peg$parseGraphStyle","peg$parseOpenLib","peg$parseExecLib","peg$parseCtlStatement","peg$parsePrefixArgumentExpression","peg$f43","peg$parseInput","peg$parsePrompt","peg$parseDisplay","peg$parseDispGraph","peg$parseDispTable","row","peg$parseOutput","peg$parseClrHome","peg$parseClrTable","portflag","peg$parseGetCalc","peg$parseGet","peg$parseSend","peg$parseIoStatement","peg$parseValueStatement","peg$parseStatement","charAt","peg$parseAlpha","test","peg$parseAlphaNum","peg$parseDigit","peg$parseCustomListVariableIdentifier","peg$parseNumericVariable","peg$parseNumericVariableIdentifier","peg$parseStringVariable","peg$parseStringVariableIdentifier","peg$parseListVariable","peg$parseListVariableIdentifier","custom","peg$f8","peg$parseListIndex","list","index","peg$parseInteger","peg$parseExponentPart","peg$parseExponentIndicator","peg$parseSignedInteger","peg$parseNumericLiteral","integer","fraction","exponent","peg$f11","peg$f12","peg$parseCharacter","chars","peg$parseCharacterString","peg$parseAnswer","peg$parseGetKey","peg$parseTokenLiteral","peg$parseToken","peg$parseListExpression","buildList","peg$parseUnaryOperator","peg$parseTokenUnaryExpression","peg$parseTokenExpression","peg$parseUnaryExpression","peg$parseImplicitMultiplicativeExpression","peg$parseMultiplicativeOperator","peg$parseMultiplicativeExpression","peg$parseAdditiveOperator","peg$parseAdditiveExpression","peg$parseTestOperator","failPos","peg$buildError","reduce","result","element","left","right","flat","choices","option","elements","concat","error","code","hideSource","tiError","DataTypeError","UndefinedError","LabelError","ArgumentError","DimMismatchError","DivideByZeroError","InvalidDimError","DomainError","libError","UnimplementedError","newFloat","float","ONE","MINUSONE","source","sourceMap","split","parsedLine","isTruthy","assignVariable","mem","vars","assignAns","ans","binaryOperation","resolveNumber","str","parseFloat","valueToString","strict","startsWith","evaluate","behavior","expressionOf","resolved","unaryOf","binaryOf","applyUnaryOperation","applyBinaryOperationListAndNumber","number","applyBinaryOperation","x","y","includes","assignmentOf","stdout","newline","elem","setTimeout","val","console","log","onStdin","callback","stdin","stdinQueue","reverse","on","keyCode","off","prompt","statementOf","increment","getInput","state","allowStringLiterals","io","resume","sourceLines","Length","sourceLine","ifResult","blockStack","lines","falsyStackHeight","searchLabel","incrementDecrementResult","forEach","choice","idx","digit","rows","columns","tasks","exceptions","running","nextTaskId","eventTarget","document","createTextNode","fireEvent","event","Event","dispatchEvent","startIfNeeded","window","postMessage","createTask","func","delay","runOnce","taskId","debug","Math","max","lastRun","stopOnException","suspended","suspendTask","deleteTask","resumeTinyInterval","tinyIntervalID","resumeTask","addEventListener","data","stopPropagation","time","performance","now","taskIds","keys","runningTaskCount","suspendedTaskCount","task","runs","timeSinceRun","floor","ex","removeEventListener","run","frequencyMs","resumeCallback","maximumLines","linesRun","falsyBlockPreviousIf","status","includeErrors","includeLibErrors","includeLineNumbers","includeSource","Line","lastBlockIndex","lastBlock","ifResultFalse","incrementDecrementResultFalse","runLine","runLoop","getStatus","isActive","stop"],"mappings":"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","file":"ti.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// types\r\n// =====\r\n\r\n// ----- Errors -----\r\n\r\nexport const ti = 'ti'\r\nexport const lib = 'lib'\r\nexport const SyntaxError = 'SyntaxError'\r\n\r\n// ----- Values -----\r\n\r\nexport const NUMBER = 'number'\r\nexport const LIST = 'list'\r\nexport const STRING = 'string'\r\n\r\n// ----- Tokens -----\r\n\r\nexport const ANS = 'ans'\r\nexport const GetKey = 'GetKey'\r\n\r\n// ----- Variables -----\r\n\r\nexport const VARIABLE = 'variable'\r\nexport const STRINGVARIABLE = 'stringVariable'\r\nexport const LISTVARIABLE = 'listVariable'\r\nexport const LISTINDEX = 'listIndex'\r\n\r\n// ----- Expressions -----\r\n\r\nexport const BINARY = 'binary'\r\nexport const UNARY = 'unary'\r\n\r\n// ----- Statements -----\r\n\r\nexport const EmptyStatement = 'empty'\r\nexport const ValueStatement = 'value'\r\nexport const AssignmentStatement = 'assign'\r\n\r\n// ----- CTL -----\r\n\r\nexport const IfStatement = 'IfStatement'\r\nexport const ThenStatement = 'ThenStatement'\r\nexport const ElseStatement = 'ElseStatement'\r\nexport const ForLoop = 'ForLoop'\r\nexport const WhileLoop = 'WhileLoop'\r\nexport const RepeatLoop = 'RepeatLoop'\r\nexport const EndStatement = 'EndStatement'\r\nexport const PauseStatement = 'PauseStatement'\r\nexport const LabelStatement = 'LabelStatement'\r\nexport const GotoStatement = 'GotoStatement'\r\nexport const IncrementSkip = 'IncrementSkip'\r\nexport const DecrementSkip = 'DecrementSkip'\r\nexport const MenuStatement = 'MenuStatement'\r\nexport const ProgramStatement = 'ProgramStatement'\r\nexport const ReturnStatement = 'ReturnStatement'\r\nexport const StopStatement = 'StopStatement'\r\nexport const DelVarStatement = 'DelVarStatement'\r\nexport const GraphStyleStatement = 'GraphStyleStatement'\r\nexport const OpenLibStatement = 'OpenLibStatement'\r\nexport const ExecLibStatement = 'ExecLibStatement'\r\n\r\n// ----- I/O -----\r\n\r\nexport const Input = 'Input'\r\nexport const Prompt = 'Prompt'\r\nexport const Display = 'display'\r\nexport const DispGraph = 'DispGraph'\r\nexport const DispTable = 'DispTable'\r\nexport const Output = 'Output'\r\nexport const ClrHome = 'ClrHome'\r\nexport const ClrTable = 'ClrTable'\r\nexport const GetCalc = 'GetCalc'\r\nexport const Get = 'Get'\r\nexport const Send = 'Send'\r\n","// Generated by PEG.js v0.11.0-master.0b102d2, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \")\";\n  var peg$c1 = \"&theta\";\n  var peg$c2 = \"Str\";\n  var peg$c3 = \"&L\";\n  var peg$c4 = \"&list\";\n  var peg$c5 = \"(\";\n  var peg$c6 = \"&E\";\n  var peg$c7 = \".\";\n  var peg$c8 = \"\\\"\";\n  var peg$c9 = \"Ans\";\n  var peg$c10 = \"getKey\";\n  var peg$c11 = \"{\";\n  var peg$c12 = \"}\";\n  var peg$c13 = \"&-\";\n  var peg$c14 = \"*\";\n  var peg$c15 = \"/\";\n  var peg$c16 = \"+\";\n  var peg$c17 = \"-\";\n  var peg$c18 = \"=\";\n  var peg$c19 = \"!=\";\n  var peg$c20 = \">=\";\n  var peg$c21 = \">\";\n  var peg$c22 = \"<=\";\n  var peg$c23 = \"<\";\n  var peg$c24 = \",\";\n  var peg$c25 = \"->\";\n  var peg$c26 = \"If \";\n  var peg$c27 = \"Then\";\n  var peg$c28 = \"Else\";\n  var peg$c29 = \"For(\";\n  var peg$c30 = \"While \";\n  var peg$c31 = \"Repeat \";\n  var peg$c32 = \"End\";\n  var peg$c33 = \"Pause\";\n  var peg$c34 = \"Lbl \";\n  var peg$c35 = \"Goto \";\n  var peg$c36 = \"IS>(\";\n  var peg$c37 = \"DS<(\";\n  var peg$c38 = \"Menu(\";\n  var peg$c39 = \"prgm\";\n  var peg$c40 = \"Return\";\n  var peg$c41 = \"Stop\";\n  var peg$c42 = \"DelVar \";\n  var peg$c43 = \"GraphStyle(\";\n  var peg$c44 = \"OpenLib(\";\n  var peg$c45 = \"ExecLib(\";\n  var peg$c46 = \"Input \";\n  var peg$c47 = \"Prompt \";\n  var peg$c48 = \"Disp \";\n  var peg$c49 = \"DispGraph\";\n  var peg$c50 = \"DispTable\";\n  var peg$c51 = \"Output(\";\n  var peg$c52 = \"ClrHome\";\n  var peg$c53 = \"ClrTable\";\n  var peg$c54 = \"GetCalc(\";\n  var peg$c55 = \"Get(\";\n  var peg$c56 = \"Send(\";\n\n  var peg$r0 = /^[A-Z]/;\n  var peg$r1 = /^[A-Z0-9]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[1-6]/;\n  var peg$r4 = /^[+\\-]/;\n  var peg$r5 = /^[^\"]/;\n\n  var peg$e0 = peg$anyExpectation();\n  var peg$e1 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e2 = peg$classExpectation([[\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e4 = peg$literalExpectation(\")\", false);\n  var peg$e5 = peg$literalExpectation(\"&theta\", false);\n  var peg$e6 = peg$literalExpectation(\"Str\", false);\n  var peg$e7 = peg$literalExpectation(\"&L\", false);\n  var peg$e8 = peg$classExpectation([[\"1\", \"6\"]], false, false);\n  var peg$e9 = peg$literalExpectation(\"&list\", false);\n  var peg$e10 = peg$literalExpectation(\"(\", false);\n  var peg$e11 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e12 = peg$literalExpectation(\"&E\", false);\n  var peg$e13 = peg$literalExpectation(\".\", false);\n  var peg$e14 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e15 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e16 = peg$literalExpectation(\"Ans\", false);\n  var peg$e17 = peg$literalExpectation(\"getKey\", false);\n  var peg$e18 = peg$literalExpectation(\"{\", false);\n  var peg$e19 = peg$literalExpectation(\"}\", false);\n  var peg$e20 = peg$literalExpectation(\"&-\", false);\n  var peg$e21 = peg$literalExpectation(\"*\", false);\n  var peg$e22 = peg$literalExpectation(\"/\", false);\n  var peg$e23 = peg$literalExpectation(\"+\", false);\n  var peg$e24 = peg$literalExpectation(\"-\", false);\n  var peg$e25 = peg$literalExpectation(\"=\", false);\n  var peg$e26 = peg$literalExpectation(\"!=\", false);\n  var peg$e27 = peg$literalExpectation(\">=\", false);\n  var peg$e28 = peg$literalExpectation(\">\", false);\n  var peg$e29 = peg$literalExpectation(\"<=\", false);\n  var peg$e30 = peg$literalExpectation(\"<\", false);\n  var peg$e31 = peg$literalExpectation(\",\", false);\n  var peg$e32 = peg$literalExpectation(\"->\", false);\n  var peg$e33 = peg$literalExpectation(\"If \", false);\n  var peg$e34 = peg$literalExpectation(\"Then\", false);\n  var peg$e35 = peg$literalExpectation(\"Else\", false);\n  var peg$e36 = peg$literalExpectation(\"For(\", false);\n  var peg$e37 = peg$literalExpectation(\"While \", false);\n  var peg$e38 = peg$literalExpectation(\"Repeat \", false);\n  var peg$e39 = peg$literalExpectation(\"End\", false);\n  var peg$e40 = peg$literalExpectation(\"Pause\", false);\n  var peg$e41 = peg$literalExpectation(\"Lbl \", false);\n  var peg$e42 = peg$literalExpectation(\"Goto \", false);\n  var peg$e43 = peg$literalExpectation(\"IS>(\", false);\n  var peg$e44 = peg$literalExpectation(\"DS<(\", false);\n  var peg$e45 = peg$literalExpectation(\"Menu(\", false);\n  var peg$e46 = peg$literalExpectation(\"prgm\", false);\n  var peg$e47 = peg$literalExpectation(\"Return\", false);\n  var peg$e48 = peg$literalExpectation(\"Stop\", false);\n  var peg$e49 = peg$literalExpectation(\"DelVar \", false);\n  var peg$e50 = peg$literalExpectation(\"GraphStyle(\", false);\n  var peg$e51 = peg$literalExpectation(\"OpenLib(\", false);\n  var peg$e52 = peg$literalExpectation(\"ExecLib(\", false);\n  var peg$e53 = peg$literalExpectation(\"Input \", false);\n  var peg$e54 = peg$literalExpectation(\"Prompt \", false);\n  var peg$e55 = peg$literalExpectation(\"Disp \", false);\n  var peg$e56 = peg$literalExpectation(\"DispGraph\", false);\n  var peg$e57 = peg$literalExpectation(\"DispTable\", false);\n  var peg$e58 = peg$literalExpectation(\"Output(\", false);\n  var peg$e59 = peg$literalExpectation(\"ClrHome\", false);\n  var peg$e60 = peg$literalExpectation(\"ClrTable\", false);\n  var peg$e61 = peg$literalExpectation(\"GetCalc(\", false);\n  var peg$e62 = peg$literalExpectation(\"Get(\", false);\n  var peg$e63 = peg$literalExpectation(\"Send(\", false);\n\n  var peg$f0 = function() { return true };\n  var peg$f1 = function() { return text(); };\n  var peg$f2 = function() { return 'THETA' };\n  var peg$f3 = function(number) { return 'List' + number; };\n  var peg$f4 = function() { return 'List' + text().substring(5); };\n  var peg$f5 = function(name) { return { type: types.VARIABLE, name } };\n  var peg$f6 = function(name) { return { type: types.STRINGVARIABLE, name } };\n  var peg$f7 = function(name) { return { type: types.LISTVARIABLE, name, custom: false } };\n  var peg$f8 = function(name) { return { type: types.LISTVARIABLE, name, custom: true } };\n  var peg$f9 = function(list, index) { return { type: types.LISTINDEX, list, index } };\n  var peg$f10 = function(integer, fraction, exponent) { \r\n      return { type: types.NUMBER, integer, fraction, exponent }\r\n    };\n  var peg$f11 = function(fraction, exponent) { \r\n      return { type: types.NUMBER, fraction, exponent }\r\n    };\n  var peg$f12 = function(integer, exponent) { \r\n      return { type: types.NUMBER, integer, exponent }\r\n    };\n  var peg$f13 = function(chars) { return { type: types.STRING, chars } };\n  var peg$f14 = function() { return { type: types.ANS } };\n  var peg$f15 = function() { return { type: types.GetKey } };\n  var peg$f16 = function(head, tail) { return util.buildList(head, tail); };\n  var peg$f17 = function(operator, argument) { return { type: types.UNARY, operator, argument } };\n  var peg$f18 = function(head, tail, end) { return util.buildImplicitBinaryExpression(head, tail, end); };\n  var peg$f19 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f20 = function() { return { type: types.EmptyStatement } };\n  var peg$f21 = function(value) { return { type: types.ValueStatement, value }};\n  var peg$f22 = function(value, assignable) { return { type: types.AssignmentStatement, value, assignable }};\n  var peg$f23 = function(value, extra) { return { type: types.IfStatement, value, extra }};\n  var peg$f24 = function(extra) { return { type: types.ThenStatement, extra }};\n  var peg$f25 = function(extra) { return { type: types.ElseStatement, extra }};\n  var peg$f26 = function(variable, start, end, step, args, extra) { return { type: types.ForLoop, variable, start, end, step, args, extra }};\n  var peg$f27 = function(value, extra) { return { type: types.WhileLoop, value, extra }};\n  var peg$f28 = function(value, extra) { return { type: types.RepeatLoop, value, extra }};\n  var peg$f29 = function(extra) { return { type: types.EndStatement, extra }};\n  var peg$f30 = function() { return { type: types.PauseStatement }};\n  var peg$f31 = function(location) { return { type: types.LabelStatement, location }};\n  var peg$f32 = function(location) { return { type: types.GotoStatement, location }};\n  var peg$f33 = function(variable, end) { return { type: types.IncrementSkip, variable, end }};\n  var peg$f34 = function(variable, end) { return { type: types.DecrementSkip, variable, end }};\n  var peg$f35 = function(title, options) { return util.buildMenuStatement(title, options); };\n  var peg$f36 = function(name) { return { type: types.ProgramStatement, name }};\n  var peg$f37 = function() { return { type: types.ReturnStatement }};\n  var peg$f38 = function() { return { type: types.StopStatement }};\n  var peg$f39 = function(variable) { return { type: types.DelVarStatement, variable }};\n  var peg$f40 = function(equation, style) { return { type: types.GraphStyleStatement, equation, style }};\n  var peg$f41 = function(name) { return { type: types.OpenLibStatement, name }};\n  var peg$f42 = function(name) { return { type: types.ExecLibStatement, name }};\n  var peg$f43 = function(text, variable) { return { type: types.Input, text, variable } };\n  var peg$f44 = function(variable) { return { type: types.Prompt, variable } };\n  var peg$f45 = function(value) { return { type: types.Display, value } };\n  var peg$f46 = function() { return { type: types.DispGraph } };\n  var peg$f47 = function() { return { type: types.DispTable } };\n  var peg$f48 = function(row, column, value) { return { type: types.Output, row, column, value } };\n  var peg$f49 = function() { return { type: types.ClrHome } };\n  var peg$f50 = function() { return { type: types.ClrTable } };\n  var peg$f51 = function(variable, portflag) { return { type: types.GetCalc, variable, portflag } };\n  var peg$f52 = function(variable) { return { type: types.Get, variable } };\n  var peg$f53 = function(variable) { return { type: types.Send, variable } };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parseStart() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStatement();\n\n    return s0;\n  }\n\n  function peg$parseSourceCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e0);\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlpha() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e1);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlphaNum() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e2);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e3);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraCharacters() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseSourceCharacter();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseSourceCharacter();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOptionalEndParen() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e4);\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLocation() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlphaNum();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgramName() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlpha();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseAlphaNum();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseAlphaNum();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseAlphaNum();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseAlphaNum();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseAlphaNum();\n      if (s7 === peg$FAILED) {\n        s7 = null;\n      }\n      s8 = peg$parseAlphaNum();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariableIdentifier() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAlpha();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e5);\n      if (input.substr(peg$currPos, 6) === peg$c1) {\n        s1 = peg$c1;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f2();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (input.substr(peg$currPos, 3) === peg$c2) {\n      s1 = peg$c2;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDigit();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f1();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseListVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e7);\n    if (input.substr(peg$currPos, 2) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e8);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f3(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCustomListVariableIdentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e9);\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlpha();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAlphaNum();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseAlphaNum();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        s5 = peg$parseAlphaNum();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$parseAlphaNum();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f4();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumericVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f5(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStringVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseStringVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f6(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseListVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f7(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseCustomListVariableIdentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f8(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStringVariable();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericVariable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListVariable();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListIndex() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariable();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c5;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseTestExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOptionalEndParen();\n          peg$savedPos = s0;\n          s0 = peg$f9(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAssignable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseListIndex();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseVariable();\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseDigit();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDigit();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSignedInteger() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e11);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parseInteger();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentIndicator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e12);\n    if (input.substr(peg$currPos, 2) === peg$c6) {\n      s0 = peg$c6;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentPart() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponentIndicator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseSignedInteger();\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericLiteral() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseExponentPart();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f10(s1, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseInteger();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExponentPart();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f11(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseInteger();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseExponentPart();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f12(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e14);\n    if (peg$r5.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterString() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCharacter();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCharacter();\n    }\n    s0 = input.substring(s0, peg$currPos);\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e15);\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCharacterString();\n      rule$expects(peg$e15);\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnswer() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e16);\n    if (input.substr(peg$currPos, 3) === peg$c9) {\n      s1 = peg$c9;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f14();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetKey() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e17);\n    if (input.substr(peg$currPos, 6) === peg$c10) {\n      s1 = peg$c10;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f15();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseToken() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAnswer();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGetKey();\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenLiteral() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseStringLiteral();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListExpression() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e18);\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseArgumentExpression();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseArgumentExpression();\n        }\n        rule$expects(peg$e19);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s4 = peg$c12;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f16(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenExpression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTestExpression();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e4);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s0 = s2;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e20);\n    if (input.substr(peg$currPos, 2) === peg$c13) {\n      s0 = peg$c13;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTokenUnaryExpression();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f17(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenUnaryExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseUnaryOperator();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseUnaryExpression();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f17(s1, s2);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicitMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTokenUnaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseUnaryExpression();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTokenUnaryExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTokenUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      s3 = peg$parseUnaryExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f18(s1, s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseTokenUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseTokenUnaryExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseUnaryExpression();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        s3 = peg$parseTokenUnaryExpression();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f18(s1, s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e21);\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e22);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c15;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseImplicitMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseMultiplicativeOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseImplicitMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseMultiplicativeOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseImplicitMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e23);\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c16;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e24);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c17;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseAdditiveOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseAdditiveOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e25);\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e26);\n      if (input.substr(peg$currPos, 2) === peg$c19) {\n        s0 = peg$c19;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.substr(peg$currPos, 2) === peg$c20) {\n          s0 = peg$c20;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          rule$expects(peg$e28);\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s0 = peg$c21;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            rule$expects(peg$e29);\n            if (input.substr(peg$currPos, 2) === peg$c22) {\n              s0 = peg$c22;\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              rule$expects(peg$e30);\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s0 = peg$c23;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditiveExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseTestOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAdditiveExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseTestOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAdditiveExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e31);\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c24;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e31);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c24;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraArguments() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseArgumentExpression();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseArgumentExpression();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseEmptyStatement() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$begin();\n    s2 = peg$parseSourceCharacter();\n    peg$end(true);\n    if (s2 === peg$FAILED) {\n      s1 = undefined;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f20();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseValueStatement() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f21(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAssignment() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e32);\n      if (input.substr(peg$currPos, 2) === peg$c25) {\n        s2 = peg$c25;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAssignable();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f22(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfStatement() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e33);\n    if (input.substr(peg$currPos, 3) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f23(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThen() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e34);\n    if (input.substr(peg$currPos, 4) === peg$c27) {\n      s1 = peg$c27;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f24(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e35);\n    if (input.substr(peg$currPos, 4) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f25(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e36);\n    if (input.substr(peg$currPos, 4) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseArgumentExpression();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseExtraArguments();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseOptionalEndParen();\n      s8 = peg$parseExtraCharacters();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f26(s2, s3, s4, s5, s6, s8);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e37);\n    if (input.substr(peg$currPos, 6) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f27(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRepeat() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e38);\n    if (input.substr(peg$currPos, 7) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f28(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnd() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e39);\n    if (input.substr(peg$currPos, 3) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f29(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePause() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e40);\n    if (input.substr(peg$currPos, 5) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f30();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLabel() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e41);\n    if (input.substr(peg$currPos, 4) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f31(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGoto() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e42);\n    if (input.substr(peg$currPos, 5) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f32(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIncrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e43);\n    if (input.substr(peg$currPos, 4) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f33(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e44);\n    if (input.substr(peg$currPos, 4) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f34(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMenu() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e45);\n    if (input.substr(peg$currPos, 5) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$currPos;\n      rule$expects(peg$e31);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s5 = peg$c24;\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$parseStringLiteral();\n        if (s6 !== peg$FAILED) {\n          rule$expects(peg$e31);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c24;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseLocation();\n            if (s8 !== peg$FAILED) {\n              s5 = [s5, s6, s7, s8];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        rule$expects(peg$e31);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c24;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseStringLiteral();\n          if (s6 !== peg$FAILED) {\n            rule$expects(peg$e31);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c24;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseLocation();\n              if (s8 !== peg$FAILED) {\n                s5 = [s5, s6, s7, s8];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f35(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgram() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e46);\n    if (input.substr(peg$currPos, 4) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f36(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e47);\n    if (input.substr(peg$currPos, 6) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f37();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStop() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e48);\n    if (input.substr(peg$currPos, 4) === peg$c41) {\n      s1 = peg$c41;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f38();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDelVar() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e49);\n    if (input.substr(peg$currPos, 7) === peg$c42) {\n      s1 = peg$c42;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f39(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGraphStyle() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e50);\n    if (input.substr(peg$currPos, 11) === peg$c43) {\n      s1 = peg$c43;\n      peg$currPos += 11;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f40(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOpenLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e51);\n    if (input.substr(peg$currPos, 8) === peg$c44) {\n      s1 = peg$c44;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f41(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExecLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e52);\n    if (input.substr(peg$currPos, 8) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f42(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCtlStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseIfStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseThen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseElse();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseWhile();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseEnd();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsePause();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseLabel();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGoto();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseIncrementSkip();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseDecrementSkip();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseMenu();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseProgram();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseReturn();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseStop();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseDelVar();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseGraphStyle();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseOpenLib();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseExecLib();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInput() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e53);\n    if (input.substr(peg$currPos, 6) === peg$c46) {\n      s1 = peg$c46;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsePrefixArgumentExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseVariable();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f43(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrompt() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e54);\n    if (input.substr(peg$currPos, 7) === peg$c47) {\n      s1 = peg$c47;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f44(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisplay() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e55);\n    if (input.substr(peg$currPos, 5) === peg$c48) {\n      s1 = peg$c48;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f45(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDispGraph() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e56);\n    if (input.substr(peg$currPos, 9) === peg$c49) {\n      s1 = peg$c49;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f46();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDispTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e57);\n    if (input.substr(peg$currPos, 9) === peg$c50) {\n      s1 = peg$c50;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f47();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOutput() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e58);\n    if (input.substr(peg$currPos, 7) === peg$c51) {\n      s1 = peg$c51;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f48(s2, s3, s4);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClrHome() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e59);\n    if (input.substr(peg$currPos, 7) === peg$c52) {\n      s1 = peg$c52;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f49();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseClrTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e60);\n    if (input.substr(peg$currPos, 8) === peg$c53) {\n      s1 = peg$c53;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f50();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetCalc() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e61);\n    if (input.substr(peg$currPos, 8) === peg$c54) {\n      s1 = peg$c54;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f51(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGet() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e62);\n    if (input.substr(peg$currPos, 4) === peg$c55) {\n      s1 = peg$c55;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f52(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSend() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e63);\n    if (input.substr(peg$currPos, 5) === peg$c56) {\n      s1 = peg$c56;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f53(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIoStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseInput();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrompt();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDisplay();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseDispGraph();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseDispTable();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseOutput();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseClrHome();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseClrTable();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseGetCalc();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGet();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseSend();\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseEmptyStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignment();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseCtlStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseIoStatement();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseValueStatement();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n\r\n    const types = require ('../common/types');\r\n    const util = require ('./pegutil');\r\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","// pegutil\r\n// =======\r\n\r\nimport * as types from '../common/types'\r\n\r\nexport function buildBinaryExpression (head, tail) {\r\n  return tail.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: element[0],\r\n      left: result,\r\n      right: element[1]\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildImplicitBinaryExpression (head, tail, end) {\r\n  const list = tail.flat()\r\n  if (end !== null) {\r\n    list.push(end)\r\n  }\r\n  return list.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: '*',\r\n      left: result,\r\n      right: element\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildMenuStatement (title, options) {\r\n  const choices = options.map(function (element) {\r\n    return {\r\n      option: element[1],\r\n      location: element[3]\r\n    }\r\n  })\r\n  return {\r\n    type: types.MenuStatement,\r\n    title,\r\n    choices\r\n  }\r\n}\r\n\r\nexport function buildList (head, tail) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: [head].concat(tail)\r\n  }\r\n}\r\n","// core\r\n// ====\r\n\r\nimport * as types from './types'\r\n\r\nfunction error (type, code, hideSource = false) {\r\n  return {\r\n    type: type,\r\n    code: code,\r\n    hideSource: hideSource\r\n  }\r\n}\r\n\r\nfunction tiError (code, hideSource = false) {\r\n  return error(types.ti, code, hideSource)\r\n}\r\n\r\nexport const DataTypeError = tiError('DATA TYPE')\r\nexport const SyntaxError = tiError('SYNTAX')\r\nexport const UndefinedError = tiError('UNDEFINED')\r\nexport const LabelError = tiError('LABEL')\r\nexport const ArgumentError = tiError('ARGUMENT')\r\nexport const DimMismatchError = tiError('DIM MISMATCH')\r\nexport const DivideByZeroError = tiError('DIVIDE BY 0')\r\nexport const InvalidDimError = tiError('INVALID DIM')\r\nexport const DomainError = tiError('DOMAIN')\r\n\r\nexport function libError (code, hideSource = false) {\r\n  return error(types.lib, code, hideSource)\r\n}\r\n\r\nexport const UnimplementedError = libError('unimplemented')\r\n\r\nexport function newMem () {\r\n  return {\r\n    vars: {},\r\n    ans: newFloat()\r\n  }\r\n}\r\n\r\nexport function newFloat (value = 0) {\r\n  return { type: types.NUMBER, float: value }\r\n}\r\n\r\nexport const ONE = newFloat(1)\r\n\r\nexport const MINUSONE = newFloat(-1)\r\n","// parser\r\n// ======\r\n\r\nimport * as types from '../common/types'\r\nimport pegJsParser from './tibasic.pegjs'\r\n\r\nexport function parse (source, options = {}) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceMap = options.sourceMap || 'inline'\r\n\r\n  // TODO:\r\n  // * Allow multiple statements per line with ':'\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  const parsedLines = sourceLines.map(s => {\r\n    let parsedLine\r\n    try {\r\n      parsedLine = pegJsParser.parse(s)\r\n    } catch (error) {\r\n      if (error.name === 'SyntaxError') {\r\n        parsedLine = { type: 'SyntaxError' }\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    if (sourceMap === 'inline') {\r\n      parsedLine.source = s\r\n    }\r\n    return parsedLine\r\n  })\r\n\r\n  return parsedLines\r\n}\r\n\r\nexport function parseExpression (source) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  if (sourceLines.Length > 1) {\r\n    throw new Error('Too many lines for an expression')\r\n  }\r\n  const sourceLine = sourceLines[0]\r\n  let parsedLine\r\n  try {\r\n    parsedLine = pegJsParser.parse(sourceLine)\r\n  } catch (error) {\r\n    if (error.name !== 'SyntaxError') {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  return parsedLine !== undefined && parsedLine.type === types.ValueStatement ? parsedLine.value : { type: 'SyntaxError' }\r\n}\r\n","// operation\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\n\r\nexport function isTruthy (value) {\r\n  if (value.type === types.NUMBER) {\r\n    return value.float !== 0\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nexport function assignVariable (mem, variable, value) {\r\n  if (variable.type === types.STRINGVARIABLE) {\r\n    if (value.type !== types.STRING) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.VARIABLE) {\r\n    if (value.type !== types.NUMBER) {\r\n      return\r\n    }\r\n  } else if (variable.type === types.LISTVARIABLE) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.LISTINDEX) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else {\r\n    throw core.libError('unexpected variable type')\r\n  }\r\n  mem.vars[variable.name] = value\r\n}\r\n\r\nexport function deleteVariable (mem, variable) {\r\n  delete mem.vars[variable.name]\r\n}\r\n\r\nexport function hasVariable (mem, variable) {\r\n  return variable.name in mem.vars\r\n}\r\n\r\nexport function assignAns (mem, value) {\r\n  mem.ans = value\r\n}\r\n\r\nexport function binaryOperation (left, operator, right) {\r\n  return {\r\n    type: types.BINARY,\r\n    operator,\r\n    left,\r\n    right\r\n  }\r\n}\r\n\r\nexport function resolveNumber (value) {\r\n  let str = ''\r\n  if (value.integer !== undefined && value.integer !== null) {\r\n    str += value.integer\r\n  }\r\n  if (value.fraction !== undefined && value.fraction !== null) {\r\n    str += '.' + value.fraction\r\n  }\r\n  if (value.exponent !== undefined && value.exponent !== null) {\r\n    str += 'e' + value.exponent\r\n  }\r\n  return parseFloat(str)\r\n}\r\n\r\nexport function variableToString (variable) {\r\n  let str = variable.name\r\n  switch (variable.type) {\r\n    case types.VARIABLE:\r\n    case types.STRINGVARIABLE:\r\n      break\r\n    case types.LISTVARIABLE:\r\n      str = str.substring(4)\r\n      if (!variable.custom) {\r\n        str = `&L${str}`\r\n      }\r\n      break\r\n    default:\r\n      throw core.libError('unexpected variable tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function valueToString (value, strict = false) {\r\n  if (strict && value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  let str = ''\r\n  switch (value.type) {\r\n    case types.NUMBER:\r\n      str = value.float.toString()\r\n      if (str.startsWith('0.')) {\r\n        str = str.substring(1)\r\n      }\r\n      break\r\n    case types.STRING:\r\n      str = value.chars\r\n      break\r\n    case types.LIST:\r\n      str = '{' + value.elements.map(e => valueToString(e)).join(' ') + '}'\r\n      break\r\n    default:\r\n      throw core.libError('unexpected value tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function parseDigit (str) {\r\n  if (str === undefined || str === null || str === '' || str.length > 1) {\r\n    return\r\n  }\r\n  const digit = str.charCodeAt(0) - '0'.charCodeAt(0)\r\n  if (digit < 0 || digit > 9) {\r\n    return\r\n  }\r\n  return digit\r\n}\r\n","// expression\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as operation from './operation'\r\n\r\nexport function evaluate (value, mem) {\r\n  const behavior = expressionOf[value.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected value')\r\n  }\r\n  return behavior(value, mem)\r\n}\r\n\r\nconst expressionOf = {}\r\n\r\n// ----- Expressions -----\r\n\r\nexpressionOf[types.SyntaxError] = (value, mem) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- Values -----\r\n\r\nexpressionOf[types.NUMBER] = (value, mem) => {\r\n  if (value.float !== undefined) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: operation.resolveNumber(value)\r\n  }\r\n}\r\n\r\nexpressionOf[types.STRING] = (value, mem) => {\r\n  return value\r\n}\r\n\r\nexpressionOf[types.LIST] = (value, mem) => {\r\n  if (value.resolved === true) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: value.elements.map(function (element) {\r\n      const result = evaluate(element, mem)\r\n      if (result.type !== types.NUMBER) {\r\n        // TODO: a list of lists should be a syntax error\r\n        // However, a list of list variables should still be a data type error\r\n        // Distinguishing them here is hard - should be done in grammar?\r\n        throw core.DataTypeError\r\n      }\r\n      return result\r\n    }),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Variables -----\r\n\r\nexpressionOf[types.VARIABLE] = (value, mem) => {\r\n  let result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    result = mem.vars[value.name] = core.newFloat()\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.STRINGVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTINDEX] = (value, mem) => {\r\n  const list = evaluate(value.list, mem)\r\n  const index = evaluate(value.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.InvalidDimError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: list.elements[index.float - 1].float\r\n  }\r\n}\r\n\r\n// ----- Tokens -----\r\n\r\nexpressionOf[types.ANS] = (value, mem) => {\r\n  return mem.ans\r\n}\r\n\r\nexpressionOf[types.GetKey] = (value, mem) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Operators -----\r\n\r\nexpressionOf[types.UNARY] = (value, mem) => {\r\n  const argument = evaluate(value.argument, mem)\r\n  const behavior = unaryOf[argument.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected unary argument')\r\n  }\r\n  return behavior(value.operator, argument)\r\n}\r\n\r\nexpressionOf[types.BINARY] = (value, mem) => {\r\n  const left = evaluate(value.left, mem)\r\n  const right = evaluate(value.right, mem)\r\n  const behavior = binaryOf[left.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected binary left')\r\n  }\r\n  return behavior(value.operator, left, right)\r\n}\r\n\r\n// ----- Unary -----\r\n\r\nconst unaryOf = {}\r\n\r\nunaryOf[types.NUMBER] = (operator, argument) => {\r\n  return { type: types.NUMBER, float: applyUnaryOperation(operator, argument.float) }\r\n}\r\n\r\nunaryOf[types.STRING] = (operator, argument) => {\r\n  throw core.DataTypeError\r\n}\r\n\r\nunaryOf[types.LIST] = (operator, argument) => {\r\n  return {\r\n    type: types.LIST,\r\n    elements: argument.elements.map(e => ({ type: types.NUMBER, float: applyUnaryOperation(operator, e.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Binary -----\r\n\r\nconst binaryOf = {}\r\n\r\nbinaryOf[types.NUMBER] = (operator, left, right) => {\r\n  if (right.type !== types.NUMBER) {\r\n    if (right.type === types.LIST) {\r\n      return applyBinaryOperationListAndNumber(operator, right, left)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  return { type: types.NUMBER, float: applyBinaryOperation(operator, left.float, right.float) }\r\n}\r\n\r\nbinaryOf[types.STRING] = (operator, left, right) => {\r\n  if (right.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (['+'].includes(operator)) {\r\n    return { type: types.STRING, chars: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  if (['=', '!='].includes(operator)) {\r\n    return { type: types.NUMBER, float: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nbinaryOf[types.LIST] = (operator, left, right) => {\r\n  if (right.type !== types.LIST) {\r\n    if (right.type === types.NUMBER) {\r\n      return applyBinaryOperationListAndNumber(operator, left, right)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  if (left.elements.length !== right.elements.length) {\r\n    throw core.DimMismatchError\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: left.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, right.elements[i].float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Helper -----\r\n\r\nfunction applyBinaryOperationListAndNumber (operator, list, number) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: list.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, number.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\nfunction applyUnaryOperation (operator, x) {\r\n  switch (operator) {\r\n    case '&-': return x * -1\r\n    default: throw core.libError('unexpected unary operator')\r\n  }\r\n}\r\n\r\nfunction applyBinaryOperation (operator, x, y) {\r\n  if (operator === '/' && y === 0) {\r\n    throw core.DivideByZeroError\r\n  }\r\n  switch (operator) {\r\n    case '+': return x + y\r\n    case '-': return x - y\r\n    case '*': return x * y\r\n    case '/': return x / y\r\n    case '=': return x === y ? 1 : 0\r\n    case '!=': return x !== y ? 1 : 0\r\n    case '>=': return x >= y ? 1 : 0\r\n    case '>': return x > y ? 1 : 0\r\n    case '<=': return x <= y ? 1 : 0\r\n    case '<': return x < y ? 1 : 0\r\n    default: throw core.libError('unexpected binary operator')\r\n  }\r\n}\r\n","// assignment\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as expression from './expression'\r\n\r\nexport function evaluate (assignable, value, mem) {\r\n  const behavior = assignmentOf[assignable.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected assignable type')\r\n  }\r\n  return behavior(assignable, value, mem)\r\n}\r\n\r\nconst assignmentOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nassignmentOf[types.VARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.NUMBER) {\r\n    return\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.STRINGVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.LIST) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTINDEX] = (assignable, value, mem) => {\r\n  const list = expression.evaluate(assignable.list, mem)\r\n  const index = expression.evaluate(assignable.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  mem.vars[assignable.list.name].elements[index.float - 1] = value\r\n}\r\n","// iolib\r\n// =====\r\n\r\nimport * as types from '../common/types'\r\n\r\nconst enterkey = 13\r\n\r\nexport function stdout (value, options = {}, newline = true) {\r\n  if (options.elem === undefined) {\r\n    console.log(value)\r\n    return\r\n  }\r\n  setTimeout(() => {\r\n    let result = options.elem.val() + value\r\n    if (newline) {\r\n      result += '\\n'\r\n    }\r\n    options.elem.val(result)\r\n  }, 0)\r\n}\r\n\r\nexport function stderr (ex, options = {}) {\r\n  if ((ex.type === types.ti && !options.includeErrors) ||\r\n      (ex.type === types.lib && !options.includeLibErrors)) {\r\n    console.log(ex)\r\n    return\r\n  }\r\n  let value = ''\r\n  if (ex.type === types.ti) {\r\n    value += 'ERR:'\r\n  } else if (ex.type === types.lib) {\r\n    value += 'Error: '\r\n  } else {\r\n    value += 'Unexpected: '\r\n  }\r\n  value += ex.code\r\n  if (options.includeLineNumbers && ex.source !== undefined && ex.source.index !== undefined) {\r\n    value += ` on line ${ex.source.index}`\r\n  }\r\n  if (options.includeSource && ex.source !== undefined && ex.source.line !== undefined) {\r\n    value += ` :${ex.source.line}`\r\n  }\r\n  stdout(value, options)\r\n}\r\n\r\nexport function onStdin (callback, options = {}) {\r\n  if (options.stdin !== undefined && options.stdin !== '' && options.stdinQueue === undefined) {\r\n    options.stdinQueue = options.stdin.split('\\n').reverse()\r\n  }\r\n  if (options.stdinQueue !== undefined) {\r\n    setTimeout(() => {\r\n      const result = options.stdinQueue.pop()\r\n      if (callback(result) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 0)\r\n    return\r\n  }\r\n  if (options.input === undefined) {\r\n    setTimeout(() => {\r\n      if (callback(prompt('Input?')) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 100)\r\n    return\r\n  }\r\n  setTimeout(() => options.input.val(''), 0)\r\n  options.input.on('keypress', e => {\r\n    if (e.keyCode === enterkey) {\r\n      const result = options.input.val()\r\n      setTimeout(() => options.input.val(''), 0)\r\n      if (callback(result) !== true) {\r\n        options.input.off('keypress')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function cleanup (options = {}) {\r\n  if (options.input !== undefined) {\r\n    options.input.off('keypress')\r\n  }\r\n}\r\n","// statement\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as parser from '../parse/parser'\r\nimport * as operation from './operation'\r\nimport * as expression from './expression'\r\nimport * as assignment from './assignment'\r\nimport * as iolib from './iolib'\r\n\r\nexport function evaluate (line, state) {\r\n  const behavior = statementOf[line.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected')\r\n  }\r\n  return behavior(line, state)\r\n}\r\n\r\nconst statementOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nstatementOf[types.EmptyStatement] = (line, state) => {\r\n  // do nothing\r\n}\r\n\r\nstatementOf[types.AssignmentStatement] = (line, state) => {\r\n  const value = expression.evaluate(line.value, state.mem)\r\n  assignment.evaluate(line.assignable, value, state.mem)\r\n  operation.assignAns(state.mem, value)\r\n}\r\n\r\nstatementOf[types.ValueStatement] = (line, state) => {\r\n  operation.assignAns(state.mem, expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.SyntaxError] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- CTL -----\r\n\r\nstatementOf[types.IfStatement] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.ifResult = operation.isTruthy(expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.ThenStatement] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\nstatementOf[types.ElseStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (state.lines[state.blockStack.pop()].type === types.ThenStatement) {\r\n    state.blockStack.push(state.i)\r\n    state.falsyStackHeight = state.blockStack.length\r\n  } else {\r\n    throw core.SyntaxError\r\n  }\r\n}\r\n\r\nstatementOf[types.ForLoop] = (line, state) => {\r\n  if (line.variable === null || line.start === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.assignVariable(state.mem, line.variable, expression.evaluate(line.start, state.mem))\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.WhileLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(line.value, state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.RepeatLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n}\r\n\r\nstatementOf[types.EndStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  const source = state.blockStack.pop()\r\n  const sourceLine = state.lines[source]\r\n  if (sourceLine.type === types.ForLoop ||\r\n              sourceLine.type === types.WhileLoop ||\r\n              sourceLine.type === types.RepeatLoop) {\r\n    if (sourceLine.type === types.ForLoop) {\r\n      increment(state.mem, sourceLine.variable, sourceLine.step !== null ? sourceLine.step : core.ONE)\r\n      if (operation.isTruthy(expression.evaluate(operation.binaryOperation(sourceLine.variable, '<=', sourceLine.end), state.mem))) {\r\n        state.blockStack.push(source)\r\n        state.i = source\r\n      }\r\n    } else if (operation.isTruthy(expression.evaluate(sourceLine.value, state.mem))) {\r\n      state.blockStack.push(source)\r\n      state.i = source\r\n    }\r\n  } else if (sourceLine.type === types.ThenStatement ||\r\n                  sourceLine.type === types.ElseStatement) {\r\n    // empty\r\n  } else {\r\n    throw core.libError(`impossibleEndFrom'${sourceLine.type}`)\r\n  }\r\n}\r\n\r\nstatementOf[types.PauseStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.LabelStatement] = (line, state) => {\r\n}\r\n\r\nstatementOf[types.GotoStatement] = (line, state) => {\r\n  state.searchLabel = line.location\r\n  state.i = -1\r\n}\r\n\r\nstatementOf[types.IncrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.ONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.DecrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.MINUSONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '>=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.MenuStatement] = (line, state) => {\r\n  if (line.title === null || line.choices.length === 0 || line.choices.length > 7) {\r\n    throw core.ArgumentError\r\n  }\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.title, state.mem), true), state.io)\r\n  line.choices.forEach((choice, idx) => {\r\n    iolib.stdout(`${idx + 1}:${operation.valueToString(choice.option)}`, state.io)\r\n  })\r\n  iolib.onStdin(input => {\r\n    const digit = operation.parseDigit(input)\r\n    if (digit === undefined || digit === 0 || digit > line.choices.length) {\r\n      return true\r\n    }\r\n    state.searchLabel = line.choices[digit - 1].location\r\n    state.i = 0\r\n    state.resume()\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n\r\nstatementOf[types.ProgramStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ReturnStatement] = (line, state) => {\r\n  // TODO interaction with subprograms\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.StopStatement] = (line, state) => {\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.DelVarStatement] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.deleteVariable(state.mem, line.variable)\r\n}\r\n\r\nstatementOf[types.GraphStyleStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.OpenLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ExecLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- I/O -----\r\n\r\nstatementOf[types.Display] = (line, state) => {\r\n  if (line.value !== null) {\r\n    iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n  }\r\n}\r\n\r\nstatementOf[types.Input] = (line, state) => {\r\n  if (line.variable === null) {\r\n    if (line.text !== null) {\r\n      throw core.ArgumentError\r\n    }\r\n    throw core.UnimplementedError\r\n  }\r\n  let text = '?'\r\n  if (line.text !== null) {\r\n    text = operation.valueToString(expression.evaluate(line.text, state.mem), true)\r\n  }\r\n  return getInput(text, line.variable, state, true)\r\n}\r\n\r\nstatementOf[types.Prompt] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const text = operation.variableToString(line.variable)\r\n  return getInput(`${text}=?`, line.variable, state, false)\r\n}\r\n\r\nstatementOf[types.DispGraph] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.DispTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Output] = (line, state) => {\r\n  if (line.row === null || line.column === null || line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const row = expression.evaluate(line.row, state.mem)\r\n  const column = expression.evaluate(line.column, state.mem)\r\n  if (row.type !== types.NUMBER || column.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (row.float < 1 || row.float > state.rows || column.float < 1 || column.float > state.columns) {\r\n    throw core.DomainError\r\n  }\r\n  // TODO: respect rows and columns\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n}\r\n\r\nstatementOf[types.ClrHome] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ClrTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.GetCalc] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Get] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Send] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Helpers -----\r\n\r\nfunction increment (mem, variable, step) {\r\n  if (!operation.hasVariable(mem, variable)) {\r\n    throw core.UndefinedError\r\n  }\r\n  operation.assignVariable(mem, variable, expression.evaluate({\r\n    type: types.BINARY,\r\n    operator: '+',\r\n    left: variable,\r\n    right: step\r\n  }, mem), mem)\r\n}\r\n\r\nfunction getInput (text, variable, state, allowStringLiterals) {\r\n  iolib.stdout(text, state.io, false)\r\n  iolib.onStdin(input => {\r\n    if (input === null || input === undefined || input === '') {\r\n      return true\r\n    }\r\n    state.resume(() => {\r\n      iolib.stdout(input, state.io)\r\n\r\n      let value\r\n      if (variable.type === types.STRINGVARIABLE && allowStringLiterals) {\r\n        value = { type: types.STRING, chars: input }\r\n      } else {\r\n        value = expression.evaluate(parser.parseExpression(input), state.mem)\r\n      }\r\n\r\n      // special case where a prompt for a numerical variable is interpreted as a list variable\r\n      if (variable.type === types.VARIABLE && value.type === types.LIST) {\r\n        variable = { type: types.LISTVARIABLE, name: `List${variable.name}`, custom: true }\r\n      }\r\n\r\n      operation.assignVariable(state.mem, variable, value)\r\n    })\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n","// signal\r\n// ======\r\n\r\nexport const YIELD = 'yield'\r\nexport const DONE = 'done'\r\nexport const FAULTED = 'faulted'\r\nexport const SUSPEND = 'suspend'\r\n","// daemon\r\n// ======\r\n\r\nimport * as signal from '../common/signal'\r\n\r\nconst loopMessageName = 'daemon-loop'\r\nconst exceptionName = 'daemon-exception'\r\nconst minimumDelay = 0.001 // 1 microsecond\r\nconst tasks = {}\r\nconst exceptions = []\r\nlet running = false\r\nlet nextTaskId = 0\r\nconst maxExceptions = 1000\r\n\r\nconst eventTarget = document.createTextNode(null)\r\n\r\nfunction fireEvent (name) {\r\n  const event = new Event(name)\r\n  eventTarget.dispatchEvent(event)\r\n}\r\n\r\nfunction startIfNeeded () {\r\n  if (running === false) {\r\n    running = true\r\n    fireEvent('start')\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n}\r\n\r\nfunction createTask (func, delay, runOnce) {\r\n  const taskId = nextTaskId++\r\n\r\n  console.debug(`[Task ${taskId}] Start`)\r\n\r\n  tasks[taskId] = {\r\n    func: func,\r\n    delay: Math.max(delay, minimumDelay),\r\n    lastRun: undefined,\r\n    runOnce: runOnce,\r\n    stopOnException: true,\r\n    suspended: false\r\n  }\r\n\r\n  startIfNeeded()\r\n  return taskId\r\n}\r\n\r\nfunction resumeTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Resume`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    console.debug(tasks)\r\n    throw new Error(`Error resuming: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = false\r\n  startIfNeeded()\r\n};\r\n\r\nfunction suspendTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Suspend`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    throw new Error(`Error suspending: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = true\r\n};\r\n\r\nfunction deleteTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Stop`)\r\n  delete tasks[taskId]\r\n};\r\n\r\nfunction handleMessage (event) {\r\n  if (!(event.source === window && event.data === loopMessageName)) {\r\n    return\r\n  }\r\n\r\n  event.stopPropagation()\r\n\r\n  const time = performance.now()\r\n  const taskIds = Object.keys(tasks)\r\n  let runningTaskCount = 0\r\n  let suspendedTaskCount = 0\r\n\r\n  taskIds.forEach(taskId => {\r\n    const task = tasks[taskId]\r\n\r\n    let runs\r\n    if (task.suspended === true) {\r\n      runs = 0\r\n      suspendedTaskCount += 1\r\n    } else {\r\n      runningTaskCount += 1\r\n\r\n      if (task.lastRun === undefined || task.runOnce) {\r\n        runs = 1\r\n      } else {\r\n        const timeSinceRun = time - task.lastRun\r\n        runs = Math.floor(timeSinceRun / task.delay)\r\n      }\r\n    }\r\n\r\n    if (runs > 0) {\r\n      task.lastRun = time\r\n    }\r\n\r\n    for (let i = 0; i < runs; i++) {\r\n      let result\r\n\r\n      try {\r\n        result = task.func()\r\n      } catch (ex) {\r\n        result = signal.FAULTED\r\n\r\n        if (exceptions.length < maxExceptions) {\r\n          exceptions.push(ex)\r\n          window.postMessage(exceptionName, '*')\r\n        }\r\n      }\r\n\r\n      if (result === signal.DONE ||\r\n                task.runOnce ||\r\n                (task.stopOnException && result === signal.FAULTED)) {\r\n        deleteTask(taskId)\r\n        runningTaskCount -= 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.SUSPEND) {\r\n        suspendTask(taskId)\r\n        runningTaskCount -= 1\r\n        suspendedTaskCount += 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.YIELD) {\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (runningTaskCount === 0) {\r\n    running = false\r\n    if (suspendedTaskCount > 0) {\r\n      fireEvent('suspend')\r\n    } else {\r\n      fireEvent('stop')\r\n    }\r\n  } else {\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n};\r\n\r\nfunction handleException (event) {\r\n  if (!(event.source === window && event.data === exceptionName)) {\r\n    return\r\n  }\r\n\r\n  if (exceptions.length > 0) {\r\n    throw exceptions.pop()\r\n  }\r\n}\r\n\r\nwindow.addEventListener('message', handleMessage, true)\r\nwindow.addEventListener('message', handleException, true)\r\n\r\nexport function setTinyInterval (func, delay) {\r\n  return createTask(func, delay)\r\n}\r\n\r\nexport function clearTinyInterval (tinyIntervalID) {\r\n  deleteTask(tinyIntervalID)\r\n}\r\n\r\nexport function resumeTinyInterval (tinyIntervalID) {\r\n  resumeTask(tinyIntervalID)\r\n}\r\n\r\nexport function setTinyTimeout (func, delay) {\r\n  return createTask(func, delay, true)\r\n}\r\n\r\nexport function clearTinyTimeout (tinyTimeoutID) {\r\n  deleteTask(tinyTimeoutID)\r\n}\r\n\r\nexport const on = eventTarget.addEventListener.bind(eventTarget)\r\nexport const off = eventTarget.removeEventListener.bind(eventTarget)\r\n// export const dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget)\r\n","// runtime\r\n// =======\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as statement from '../evaluate/statement'\r\nimport * as iolib from '../evaluate/iolib'\r\nimport * as daemon from './daemon'\r\n\r\nexport function run (lines, options = {}) {\r\n  let sourceLines = []\r\n  if (options.source !== undefined) {\r\n    if (Array.isArray(options.source)) {\r\n      sourceLines = options.source\r\n    } else {\r\n      sourceLines = options.source.split(/\\r?\\n/)\r\n    }\r\n  }\r\n\r\n  let frequencyMs = 1\r\n  if (options.frequencyMs !== undefined) {\r\n    frequencyMs = options.frequencyMs\r\n  }\r\n\r\n  const state = {\r\n    mem: core.newMem(),\r\n\r\n    resume: undefined,\r\n    resumeCallback: undefined,\r\n\r\n    debug: options.debug === true,\r\n    sourceLines: sourceLines,\r\n\r\n    searchLabel: undefined,\r\n    ifResult: undefined,\r\n    incrementDecrementResult: undefined,\r\n\r\n    maximumLines: 50,\r\n    linesRun: 0,\r\n\r\n    blockStack: [],\r\n    falsyStackHeight: undefined,\r\n    falsyBlockPreviousIf: undefined,\r\n\r\n    i: 0,\r\n    lines: lines,\r\n\r\n    callback: options.callback,\r\n    frequencyMs: frequencyMs,\r\n\r\n    status: 'pending',\r\n\r\n    rows: 8,\r\n    columns: 16,\r\n\r\n    io: {\r\n      elem: options.elem,\r\n      input: options.input,\r\n      stdin: options.stdin,\r\n      includeErrors: options.includeErrors === undefined || options.includeErrors === true,\r\n      includeLibErrors: options.includeLibErrors === undefined || options.includeLibErrors === true,\r\n      includeLineNumbers: options.includeLineNumbers === undefined || options.includeLineNumbers === true,\r\n      includeSource: options.includeSource === undefined || options.includeSource === true\r\n    }\r\n  }\r\n\r\n  const taskId = daemon.setTinyInterval(() => runLoop(state), state.frequencyMs)\r\n  state.resume = (callback) => {\r\n    state.resumeCallback = callback\r\n    daemon.resumeTinyInterval(taskId)\r\n  }\r\n\r\n  return {\r\n    getStatus: () => state.status,\r\n    isActive: () => state.status === 'pending' || state.status === 'running',\r\n    stop: () => {\r\n      iolib.cleanup(state.io)\r\n      daemon.clearTinyInterval(taskId)\r\n    }\r\n  }\r\n}\r\n\r\nfunction runLoop (state) {\r\n  let result\r\n\r\n  try {\r\n    state.status = 'running'\r\n    result = runLine(state)\r\n  } catch (ex) {\r\n    state.status = 'faulted'\r\n\r\n    if (ex.type === undefined) {\r\n      throw ex\r\n    }\r\n\r\n    if (state.i < state.lines.length && ex.hideSource !== true) {\r\n      let source = state.lines[state.i].source\r\n      if (state.sourceLines !== undefined) {\r\n        source = state.sourceLines[state.i]\r\n      }\r\n      ex.source = {\r\n        index: state.i,\r\n        line: source\r\n      }\r\n    }\r\n\r\n    iolib.stderr(ex, state.io)\r\n    result = signal.DONE\r\n  }\r\n\r\n  if (result === signal.DONE) {\r\n    if (state.status !== 'faulted') {\r\n      state.status = 'done'\r\n    }\r\n\r\n    if (state.callback !== undefined) {\r\n      setTimeout(state.callback, 0)\r\n    }\r\n  } else {\r\n    state.i += 1\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction runLine (state) {\r\n  if (state.debug) {\r\n    console.debug({\r\n      Line: state.i,\r\n      searchLabel: state.searchLabel,\r\n      ifResult: state.ifResult,\r\n      blockStack: state.blockStack,\r\n      falsyStackHeight: state.falsyStackHeight,\r\n      falsyBlockPreviousIf: state.falsyBlockPreviousIf,\r\n      source: state.source,\r\n      mem: state.mem\r\n    })\r\n  }\r\n\r\n  if (state.resumeCallback !== undefined) {\r\n    state.resumeCallback()\r\n    state.resumeCallback = undefined\r\n  }\r\n\r\n  if (state.i >= state.lines.length) {\r\n    if (state.searchLabel !== undefined) {\r\n      throw core.LabelError\r\n    }\r\n\r\n    if (state.ifResult !== undefined || state.incrementDecrementResult !== undefined) {\r\n      throw core.SyntaxError\r\n    }\r\n\r\n    if (state.debug) {\r\n      console.debug(state.mem)\r\n    }\r\n\r\n    return signal.DONE\r\n  }\r\n\r\n  state.linesRun++\r\n\r\n  if (state.linesRun >= state.maximumLines) {\r\n    throw core.libError('maxlines')\r\n  }\r\n\r\n  const line = state.lines[state.i]\r\n  const type = line.type\r\n\r\n  // ----- scan for end -----\r\n\r\n  if (state.falsyStackHeight !== undefined) {\r\n    const lastBlockIndex = state.blockStack[state.blockStack.length - 1]\r\n    const lastBlock = state.lines[lastBlockIndex]\r\n\r\n    if (type === types.EndStatement ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.pop()\r\n\r\n      if (state.blockStack.length < state.falsyStackHeight) {\r\n        state.falsyStackHeight = undefined\r\n      }\r\n    }\r\n\r\n    if (type === types.ForLoop ||\r\n      type === types.RepeatLoop ||\r\n      type === types.WhileLoop ||\r\n      (type === types.ThenStatement && state.falsyBlockPreviousIf === true) ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.push(state.i)\r\n    }\r\n\r\n    state.falsyBlockPreviousIf = type === types.IfStatement\r\n    return\r\n  }\r\n\r\n  state.falsyBlockPreviousIf = undefined\r\n\r\n  // ----- search for label -----\r\n\r\n  if (state.searchLabel !== undefined) {\r\n    if (type === types.LabelStatement && line.location === state.searchLabel) {\r\n      state.searchLabel = undefined\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  // ----- check if result -----\r\n\r\n  if (state.ifResult !== undefined) {\r\n    const ifResultFalse = state.ifResult !== true\r\n    state.ifResult = undefined\r\n\r\n    if (type === types.ThenStatement) {\r\n      state.blockStack.push(state.i)\r\n\r\n      if (ifResultFalse) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (ifResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- check incrementDecrementResult -----\r\n\r\n  if (state.incrementDecrementResult !== undefined) {\r\n    const incrementDecrementResultFalse = state.incrementDecrementResult !== true\r\n    state.incrementDecrementResult = undefined\r\n\r\n    if (incrementDecrementResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- normal execution -----\r\n\r\n  if (line.extra === true) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (line.args === true) {\r\n    throw core.ArgumentError\r\n  }\r\n\r\n  return statement.evaluate(line, state)\r\n}\r\n"],"sourceRoot":""}