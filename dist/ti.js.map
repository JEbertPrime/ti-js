{"version":3,"sources":["webpack://ti/webpack/bootstrap","webpack://ti/./src/common/types.js","webpack://ti/./src/parse/tibasic.pegjs","webpack://ti/./src/parse/pegutil.js","webpack://ti/./src/common/core.js","webpack://ti/./src/common/signal.js","webpack://ti/./src/parse/parser.js","webpack://ti/./src/evaluate/operation.js","webpack://ti/./src/evaluate/expression.js","webpack://ti/./src/evaluate/assignment.js","webpack://ti/./src/evaluate/iolib.js","webpack://ti/./src/evaluate/statement.js","webpack://ti/./src/run/daemon.js","webpack://ti/./src/run/runtime.js","webpack://ti/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ti","lib","SyntaxError","NUMBER","LIST","STRING","ANS","GetKey","VARIABLE","STRINGVARIABLE","LISTVARIABLE","LISTINDEX","BINARY","UNARY","ValueStatement","AssignmentStatement","IfStatement","ThenStatement","ElseStatement","ForLoop","WhileLoop","RepeatLoop","EndStatement","PauseStatement","LabelStatement","GotoStatement","IncrementSkip","DecrementSkip","MenuStatement","ProgramStatement","ReturnStatement","StopStatement","DelVarStatement","GraphStyleStatement","OpenLibStatement","ExecLibStatement","Input","Prompt","Display","DispGraph","DispTable","Output","ClrHome","ClrTable","GetCalc","Get","Send","peg$SyntaxError","message","expected","found","location","this","Error","captureStackTrace","child","parent","C","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","any","end","other","description","not","describeExpectation","hex","ch","charCodeAt","toString","toUpperCase","replace","type","j","descriptions","sort","length","slice","join","describeExpected","describeFound","parse","input","options","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$e0","peg$e1","peg$classExpectation","peg$e2","peg$e3","peg$e4","peg$literalExpectation","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$e49","peg$e50","peg$e51","peg$e52","peg$e53","peg$e54","peg$e55","peg$e56","peg$e57","peg$e58","peg$e59","peg$e60","peg$e61","peg$e62","peg$e63","peg$f0","peg$f1","peg$f2","peg$f3","number","peg$f4","substring","peg$f5","types","peg$f6","peg$f7","custom","peg$f8","peg$f9","list","index","peg$f10","integer","fraction","exponent","peg$f11","peg$f12","peg$f13","chars","peg$f14","peg$f15","peg$f16","head","tail","util","buildList","peg$f17","operator","argument","peg$f18","buildImplicitBinaryExpression","peg$f19","buildBinaryExpression","peg$f20","peg$f21","assignable","peg$f22","extra","peg$f23","peg$f24","peg$f25","variable","start","step","args","peg$f26","peg$f27","peg$f28","peg$f29","peg$f30","peg$f31","peg$f32","peg$f33","peg$f34","title","buildMenuStatement","peg$f35","peg$f36","peg$f37","peg$f38","peg$f39","equation","style","peg$f40","peg$f41","peg$f42","peg$f43","peg$f44","peg$f45","peg$f46","peg$f47","row","column","peg$f48","peg$f49","peg$f50","portflag","peg$f51","peg$f52","peg$currPos","peg$savedPos","peg$posDetailsCache","line","peg$expected","peg$silentFails","startRule","ignoreCase","peg$computePosDetails","pos","details","peg$VALIDFILENAME","filename","peg$computeLocation","startPos","endPos","loc","startPosDetails","offset","endPosDetails","peg$expect","top","variants","push","peg$buildStructuredError","s0","s1","s2","s3","peg$parseTestExpression","rule$expects","substr","peg$parseAssignable","peg$parseAssignment","peg$parseExtraCharacters","peg$parseIfStatement","peg$parseThen","peg$parseElse","s4","s5","s6","s8","peg$parseVariable","peg$parseArgumentExpression","peg$parseExtraArguments","peg$parseOptionalEndParen","peg$parseFor","peg$parseWhile","peg$parseRepeat","peg$parseEnd","peg$parsePause","peg$parseLocation","peg$parseLabel","peg$parseGoto","peg$parseIncrementSkip","peg$parseDecrementSkip","s7","peg$parseStringLiteral","peg$parseMenu","peg$parseProgramName","peg$parseProgram","peg$parseReturn","peg$parseStop","peg$parseDelVar","peg$parseGraphStyle","peg$parseOpenLib","peg$parseExecLib","peg$parseCtlStatement","peg$parsePrefixArgumentExpression","peg$parseInput","peg$parsePrompt","peg$parseDisplay","peg$parseDispGraph","peg$parseDispTable","peg$parseOutput","peg$parseClrHome","peg$parseClrTable","peg$parseGetCalc","peg$parseGet","peg$parseSend","peg$parseIoStatement","peg$parseValueStatement","peg$parseStatement","peg$parseSourceCharacter","charAt","peg$parseAlpha","test","peg$parseAlphaNum","peg$parseDigit","peg$parseNumericVariable","peg$parseNumericVariableIdentifier","peg$parseStringVariable","peg$parseStringVariableIdentifier","peg$parseListVariable","peg$parseListVariableIdentifier","peg$parseCustomListVariableIdentifier","peg$parseListIndex","peg$parseInteger","peg$parseExponentPart","peg$parseExponentIndicator","peg$parseSignedInteger","peg$parseCharacter","peg$parseCharacterString","peg$parseToken","peg$parseAnswer","peg$parseGetKey","peg$parseTokenExpression","peg$parseTokenLiteral","peg$parseListExpression","peg$parseUnaryOperator","peg$parseTokenUnaryExpression","peg$parseUnaryExpression","peg$parseNumericLiteral","peg$parseImplicitMultiplicativeExpression","peg$parseMultiplicativeOperator","peg$parseMultiplicativeExpression","peg$parseAdditiveOperator","peg$parseAdditiveExpression","peg$parseTestOperator","failPos","peg$buildError","reduce","result","element","left","right","flat","choices","option","elements","concat","error","code","hideSource","tiError","DataTypeError","UndefinedError","LabelError","ArgumentError","DimMismatchError","DivideByZeroError","InvalidDimError","DomainError","libError","UnimplementedError","newFloat","float","ONE","MINUSONE","YIELD","DONE","FAULTED","SUSPEND","source","sourceMap","split","parsedLine","isTruthy","assignVariable","mem","vars","assignAns","ans","binaryOperation","resolveNumber","str","parseFloat","valueToString","strict","startsWith","e","evaluate","behavior","expressionOf","resolved","unaryOf","binaryOf","applyUnaryOperation","applyBinaryOperationListAndNumber","applyBinaryOperation","x","y","includes","assignmentOf","enterkey","stdout","newline","elem","setTimeout","val","console","log","onStdin","callback","stdin","stdinQueue","reverse","on","keyCode","off","prompt","pop","statementOf","increment","getInput","state","allowStringLiterals","io","resume","sourceLines","Length","sourceLine","ifResult","blockStack","lines","falsyStackHeight","searchLabel","incrementDecrementResult","forEach","choice","idx","digit","rows","columns","loopMessageName","exceptionName","minimumDelay","tasks","exceptions","running","nextTaskId","maxExceptions","eventTarget","document","createTextNode","fireEvent","event","Event","dispatchEvent","startIfNeeded","window","postMessage","createTask","func","delay","runOnce","taskId","debug","Math","max","lastRun","stopOnException","suspended","suspendTask","deleteTask","resumeTinyInterval","tinyIntervalID","resumeTask","addEventListener","data","stopPropagation","time","performance","now","taskIds","keys","runningTaskCount","suspendedTaskCount","task","runs","timeSinceRun","floor","ex","removeEventListener","run","frequencyMs","resumeCallback","maximumLines","linesRun","falsyBlockPreviousIf","status","includeErrors","includeLibErrors","includeLineNumbers","includeSource","Line","lastBlockIndex","lastBlock","ifResultFalse","incrementDecrementResultFalse","runLine","runLoop","getStatus","isActive","stop"],"mappings":"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","file":"ti.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// types\r\n// =====\r\n\r\n// ----- Errors -----\r\n\r\nexport const ti = 'ti'\r\nexport const lib = 'lib'\r\nexport const SyntaxError = 'SyntaxError'\r\n\r\n// ----- Values -----\r\n\r\nexport const NUMBER = 'number'\r\nexport const LIST = 'list'\r\nexport const STRING = 'string'\r\n\r\n// ----- Tokens -----\r\n\r\nexport const ANS = 'ans'\r\nexport const GetKey = 'GetKey'\r\n\r\n// ----- Variables -----\r\n\r\nexport const VARIABLE = 'variable'\r\nexport const STRINGVARIABLE = 'stringVariable'\r\nexport const LISTVARIABLE = 'listVariable'\r\nexport const LISTINDEX = 'listIndex'\r\n\r\n// ----- Expressions -----\r\n\r\nexport const BINARY = 'binary'\r\nexport const UNARY = 'unary'\r\n\r\n// ----- Statements -----\r\n\r\nexport const ValueStatement = 'value'\r\nexport const AssignmentStatement = 'assign'\r\n\r\n// ----- CTL -----\r\n\r\nexport const IfStatement = 'IfStatement'\r\nexport const ThenStatement = 'ThenStatement'\r\nexport const ElseStatement = 'ElseStatement'\r\nexport const ForLoop = 'ForLoop'\r\nexport const WhileLoop = 'WhileLoop'\r\nexport const RepeatLoop = 'RepeatLoop'\r\nexport const EndStatement = 'EndStatement'\r\nexport const PauseStatement = 'PauseStatement'\r\nexport const LabelStatement = 'LabelStatement'\r\nexport const GotoStatement = 'GotoStatement'\r\nexport const IncrementSkip = 'IncrementSkip'\r\nexport const DecrementSkip = 'DecrementSkip'\r\nexport const MenuStatement = 'MenuStatement'\r\nexport const ProgramStatement = 'ProgramStatement'\r\nexport const ReturnStatement = 'ReturnStatement'\r\nexport const StopStatement = 'StopStatement'\r\nexport const DelVarStatement = 'DelVarStatement'\r\nexport const GraphStyleStatement = 'GraphStyleStatement'\r\nexport const OpenLibStatement = 'OpenLibStatement'\r\nexport const ExecLibStatement = 'ExecLibStatement'\r\n\r\n// ----- I/O -----\r\n\r\nexport const Input = 'Input'\r\nexport const Prompt = 'Prompt'\r\nexport const Display = 'display'\r\nexport const DispGraph = 'DispGraph'\r\nexport const DispTable = 'DispTable'\r\nexport const Output = 'Output'\r\nexport const ClrHome = 'ClrHome'\r\nexport const ClrTable = 'ClrTable'\r\nexport const GetCalc = 'GetCalc'\r\nexport const Get = 'Get'\r\nexport const Send = 'Send'\r\n","// Generated by PEG.js v0.11.0-master.0b102d2, https://pegjs.org/\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \")\";\n  var peg$c1 = \"&theta\";\n  var peg$c2 = \"Str\";\n  var peg$c3 = \"&L\";\n  var peg$c4 = \"&list\";\n  var peg$c5 = \"(\";\n  var peg$c6 = \"&E\";\n  var peg$c7 = \".\";\n  var peg$c8 = \"\\\"\";\n  var peg$c9 = \"Ans\";\n  var peg$c10 = \"getKey\";\n  var peg$c11 = \"{\";\n  var peg$c12 = \"}\";\n  var peg$c13 = \"&-\";\n  var peg$c14 = \"*\";\n  var peg$c15 = \"/\";\n  var peg$c16 = \"+\";\n  var peg$c17 = \"-\";\n  var peg$c18 = \"=\";\n  var peg$c19 = \"!=\";\n  var peg$c20 = \">=\";\n  var peg$c21 = \">\";\n  var peg$c22 = \"<=\";\n  var peg$c23 = \"<\";\n  var peg$c24 = \",\";\n  var peg$c25 = \"->\";\n  var peg$c26 = \"If \";\n  var peg$c27 = \"Then\";\n  var peg$c28 = \"Else\";\n  var peg$c29 = \"For(\";\n  var peg$c30 = \"While \";\n  var peg$c31 = \"Repeat \";\n  var peg$c32 = \"End\";\n  var peg$c33 = \"Pause\";\n  var peg$c34 = \"Lbl \";\n  var peg$c35 = \"Goto \";\n  var peg$c36 = \"IS>(\";\n  var peg$c37 = \"DS<(\";\n  var peg$c38 = \"Menu(\";\n  var peg$c39 = \"prgm\";\n  var peg$c40 = \"Return\";\n  var peg$c41 = \"Stop\";\n  var peg$c42 = \"DelVar \";\n  var peg$c43 = \"GraphStyle(\";\n  var peg$c44 = \"OpenLib(\";\n  var peg$c45 = \"ExecLib(\";\n  var peg$c46 = \"Input \";\n  var peg$c47 = \"Prompt \";\n  var peg$c48 = \"Disp \";\n  var peg$c49 = \"DispGraph\";\n  var peg$c50 = \"DispTable\";\n  var peg$c51 = \"Output(\";\n  var peg$c52 = \"ClrHome\";\n  var peg$c53 = \"ClrTable\";\n  var peg$c54 = \"GetCalc(\";\n  var peg$c55 = \"Get(\";\n  var peg$c56 = \"Send(\";\n\n  var peg$r0 = /^[A-Z]/;\n  var peg$r1 = /^[A-Z0-9]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[1-6]/;\n  var peg$r4 = /^[+\\-]/;\n  var peg$r5 = /^[^\"]/;\n\n  var peg$e0 = peg$anyExpectation();\n  var peg$e1 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e2 = peg$classExpectation([[\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e4 = peg$literalExpectation(\")\", false);\n  var peg$e5 = peg$literalExpectation(\"&theta\", false);\n  var peg$e6 = peg$literalExpectation(\"Str\", false);\n  var peg$e7 = peg$literalExpectation(\"&L\", false);\n  var peg$e8 = peg$classExpectation([[\"1\", \"6\"]], false, false);\n  var peg$e9 = peg$literalExpectation(\"&list\", false);\n  var peg$e10 = peg$literalExpectation(\"(\", false);\n  var peg$e11 = peg$classExpectation([\"+\", \"-\"], false, false);\n  var peg$e12 = peg$literalExpectation(\"&E\", false);\n  var peg$e13 = peg$literalExpectation(\".\", false);\n  var peg$e14 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e15 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e16 = peg$literalExpectation(\"Ans\", false);\n  var peg$e17 = peg$literalExpectation(\"getKey\", false);\n  var peg$e18 = peg$literalExpectation(\"{\", false);\n  var peg$e19 = peg$literalExpectation(\"}\", false);\n  var peg$e20 = peg$literalExpectation(\"&-\", false);\n  var peg$e21 = peg$literalExpectation(\"*\", false);\n  var peg$e22 = peg$literalExpectation(\"/\", false);\n  var peg$e23 = peg$literalExpectation(\"+\", false);\n  var peg$e24 = peg$literalExpectation(\"-\", false);\n  var peg$e25 = peg$literalExpectation(\"=\", false);\n  var peg$e26 = peg$literalExpectation(\"!=\", false);\n  var peg$e27 = peg$literalExpectation(\">=\", false);\n  var peg$e28 = peg$literalExpectation(\">\", false);\n  var peg$e29 = peg$literalExpectation(\"<=\", false);\n  var peg$e30 = peg$literalExpectation(\"<\", false);\n  var peg$e31 = peg$literalExpectation(\",\", false);\n  var peg$e32 = peg$literalExpectation(\"->\", false);\n  var peg$e33 = peg$literalExpectation(\"If \", false);\n  var peg$e34 = peg$literalExpectation(\"Then\", false);\n  var peg$e35 = peg$literalExpectation(\"Else\", false);\n  var peg$e36 = peg$literalExpectation(\"For(\", false);\n  var peg$e37 = peg$literalExpectation(\"While \", false);\n  var peg$e38 = peg$literalExpectation(\"Repeat \", false);\n  var peg$e39 = peg$literalExpectation(\"End\", false);\n  var peg$e40 = peg$literalExpectation(\"Pause\", false);\n  var peg$e41 = peg$literalExpectation(\"Lbl \", false);\n  var peg$e42 = peg$literalExpectation(\"Goto \", false);\n  var peg$e43 = peg$literalExpectation(\"IS>(\", false);\n  var peg$e44 = peg$literalExpectation(\"DS<(\", false);\n  var peg$e45 = peg$literalExpectation(\"Menu(\", false);\n  var peg$e46 = peg$literalExpectation(\"prgm\", false);\n  var peg$e47 = peg$literalExpectation(\"Return\", false);\n  var peg$e48 = peg$literalExpectation(\"Stop\", false);\n  var peg$e49 = peg$literalExpectation(\"DelVar \", false);\n  var peg$e50 = peg$literalExpectation(\"GraphStyle(\", false);\n  var peg$e51 = peg$literalExpectation(\"OpenLib(\", false);\n  var peg$e52 = peg$literalExpectation(\"ExecLib(\", false);\n  var peg$e53 = peg$literalExpectation(\"Input \", false);\n  var peg$e54 = peg$literalExpectation(\"Prompt \", false);\n  var peg$e55 = peg$literalExpectation(\"Disp \", false);\n  var peg$e56 = peg$literalExpectation(\"DispGraph\", false);\n  var peg$e57 = peg$literalExpectation(\"DispTable\", false);\n  var peg$e58 = peg$literalExpectation(\"Output(\", false);\n  var peg$e59 = peg$literalExpectation(\"ClrHome\", false);\n  var peg$e60 = peg$literalExpectation(\"ClrTable\", false);\n  var peg$e61 = peg$literalExpectation(\"GetCalc(\", false);\n  var peg$e62 = peg$literalExpectation(\"Get(\", false);\n  var peg$e63 = peg$literalExpectation(\"Send(\", false);\n\n  var peg$f0 = function() { return true };\n  var peg$f1 = function() { return text(); };\n  var peg$f2 = function() { return 'THETA' };\n  var peg$f3 = function(number) { return 'List' + number; };\n  var peg$f4 = function() { return 'List' + text().substring(5); };\n  var peg$f5 = function(name) { return { type: types.VARIABLE, name } };\n  var peg$f6 = function(name) { return { type: types.STRINGVARIABLE, name } };\n  var peg$f7 = function(name) { return { type: types.LISTVARIABLE, name, custom: false } };\n  var peg$f8 = function(name) { return { type: types.LISTVARIABLE, name, custom: true } };\n  var peg$f9 = function(list, index) { return { type: types.LISTINDEX, list, index } };\n  var peg$f10 = function(integer, fraction, exponent) { \r\n      return { type: types.NUMBER, integer, fraction, exponent }\r\n    };\n  var peg$f11 = function(fraction, exponent) { \r\n      return { type: types.NUMBER, fraction, exponent }\r\n    };\n  var peg$f12 = function(integer, exponent) { \r\n      return { type: types.NUMBER, integer, exponent }\r\n    };\n  var peg$f13 = function(chars) { return { type: types.STRING, chars } };\n  var peg$f14 = function() { return { type: types.ANS } };\n  var peg$f15 = function() { return { type: types.GetKey } };\n  var peg$f16 = function(head, tail) { return util.buildList(head, tail); };\n  var peg$f17 = function(operator, argument) { return { type: types.UNARY, operator, argument } };\n  var peg$f18 = function(head, tail, end) { return util.buildImplicitBinaryExpression(head, tail, end); };\n  var peg$f19 = function(head, tail) { return util.buildBinaryExpression(head, tail); };\n  var peg$f20 = function(value) { return { type: types.ValueStatement, value }};\n  var peg$f21 = function(value, assignable) { return { type: types.AssignmentStatement, value, assignable }};\n  var peg$f22 = function(value, extra) { return { type: types.IfStatement, value, extra }};\n  var peg$f23 = function(extra) { return { type: types.ThenStatement, extra }};\n  var peg$f24 = function(extra) { return { type: types.ElseStatement, extra }};\n  var peg$f25 = function(variable, start, end, step, args, extra) { return { type: types.ForLoop, variable, start, end, step, args, extra }};\n  var peg$f26 = function(value, extra) { return { type: types.WhileLoop, value, extra }};\n  var peg$f27 = function(value, extra) { return { type: types.RepeatLoop, value, extra }};\n  var peg$f28 = function(extra) { return { type: types.EndStatement, extra }};\n  var peg$f29 = function() { return { type: types.PauseStatement }};\n  var peg$f30 = function(location) { return { type: types.LabelStatement, location }};\n  var peg$f31 = function(location) { return { type: types.GotoStatement, location }};\n  var peg$f32 = function(variable, end) { return { type: types.IncrementSkip, variable, end }};\n  var peg$f33 = function(variable, end) { return { type: types.DecrementSkip, variable, end }};\n  var peg$f34 = function(title, options) { return util.buildMenuStatement(title, options); };\n  var peg$f35 = function(name) { return { type: types.ProgramStatement, name }};\n  var peg$f36 = function() { return { type: types.ReturnStatement }};\n  var peg$f37 = function() { return { type: types.StopStatement }};\n  var peg$f38 = function(variable) { return { type: types.DelVarStatement, variable }};\n  var peg$f39 = function(equation, style) { return { type: types.GraphStyleStatement, equation, style }};\n  var peg$f40 = function(name) { return { type: types.OpenLibStatement, name }};\n  var peg$f41 = function(name) { return { type: types.ExecLibStatement, name }};\n  var peg$f42 = function(text, variable) { return { type: types.Input, text, variable } };\n  var peg$f43 = function(variable) { return { type: types.Prompt, variable } };\n  var peg$f44 = function(value) { return { type: types.Display, value } };\n  var peg$f45 = function() { return { type: types.DispGraph } };\n  var peg$f46 = function() { return { type: types.DispTable } };\n  var peg$f47 = function(row, column, value) { return { type: types.Output, row, column, value } };\n  var peg$f48 = function() { return { type: types.ClrHome } };\n  var peg$f49 = function() { return { type: types.ClrTable } };\n  var peg$f50 = function(variable, portflag) { return { type: types.GetCalc, variable, portflag } };\n  var peg$f51 = function(variable) { return { type: types.Get, variable } };\n  var peg$f52 = function(variable) { return { type: types.Send, variable } };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parseStart() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStatement();\n\n    return s0;\n  }\n\n  function peg$parseSourceCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e0);\n    if (input.length > peg$currPos) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlpha() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e1);\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAlphaNum() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e2);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e3);\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraCharacters() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseSourceCharacter();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseSourceCharacter();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOptionalEndParen() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e4);\n    if (input.charCodeAt(peg$currPos) === 41) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = null;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLocation() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlphaNum();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgramName() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAlpha();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlphaNum();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseAlphaNum();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseAlphaNum();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseAlphaNum();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseAlphaNum();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseAlphaNum();\n      if (s7 === peg$FAILED) {\n        s7 = null;\n      }\n      s8 = peg$parseAlphaNum();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariableIdentifier() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAlpha();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e5);\n      if (input.substr(peg$currPos, 6) === peg$c1) {\n        s1 = peg$c1;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f2();\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e6);\n    if (input.substr(peg$currPos, 3) === peg$c2) {\n      s1 = peg$c2;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDigit();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f1();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseListVariableIdentifier() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e7);\n    if (input.substr(peg$currPos, 2) === peg$c3) {\n      s1 = peg$c3;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e8);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f3(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCustomListVariableIdentifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e9);\n    if (input.substr(peg$currPos, 5) === peg$c4) {\n      s1 = peg$c4;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseAlpha();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAlphaNum();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseAlphaNum();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        s5 = peg$parseAlphaNum();\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        s6 = peg$parseAlphaNum();\n        if (s6 === peg$FAILED) {\n          s6 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f4();\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseNumericVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f5(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStringVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseStringVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f6(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseListVariable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariableIdentifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f7(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseCustomListVariableIdentifier();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f8(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseVariable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseStringVariable();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericVariable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListVariable();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListIndex() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseListVariable();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c5;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseTestExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseOptionalEndParen();\n          peg$savedPos = s0;\n          s0 = peg$f9(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAssignable() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseListIndex();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseVariable();\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseDigit();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseDigit();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSignedInteger() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e11);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 === peg$FAILED) {\n      s2 = null;\n    }\n    s3 = peg$parseInteger();\n    if (s3 !== peg$FAILED) {\n      s2 = [s2, s3];\n      s1 = s2;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentIndicator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e12);\n    if (input.substr(peg$currPos, 2) === peg$c6) {\n      s0 = peg$c6;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExponentPart() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseExponentIndicator();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseSignedInteger();\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumericLiteral() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseInteger();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c7;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseInteger();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$parseExponentPart();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f10(s1, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e13);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseInteger();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseExponentPart();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f11(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseInteger();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseExponentPart();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f12(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacter() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e14);\n    if (peg$r5.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCharacterString() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCharacter();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCharacter();\n    }\n    s0 = input.substring(s0, peg$currPos);\n\n    return s0;\n  }\n\n  function peg$parseStringLiteral() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e15);\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseCharacterString();\n      rule$expects(peg$e15);\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f13(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnswer() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e16);\n    if (input.substr(peg$currPos, 3) === peg$c9) {\n      s1 = peg$c9;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f14();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetKey() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e17);\n    if (input.substr(peg$currPos, 6) === peg$c10) {\n      s1 = peg$c10;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f15();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseToken() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAnswer();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseGetKey();\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenLiteral() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseToken();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAssignable();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseStringLiteral();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseListExpression() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e18);\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c11;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseArgumentExpression();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseArgumentExpression();\n        }\n        rule$expects(peg$e19);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s4 = peg$c12;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f16(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenExpression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenLiteral();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e10);\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTestExpression();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e4);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s0 = s2;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseListExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e20);\n    if (input.substr(peg$currPos, 2) === peg$c13) {\n      s0 = peg$c13;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTokenUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryOperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseTokenUnaryExpression();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f17(s1, s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseUnaryExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseTokenUnaryExpression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNumericLiteral();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseUnaryOperator();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseUnaryExpression();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f17(s1, s2);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseImplicitMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTokenUnaryExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseUnaryExpression();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseTokenUnaryExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseTokenUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      s3 = peg$parseUnaryExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f18(s1, s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseUnaryExpression();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseTokenUnaryExpression();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseUnaryExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parseTokenUnaryExpression();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseUnaryExpression();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        s3 = peg$parseTokenUnaryExpression();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        peg$savedPos = s0;\n        s0 = peg$f18(s1, s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryExpression();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e21);\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s0 = peg$c14;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e22);\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s0 = peg$c15;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseMultiplicativeExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseImplicitMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseMultiplicativeOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseImplicitMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseMultiplicativeOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseImplicitMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e23);\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c16;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e24);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c17;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseAdditiveExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMultiplicativeExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseAdditiveOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMultiplicativeExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseAdditiveOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMultiplicativeExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestOperator() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e25);\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s0 = peg$c18;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      rule$expects(peg$e26);\n      if (input.substr(peg$currPos, 2) === peg$c19) {\n        s0 = peg$c19;\n        peg$currPos += 2;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        rule$expects(peg$e27);\n        if (input.substr(peg$currPos, 2) === peg$c20) {\n          s0 = peg$c20;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          rule$expects(peg$e28);\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s0 = peg$c21;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            rule$expects(peg$e29);\n            if (input.substr(peg$currPos, 2) === peg$c22) {\n              s0 = peg$c22;\n              peg$currPos += 2;\n            } else {\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              rule$expects(peg$e30);\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s0 = peg$c23;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseTestExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAdditiveExpression();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseTestOperator();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAdditiveExpression();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseTestOperator();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAdditiveExpression();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e31);\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s1 = peg$c24;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 !== peg$FAILED) {\n        s0 = s2;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrefixArgumentExpression() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e31);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s2 = peg$c24;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExtraArguments() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseArgumentExpression();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseArgumentExpression();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f0();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseValueStatement() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f20(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseAssignment() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTestExpression();\n    if (s1 !== peg$FAILED) {\n      rule$expects(peg$e32);\n      if (input.substr(peg$currPos, 2) === peg$c25) {\n        s2 = peg$c25;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAssignable();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f21(s1, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIfStatement() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e33);\n    if (input.substr(peg$currPos, 3) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f22(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseThen() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e34);\n    if (input.substr(peg$currPos, 4) === peg$c27) {\n      s1 = peg$c27;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f23(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseElse() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e35);\n    if (input.substr(peg$currPos, 4) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f24(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFor() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e36);\n    if (input.substr(peg$currPos, 4) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseArgumentExpression();\n      if (s5 === peg$FAILED) {\n        s5 = null;\n      }\n      s6 = peg$parseExtraArguments();\n      if (s6 === peg$FAILED) {\n        s6 = null;\n      }\n      s7 = peg$parseOptionalEndParen();\n      s8 = peg$parseExtraCharacters();\n      if (s8 === peg$FAILED) {\n        s8 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f25(s2, s3, s4, s5, s6, s8);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseWhile() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e37);\n    if (input.substr(peg$currPos, 6) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f26(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseRepeat() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e38);\n    if (input.substr(peg$currPos, 7) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseExtraCharacters();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f27(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEnd() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e39);\n    if (input.substr(peg$currPos, 3) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseExtraCharacters();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f28(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePause() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e40);\n    if (input.substr(peg$currPos, 5) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f29();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseLabel() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e41);\n    if (input.substr(peg$currPos, 4) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f30(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGoto() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e42);\n    if (input.substr(peg$currPos, 5) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLocation();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f31(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIncrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e43);\n    if (input.substr(peg$currPos, 4) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f32(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecrementSkip() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e44);\n    if (input.substr(peg$currPos, 4) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f33(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseMenu() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e45);\n    if (input.substr(peg$currPos, 5) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$currPos;\n      rule$expects(peg$e31);\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s5 = peg$c24;\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$parseStringLiteral();\n        if (s6 !== peg$FAILED) {\n          rule$expects(peg$e31);\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s7 = peg$c24;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parseLocation();\n            if (s8 !== peg$FAILED) {\n              s5 = [s5, s6, s7, s8];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        rule$expects(peg$e31);\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c24;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseStringLiteral();\n          if (s6 !== peg$FAILED) {\n            rule$expects(peg$e31);\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s7 = peg$c24;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseLocation();\n              if (s8 !== peg$FAILED) {\n                s5 = [s5, s6, s7, s8];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f34(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseProgram() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e46);\n    if (input.substr(peg$currPos, 4) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f35(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseReturn() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e47);\n    if (input.substr(peg$currPos, 6) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f36();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseStop() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e48);\n    if (input.substr(peg$currPos, 4) === peg$c41) {\n      s1 = peg$c41;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f37();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDelVar() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e49);\n    if (input.substr(peg$currPos, 7) === peg$c42) {\n      s1 = peg$c42;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f38(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGraphStyle() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e50);\n    if (input.substr(peg$currPos, 11) === peg$c43) {\n      s1 = peg$c43;\n      peg$currPos += 11;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f39(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOpenLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e51);\n    if (input.substr(peg$currPos, 8) === peg$c44) {\n      s1 = peg$c44;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f40(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseExecLib() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e52);\n    if (input.substr(peg$currPos, 8) === peg$c45) {\n      s1 = peg$c45;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProgramName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseOptionalEndParen();\n        peg$savedPos = s0;\n        s0 = peg$f41(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCtlStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseIfStatement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseThen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseElse();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseFor();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseWhile();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseRepeat();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseEnd();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsePause();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseLabel();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGoto();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseIncrementSkip();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parseDecrementSkip();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseMenu();\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseProgram();\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$parseReturn();\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$parseStop();\n                                  if (s0 === peg$FAILED) {\n                                    s0 = peg$parseDelVar();\n                                    if (s0 === peg$FAILED) {\n                                      s0 = peg$parseGraphStyle();\n                                      if (s0 === peg$FAILED) {\n                                        s0 = peg$parseOpenLib();\n                                        if (s0 === peg$FAILED) {\n                                          s0 = peg$parseExecLib();\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInput() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e53);\n    if (input.substr(peg$currPos, 6) === peg$c46) {\n      s1 = peg$c46;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsePrefixArgumentExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseVariable();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f42(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePrompt() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e54);\n    if (input.substr(peg$currPos, 7) === peg$c47) {\n      s1 = peg$c47;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f43(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDisplay() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e55);\n    if (input.substr(peg$currPos, 5) === peg$c48) {\n      s1 = peg$c48;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f44(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDispGraph() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e56);\n    if (input.substr(peg$currPos, 9) === peg$c49) {\n      s1 = peg$c49;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f45();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDispTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e57);\n    if (input.substr(peg$currPos, 9) === peg$c50) {\n      s1 = peg$c50;\n      peg$currPos += 9;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f46();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseOutput() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e58);\n    if (input.substr(peg$currPos, 7) === peg$c51) {\n      s1 = peg$c51;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTestExpression();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseArgumentExpression();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      s5 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f47(s2, s3, s4);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseClrHome() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e59);\n    if (input.substr(peg$currPos, 7) === peg$c52) {\n      s1 = peg$c52;\n      peg$currPos += 7;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f48();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseClrTable() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e60);\n    if (input.substr(peg$currPos, 8) === peg$c53) {\n      s1 = peg$c53;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f49();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseGetCalc() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e61);\n    if (input.substr(peg$currPos, 8) === peg$c54) {\n      s1 = peg$c54;\n      peg$currPos += 8;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseArgumentExpression();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f50(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseGet() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e62);\n    if (input.substr(peg$currPos, 4) === peg$c55) {\n      s1 = peg$c55;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f51(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSend() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e63);\n    if (input.substr(peg$currPos, 5) === peg$c56) {\n      s1 = peg$c56;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseVariable();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseOptionalEndParen();\n      peg$savedPos = s0;\n      s0 = peg$f52(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIoStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseInput();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePrompt();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseDisplay();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseDispGraph();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseDispTable();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseOutput();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseClrHome();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseClrTable();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parseGetCalc();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parseGet();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parseSend();\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStatement() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseAssignment();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseCtlStatement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseIoStatement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseValueStatement();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n\r\n    const types = require ('../common/types');\r\n    const util = require ('./pegutil');\r\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","// pegutil\r\n// =======\r\n\r\nimport * as types from '../common/types'\r\n\r\nexport function buildBinaryExpression (head, tail) {\r\n  return tail.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: element[0],\r\n      left: result,\r\n      right: element[1]\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildImplicitBinaryExpression (head, tail, end) {\r\n  const list = tail.flat()\r\n  if (end !== null) {\r\n    list.push(end)\r\n  }\r\n  return list.reduce(function (result, element) {\r\n    return {\r\n      type: types.BINARY,\r\n      operator: '*',\r\n      left: result,\r\n      right: element\r\n    }\r\n  }, head)\r\n}\r\n\r\nexport function buildMenuStatement (title, options) {\r\n  const choices = options.map(function (element) {\r\n    return {\r\n      option: element[1],\r\n      location: element[3]\r\n    }\r\n  })\r\n  return {\r\n    type: types.MenuStatement,\r\n    title,\r\n    choices\r\n  }\r\n}\r\n\r\nexport function buildList (head, tail) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: [head].concat(tail)\r\n  }\r\n}\r\n","// core\r\n// ====\r\n\r\nimport * as types from './types'\r\n\r\nfunction error (type, code, hideSource = false) {\r\n  return {\r\n    type: type,\r\n    code: code,\r\n    hideSource: hideSource\r\n  }\r\n}\r\n\r\nfunction tiError (code, hideSource = false) {\r\n  return error(types.ti, code, hideSource)\r\n}\r\n\r\nexport const DataTypeError = tiError('DATA TYPE')\r\nexport const SyntaxError = tiError('SYNTAX')\r\nexport const UndefinedError = tiError('UNDEFINED')\r\nexport const LabelError = tiError('LABEL')\r\nexport const ArgumentError = tiError('ARGUMENT')\r\nexport const DimMismatchError = tiError('DIM MISMATCH')\r\nexport const DivideByZeroError = tiError('DIVIDE BY 0')\r\nexport const InvalidDimError = tiError('INVALID DIM')\r\nexport const DomainError = tiError('DOMAIN')\r\n\r\nexport function libError (code, hideSource = false) {\r\n  return error(types.lib, code, hideSource)\r\n}\r\n\r\nexport const UnimplementedError = libError('unimplemented')\r\n\r\nexport function newMem () {\r\n  return {\r\n    vars: {},\r\n    ans: newFloat()\r\n  }\r\n}\r\n\r\nexport function newFloat (value = 0) {\r\n  return { type: types.NUMBER, float: value }\r\n}\r\n\r\nexport const ONE = newFloat(1)\r\n\r\nexport const MINUSONE = newFloat(-1)\r\n","// signal\r\n// ======\r\n\r\nexport const YIELD = 'yield'\r\nexport const DONE = 'done'\r\nexport const FAULTED = 'faulted'\r\nexport const SUSPEND = 'suspend'\r\n","// parser\r\n// ======\r\n\r\nimport * as types from '../common/types'\r\nimport pegJsParser from './tibasic.pegjs'\r\n\r\nexport function parse (source, options = {}) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceMap = options.sourceMap || 'inline'\r\n\r\n  // TODO:\r\n  // * Allow blank lines\r\n  // * Allow multiple statements per line with ':'\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  const parsedLines = sourceLines.map(s => {\r\n    let parsedLine\r\n    try {\r\n      parsedLine = pegJsParser.parse(s)\r\n    } catch (error) {\r\n      if (error.name === 'SyntaxError') {\r\n        parsedLine = { type: 'SyntaxError' }\r\n      } else {\r\n        throw error\r\n      }\r\n    }\r\n    if (sourceMap === 'inline') {\r\n      parsedLine.source = s\r\n    }\r\n    return parsedLine\r\n  })\r\n\r\n  return parsedLines\r\n}\r\n\r\nexport function parseExpression (source) {\r\n  if (source === undefined) {\r\n    throw new Error('Undefined source!')\r\n  }\r\n\r\n  const sourceLines = source.split(/\\r?\\n/)\r\n  if (sourceLines.Length > 1) {\r\n    throw new Error('Too many lines for an expression')\r\n  }\r\n  const sourceLine = sourceLines[0]\r\n  let parsedLine\r\n  try {\r\n    parsedLine = pegJsParser.parse(sourceLine)\r\n  } catch (error) {\r\n    if (error.name !== 'SyntaxError') {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  return parsedLine !== undefined && parsedLine.type === types.ValueStatement ? parsedLine.value : { type: 'SyntaxError' }\r\n}\r\n","// operation\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\n\r\nexport function isTruthy (value) {\r\n  if (value.type === types.NUMBER) {\r\n    return value.float !== 0\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nexport function assignVariable (mem, variable, value) {\r\n  if (variable.type === types.STRINGVARIABLE) {\r\n    if (value.type !== types.STRING) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.VARIABLE) {\r\n    if (value.type !== types.NUMBER) {\r\n      return\r\n    }\r\n  } else if (variable.type === types.LISTVARIABLE) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else if (variable.type === types.LISTINDEX) {\r\n    if (value.type !== types.LIST) {\r\n      throw core.DataTypeError\r\n    }\r\n  } else {\r\n    throw core.libError('unexpected variable type')\r\n  }\r\n  mem.vars[variable.name] = value\r\n}\r\n\r\nexport function deleteVariable (mem, variable) {\r\n  delete mem.vars[variable.name]\r\n}\r\n\r\nexport function hasVariable (mem, variable) {\r\n  return variable.name in mem.vars\r\n}\r\n\r\nexport function assignAns (mem, value) {\r\n  mem.ans = value\r\n}\r\n\r\nexport function binaryOperation (left, operator, right) {\r\n  return {\r\n    type: types.BINARY,\r\n    operator,\r\n    left,\r\n    right\r\n  }\r\n}\r\n\r\nexport function resolveNumber (value) {\r\n  let str = ''\r\n  if (value.integer !== undefined && value.integer !== null) {\r\n    str += value.integer\r\n  }\r\n  if (value.fraction !== undefined && value.fraction !== null) {\r\n    str += '.' + value.fraction\r\n  }\r\n  if (value.exponent !== undefined && value.exponent !== null) {\r\n    str += 'e' + value.exponent\r\n  }\r\n  return parseFloat(str)\r\n}\r\n\r\nexport function variableToString (variable) {\r\n  let str = variable.name\r\n  switch (variable.type) {\r\n    case types.VARIABLE:\r\n    case types.STRINGVARIABLE:\r\n      break\r\n    case types.LISTVARIABLE:\r\n      str = str.substring(4)\r\n      if (!variable.custom) {\r\n        str = `&L${str}`\r\n      }\r\n      break\r\n    default:\r\n      throw core.libError('unexpected variable tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function valueToString (value, strict = false) {\r\n  if (strict && value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  let str = ''\r\n  switch (value.type) {\r\n    case types.NUMBER:\r\n      str = value.float.toString()\r\n      if (str.startsWith('0.')) {\r\n        str = str.substring(1)\r\n      }\r\n      break\r\n    case types.STRING:\r\n      str = value.chars\r\n      break\r\n    case types.LIST:\r\n      str = '{' + value.elements.map(e => valueToString(e)).join(' ') + '}'\r\n      break\r\n    default:\r\n      throw core.libError('unexpected value tostring')\r\n  }\r\n  return str\r\n}\r\n\r\nexport function parseDigit (str) {\r\n  if (str === undefined || str === null || str === '' || str.length > 1) {\r\n    return\r\n  }\r\n  const digit = str.charCodeAt(0) - '0'.charCodeAt(0)\r\n  if (digit < 0 || digit > 9) {\r\n    return\r\n  }\r\n  return digit\r\n}\r\n","// expression\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as operation from './operation'\r\n\r\nexport function evaluate (value, mem) {\r\n  const behavior = expressionOf[value.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected value')\r\n  }\r\n  return behavior(value, mem)\r\n}\r\n\r\nconst expressionOf = {}\r\n\r\n// ----- Expressions -----\r\n\r\nexpressionOf[types.SyntaxError] = (value, mem) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- Values -----\r\n\r\nexpressionOf[types.NUMBER] = (value, mem) => {\r\n  if (value.float !== undefined) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: operation.resolveNumber(value)\r\n  }\r\n}\r\n\r\nexpressionOf[types.STRING] = (value, mem) => {\r\n  return value\r\n}\r\n\r\nexpressionOf[types.LIST] = (value, mem) => {\r\n  if (value.resolved === true) {\r\n    return value\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: value.elements.map(function (element) {\r\n      const result = evaluate(element, mem)\r\n      if (result.type !== types.NUMBER) {\r\n        // TODO: a list of lists should be a syntax error\r\n        // However, a list of list variables should still be a data type error\r\n        // Distinguishing them here is hard - should be done in grammar?\r\n        throw core.DataTypeError\r\n      }\r\n      return result\r\n    }),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Variables -----\r\n\r\nexpressionOf[types.VARIABLE] = (value, mem) => {\r\n  let result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    result = mem.vars[value.name] = core.newFloat()\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.STRINGVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTVARIABLE] = (value, mem) => {\r\n  const result = mem.vars[value.name]\r\n  if (result === undefined) {\r\n    throw core.UndefinedError\r\n  }\r\n  return result\r\n}\r\n\r\nexpressionOf[types.LISTINDEX] = (value, mem) => {\r\n  const list = evaluate(value.list, mem)\r\n  const index = evaluate(value.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.InvalidDimError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  return {\r\n    type: types.NUMBER,\r\n    float: list.elements[index.float - 1].float\r\n  }\r\n}\r\n\r\n// ----- Tokens -----\r\n\r\nexpressionOf[types.ANS] = (value, mem) => {\r\n  return mem.ans\r\n}\r\n\r\nexpressionOf[types.GetKey] = (value, mem) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Operators -----\r\n\r\nexpressionOf[types.UNARY] = (value, mem) => {\r\n  const argument = evaluate(value.argument, mem)\r\n  const behavior = unaryOf[argument.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected unary argument')\r\n  }\r\n  return behavior(value.operator, argument)\r\n}\r\n\r\nexpressionOf[types.BINARY] = (value, mem) => {\r\n  const left = evaluate(value.left, mem)\r\n  const right = evaluate(value.right, mem)\r\n  const behavior = binaryOf[left.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected binary left')\r\n  }\r\n  return behavior(value.operator, left, right)\r\n}\r\n\r\n// ----- Unary -----\r\n\r\nconst unaryOf = {}\r\n\r\nunaryOf[types.NUMBER] = (operator, argument) => {\r\n  return { type: types.NUMBER, float: applyUnaryOperation(operator, argument.float) }\r\n}\r\n\r\nunaryOf[types.STRING] = (operator, argument) => {\r\n  throw core.DataTypeError\r\n}\r\n\r\nunaryOf[types.LIST] = (operator, argument) => {\r\n  return {\r\n    type: types.LIST,\r\n    elements: argument.elements.map(e => ({ type: types.NUMBER, float: applyUnaryOperation(operator, e.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Binary -----\r\n\r\nconst binaryOf = {}\r\n\r\nbinaryOf[types.NUMBER] = (operator, left, right) => {\r\n  if (right.type !== types.NUMBER) {\r\n    if (right.type === types.LIST) {\r\n      return applyBinaryOperationListAndNumber(operator, right, left)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  return { type: types.NUMBER, float: applyBinaryOperation(operator, left.float, right.float) }\r\n}\r\n\r\nbinaryOf[types.STRING] = (operator, left, right) => {\r\n  if (right.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (['+'].includes(operator)) {\r\n    return { type: types.STRING, chars: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  if (['=', '!='].includes(operator)) {\r\n    return { type: types.NUMBER, float: applyBinaryOperation(operator, left.chars, right.chars) }\r\n  }\r\n  throw core.DataTypeError\r\n}\r\n\r\nbinaryOf[types.LIST] = (operator, left, right) => {\r\n  if (right.type !== types.LIST) {\r\n    if (right.type === types.NUMBER) {\r\n      return applyBinaryOperationListAndNumber(operator, left, right)\r\n    }\r\n    throw core.DataTypeError\r\n  }\r\n  if (left.elements.length !== right.elements.length) {\r\n    throw core.DimMismatchError\r\n  }\r\n  return {\r\n    type: types.LIST,\r\n    elements: left.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, right.elements[i].float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\n// ----- Helper -----\r\n\r\nfunction applyBinaryOperationListAndNumber (operator, list, number) {\r\n  return {\r\n    type: types.LIST,\r\n    elements: list.elements.map((e, i) => ({ type: types.NUMBER, float: applyBinaryOperation(operator, e.float, number.float) })),\r\n    resolved: true\r\n  }\r\n}\r\n\r\nfunction applyUnaryOperation (operator, x) {\r\n  switch (operator) {\r\n    case '&-': return x * -1\r\n    default: throw core.libError('unexpected unary operator')\r\n  }\r\n}\r\n\r\nfunction applyBinaryOperation (operator, x, y) {\r\n  if (operator === '/' && y === 0) {\r\n    throw core.DivideByZeroError\r\n  }\r\n  switch (operator) {\r\n    case '+': return x + y\r\n    case '-': return x - y\r\n    case '*': return x * y\r\n    case '/': return x / y\r\n    case '=': return x === y ? 1 : 0\r\n    case '!=': return x !== y ? 1 : 0\r\n    case '>=': return x >= y ? 1 : 0\r\n    case '>': return x > y ? 1 : 0\r\n    case '<=': return x <= y ? 1 : 0\r\n    case '<': return x < y ? 1 : 0\r\n    default: throw core.libError('unexpected binary operator')\r\n  }\r\n}\r\n","// assignment\r\n// ==========\r\n\r\nimport * as core from '../common/core'\r\nimport * as types from '../common/types'\r\nimport * as expression from './expression'\r\n\r\nexport function evaluate (assignable, value, mem) {\r\n  const behavior = assignmentOf[assignable.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected assignable type')\r\n  }\r\n  return behavior(assignable, value, mem)\r\n}\r\n\r\nconst assignmentOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nassignmentOf[types.VARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.NUMBER) {\r\n    return\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.STRINGVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.STRING) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTVARIABLE] = (assignable, value, mem) => {\r\n  if (value.type !== types.LIST) {\r\n    throw core.DataTypeError\r\n  }\r\n  mem.vars[assignable.name] = value\r\n}\r\n\r\nassignmentOf[types.LISTINDEX] = (assignable, value, mem) => {\r\n  const list = expression.evaluate(assignable.list, mem)\r\n  const index = expression.evaluate(assignable.index, mem)\r\n  if (index.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (index.float < 1 || index.float > list.elements.length) {\r\n    throw core.InvalidDimError\r\n  }\r\n  mem.vars[assignable.list.name].elements[index.float - 1] = value\r\n}\r\n","// iolib\r\n// =====\r\n\r\nimport * as types from '../common/types'\r\n\r\nconst enterkey = 13\r\n\r\nexport function stdout (value, options = {}, newline = true) {\r\n  if (options.elem === undefined) {\r\n    console.log(value)\r\n    return\r\n  }\r\n  setTimeout(() => {\r\n    let result = options.elem.val() + value\r\n    if (newline) {\r\n      result += '\\n'\r\n    }\r\n    options.elem.val(result)\r\n  }, 0)\r\n}\r\n\r\nexport function stderr (ex, options = {}) {\r\n  if ((ex.type === types.ti && !options.includeErrors) ||\r\n      (ex.type === types.lib && !options.includeLibErrors)) {\r\n    console.log(ex)\r\n    return\r\n  }\r\n  let value = ''\r\n  if (ex.type === types.ti) {\r\n    value += 'ERR:'\r\n  } else if (ex.type === types.lib) {\r\n    value += 'Error: '\r\n  } else {\r\n    value += 'Unexpected: '\r\n  }\r\n  value += ex.code\r\n  if (options.includeLineNumbers && ex.source !== undefined && ex.source.index !== undefined) {\r\n    value += ` on line ${ex.source.index}`\r\n  }\r\n  if (options.includeSource && ex.source !== undefined && ex.source.line !== undefined) {\r\n    value += ` :${ex.source.line}`\r\n  }\r\n  stdout(value, options)\r\n}\r\n\r\nexport function onStdin (callback, options = {}) {\r\n  if (options.stdin !== undefined && options.stdin !== '' && options.stdinQueue === undefined) {\r\n    options.stdinQueue = options.stdin.split('\\n').reverse()\r\n  }\r\n  if (options.stdinQueue !== undefined) {\r\n    setTimeout(() => {\r\n      const result = options.stdinQueue.pop()\r\n      if (callback(result) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 0)\r\n    return\r\n  }\r\n  if (options.input === undefined) {\r\n    setTimeout(() => {\r\n      if (callback(prompt('Input?')) === true) {\r\n        onStdin(callback, options)\r\n      }\r\n    }, 100)\r\n    return\r\n  }\r\n  setTimeout(() => options.input.val(''), 0)\r\n  options.input.on('keypress', e => {\r\n    if (e.keyCode === enterkey) {\r\n      const result = options.input.val()\r\n      setTimeout(() => options.input.val(''), 0)\r\n      if (callback(result) !== true) {\r\n        options.input.off('keypress')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function cleanup (options = {}) {\r\n  if (options.input !== undefined) {\r\n    options.input.off('keypress')\r\n  }\r\n}\r\n","// statement\r\n// =========\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as parser from '../parse/parser'\r\nimport * as operation from './operation'\r\nimport * as expression from './expression'\r\nimport * as assignment from './assignment'\r\nimport * as iolib from './iolib'\r\n\r\nexport function evaluate (line, state) {\r\n  const behavior = statementOf[line.type]\r\n  if (behavior === undefined) {\r\n    throw core.libError('unexpected')\r\n  }\r\n  return behavior(line, state)\r\n}\r\n\r\nconst statementOf = {}\r\n\r\n// ----- Statements -----\r\n\r\nstatementOf[types.AssignmentStatement] = (line, state) => {\r\n  const value = expression.evaluate(line.value, state.mem)\r\n  assignment.evaluate(line.assignable, value, state.mem)\r\n  operation.assignAns(state.mem, value)\r\n}\r\n\r\nstatementOf[types.ValueStatement] = (line, state) => {\r\n  operation.assignAns(state.mem, expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.SyntaxError] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\n// ----- CTL -----\r\n\r\nstatementOf[types.IfStatement] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.ifResult = operation.isTruthy(expression.evaluate(line.value, state.mem))\r\n}\r\n\r\nstatementOf[types.ThenStatement] = (line, state) => {\r\n  throw core.SyntaxError\r\n}\r\n\r\nstatementOf[types.ElseStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (state.lines[state.blockStack.pop()].type === types.ThenStatement) {\r\n    state.blockStack.push(state.i)\r\n    state.falsyStackHeight = state.blockStack.length\r\n  } else {\r\n    throw core.SyntaxError\r\n  }\r\n}\r\n\r\nstatementOf[types.ForLoop] = (line, state) => {\r\n  if (line.variable === null || line.start === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.assignVariable(state.mem, line.variable, expression.evaluate(line.start, state.mem))\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.WhileLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n  if (!operation.isTruthy(expression.evaluate(line.value, state.mem))) {\r\n    state.falsyStackHeight = state.blockStack.length\r\n  }\r\n}\r\n\r\nstatementOf[types.RepeatLoop] = (line, state) => {\r\n  if (line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  state.blockStack.push(state.i)\r\n}\r\n\r\nstatementOf[types.EndStatement] = (line, state) => {\r\n  if (state.blockStack.length === 0) {\r\n    throw core.SyntaxError\r\n  }\r\n  const source = state.blockStack.pop()\r\n  const sourceLine = state.lines[source]\r\n  if (sourceLine.type === types.ForLoop ||\r\n              sourceLine.type === types.WhileLoop ||\r\n              sourceLine.type === types.RepeatLoop) {\r\n    if (sourceLine.type === types.ForLoop) {\r\n      increment(state.mem, sourceLine.variable, sourceLine.step !== null ? sourceLine.step : core.ONE)\r\n      if (operation.isTruthy(expression.evaluate(operation.binaryOperation(sourceLine.variable, '<=', sourceLine.end), state.mem))) {\r\n        state.blockStack.push(source)\r\n        state.i = source\r\n      }\r\n    } else if (operation.isTruthy(expression.evaluate(sourceLine.value, state.mem))) {\r\n      state.blockStack.push(source)\r\n      state.i = source\r\n    }\r\n  } else if (sourceLine.type === types.ThenStatement ||\r\n                  sourceLine.type === types.ElseStatement) {\r\n    // empty\r\n  } else {\r\n    throw core.libError(`impossibleEndFrom'${sourceLine.type}`)\r\n  }\r\n}\r\n\r\nstatementOf[types.PauseStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.LabelStatement] = (line, state) => {\r\n}\r\n\r\nstatementOf[types.GotoStatement] = (line, state) => {\r\n  state.searchLabel = line.location\r\n  state.i = -1\r\n}\r\n\r\nstatementOf[types.IncrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.ONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '<=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.DecrementSkip] = (line, state) => {\r\n  if (line.variable === null || line.end === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  increment(state.mem, line.variable, core.MINUSONE)\r\n  state.incrementDecrementResult = operation.isTruthy(expression.evaluate(operation.binaryOperation(line.variable, '>=', line.end), state.mem))\r\n}\r\n\r\nstatementOf[types.MenuStatement] = (line, state) => {\r\n  if (line.title === null || line.choices.length === 0 || line.choices.length > 7) {\r\n    throw core.ArgumentError\r\n  }\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.title, state.mem), true), state.io)\r\n  line.choices.forEach((choice, idx) => {\r\n    iolib.stdout(`${idx + 1}:${operation.valueToString(choice.option)}`, state.io)\r\n  })\r\n  iolib.onStdin(input => {\r\n    const digit = operation.parseDigit(input)\r\n    if (digit === undefined || digit === 0 || digit > line.choices.length) {\r\n      return true\r\n    }\r\n    state.searchLabel = line.choices[digit - 1].location\r\n    state.i = 0\r\n    state.resume()\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n\r\nstatementOf[types.ProgramStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ReturnStatement] = (line, state) => {\r\n  // TODO interaction with subprograms\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.StopStatement] = (line, state) => {\r\n  return signal.DONE\r\n}\r\n\r\nstatementOf[types.DelVarStatement] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  operation.deleteVariable(state.mem, line.variable)\r\n}\r\n\r\nstatementOf[types.GraphStyleStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.OpenLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ExecLibStatement] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- I/O -----\r\n\r\nstatementOf[types.Display] = (line, state) => {\r\n  if (line.value !== null) {\r\n    iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n  }\r\n}\r\n\r\nstatementOf[types.Input] = (line, state) => {\r\n  if (line.variable === null) {\r\n    if (line.text !== null) {\r\n      throw core.ArgumentError\r\n    }\r\n    throw core.UnimplementedError\r\n  }\r\n  let text = '?'\r\n  if (line.text !== null) {\r\n    text = operation.valueToString(expression.evaluate(line.text, state.mem), true)\r\n  }\r\n  return getInput(text, line.variable, state, true)\r\n}\r\n\r\nstatementOf[types.Prompt] = (line, state) => {\r\n  if (line.variable === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const text = operation.variableToString(line.variable)\r\n  return getInput(`${text}=?`, line.variable, state, false)\r\n}\r\n\r\nstatementOf[types.DispGraph] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.DispTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Output] = (line, state) => {\r\n  if (line.row === null || line.column === null || line.value === null) {\r\n    throw core.ArgumentError\r\n  }\r\n  const row = expression.evaluate(line.row, state.mem)\r\n  const column = expression.evaluate(line.column, state.mem)\r\n  if (row.type !== types.NUMBER || column.type !== types.NUMBER) {\r\n    throw core.DataTypeError\r\n  }\r\n  if (row.float < 1 || row.float > state.rows || column.float < 1 || column.float > state.columns) {\r\n    throw core.DomainError\r\n  }\r\n  // TODO: respect rows and columns\r\n  iolib.stdout(operation.valueToString(expression.evaluate(line.value, state.mem)), state.io)\r\n}\r\n\r\nstatementOf[types.ClrHome] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.ClrTable] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.GetCalc] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Get] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\nstatementOf[types.Send] = (line, state) => {\r\n  throw core.UnimplementedError\r\n}\r\n\r\n// ----- Helpers -----\r\n\r\nfunction increment (mem, variable, step) {\r\n  if (!operation.hasVariable(mem, variable)) {\r\n    throw core.UndefinedError\r\n  }\r\n  operation.assignVariable(mem, variable, expression.evaluate({\r\n    type: types.BINARY,\r\n    operator: '+',\r\n    left: variable,\r\n    right: step\r\n  }, mem), mem)\r\n}\r\n\r\nfunction getInput (text, variable, state, allowStringLiterals) {\r\n  iolib.stdout(text, state.io, false)\r\n  iolib.onStdin(input => {\r\n    if (input === null || input === undefined || input === '') {\r\n      return true\r\n    }\r\n    state.resume(() => {\r\n      iolib.stdout(input, state.io)\r\n\r\n      let value\r\n      if (variable.type === types.STRINGVARIABLE && allowStringLiterals) {\r\n        value = { type: types.STRING, chars: input }\r\n      } else {\r\n        value = expression.evaluate(parser.parseExpression(input), state.mem)\r\n      }\r\n\r\n      // special case where a prompt for a numerical variable is interpreted as a list variable\r\n      if (variable.type === types.VARIABLE && value.type === types.LIST) {\r\n        variable = { type: types.LISTVARIABLE, name: `List${variable.name}`, custom: true }\r\n      }\r\n\r\n      operation.assignVariable(state.mem, variable, value)\r\n    })\r\n  }, state.io)\r\n  return signal.SUSPEND\r\n}\r\n","// daemon\r\n// ======\r\n\r\nimport * as signal from '../common/signal'\r\n\r\nconst loopMessageName = 'daemon-loop'\r\nconst exceptionName = 'daemon-exception'\r\nconst minimumDelay = 0.001 // 1 microsecond\r\nconst tasks = {}\r\nconst exceptions = []\r\nlet running = false\r\nlet nextTaskId = 0\r\nconst maxExceptions = 1000\r\n\r\nconst eventTarget = document.createTextNode(null)\r\n\r\nfunction fireEvent (name) {\r\n  const event = new Event(name)\r\n  eventTarget.dispatchEvent(event)\r\n}\r\n\r\nfunction startIfNeeded () {\r\n  if (running === false) {\r\n    running = true\r\n    fireEvent('start')\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n}\r\n\r\nfunction createTask (func, delay, runOnce) {\r\n  const taskId = nextTaskId++\r\n\r\n  console.debug(`[Task ${taskId}] Start`)\r\n\r\n  tasks[taskId] = {\r\n    func: func,\r\n    delay: Math.max(delay, minimumDelay),\r\n    lastRun: undefined,\r\n    runOnce: runOnce,\r\n    stopOnException: true,\r\n    suspended: false\r\n  }\r\n\r\n  startIfNeeded()\r\n  return taskId\r\n}\r\n\r\nfunction resumeTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Resume`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    console.debug(tasks)\r\n    throw new Error(`Error resuming: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = false\r\n  startIfNeeded()\r\n};\r\n\r\nfunction suspendTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Suspend`)\r\n\r\n  if (!(taskId in tasks)) {\r\n    throw new Error(`Error suspending: task '${taskId}' not found`)\r\n  }\r\n  tasks[taskId].suspended = true\r\n};\r\n\r\nfunction deleteTask (taskId) {\r\n  console.debug(`[Task ${taskId}] Stop`)\r\n  delete tasks[taskId]\r\n};\r\n\r\nfunction handleMessage (event) {\r\n  if (!(event.source === window && event.data === loopMessageName)) {\r\n    return\r\n  }\r\n\r\n  event.stopPropagation()\r\n\r\n  const time = performance.now()\r\n  const taskIds = Object.keys(tasks)\r\n  let runningTaskCount = 0\r\n  let suspendedTaskCount = 0\r\n\r\n  taskIds.forEach(taskId => {\r\n    const task = tasks[taskId]\r\n\r\n    let runs\r\n    if (task.suspended === true) {\r\n      runs = 0\r\n      suspendedTaskCount += 1\r\n    } else {\r\n      runningTaskCount += 1\r\n\r\n      if (task.lastRun === undefined || task.runOnce) {\r\n        runs = 1\r\n      } else {\r\n        const timeSinceRun = time - task.lastRun\r\n        runs = Math.floor(timeSinceRun / task.delay)\r\n      }\r\n    }\r\n\r\n    if (runs > 0) {\r\n      task.lastRun = time\r\n    }\r\n\r\n    for (let i = 0; i < runs; i++) {\r\n      let result\r\n\r\n      try {\r\n        result = task.func()\r\n      } catch (ex) {\r\n        result = signal.FAULTED\r\n\r\n        if (exceptions.length < maxExceptions) {\r\n          exceptions.push(ex)\r\n          window.postMessage(exceptionName, '*')\r\n        }\r\n      }\r\n\r\n      if (result === signal.DONE ||\r\n                task.runOnce ||\r\n                (task.stopOnException && result === signal.FAULTED)) {\r\n        deleteTask(taskId)\r\n        runningTaskCount -= 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.SUSPEND) {\r\n        suspendTask(taskId)\r\n        runningTaskCount -= 1\r\n        suspendedTaskCount += 1\r\n        break\r\n      }\r\n\r\n      if (result === signal.YIELD) {\r\n        break\r\n      }\r\n    }\r\n  })\r\n\r\n  if (runningTaskCount === 0) {\r\n    running = false\r\n    if (suspendedTaskCount > 0) {\r\n      fireEvent('suspend')\r\n    } else {\r\n      fireEvent('stop')\r\n    }\r\n  } else {\r\n    window.postMessage(loopMessageName, '*')\r\n  }\r\n};\r\n\r\nfunction handleException (event) {\r\n  if (!(event.source === window && event.data === exceptionName)) {\r\n    return\r\n  }\r\n\r\n  if (exceptions.length > 0) {\r\n    throw exceptions.pop()\r\n  }\r\n}\r\n\r\nwindow.addEventListener('message', handleMessage, true)\r\nwindow.addEventListener('message', handleException, true)\r\n\r\nexport function setTinyInterval (func, delay) {\r\n  return createTask(func, delay)\r\n}\r\n\r\nexport function clearTinyInterval (tinyIntervalID) {\r\n  deleteTask(tinyIntervalID)\r\n}\r\n\r\nexport function resumeTinyInterval (tinyIntervalID) {\r\n  resumeTask(tinyIntervalID)\r\n}\r\n\r\nexport function setTinyTimeout (func, delay) {\r\n  return createTask(func, delay, true)\r\n}\r\n\r\nexport function clearTinyTimeout (tinyTimeoutID) {\r\n  deleteTask(tinyTimeoutID)\r\n}\r\n\r\nexport const on = eventTarget.addEventListener.bind(eventTarget)\r\nexport const off = eventTarget.removeEventListener.bind(eventTarget)\r\n// export const dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget)\r\n","// runtime\r\n// =======\r\n\r\nimport * as core from '../common/core'\r\nimport * as signal from '../common/signal'\r\nimport * as types from '../common/types'\r\nimport * as statement from '../evaluate/statement'\r\nimport * as iolib from '../evaluate/iolib'\r\nimport * as daemon from './daemon'\r\n\r\nexport function run (lines, options = {}) {\r\n  let sourceLines = []\r\n  if (options.source !== undefined) {\r\n    if (Array.isArray(options.source)) {\r\n      sourceLines = options.source\r\n    } else {\r\n      sourceLines = options.source.split(/\\r?\\n/)\r\n    }\r\n  }\r\n\r\n  let frequencyMs = 1\r\n  if (options.frequencyMs !== undefined) {\r\n    frequencyMs = options.frequencyMs\r\n  }\r\n\r\n  const state = {\r\n    mem: core.newMem(),\r\n\r\n    resume: undefined,\r\n    resumeCallback: undefined,\r\n\r\n    debug: options.debug === true,\r\n    sourceLines: sourceLines,\r\n\r\n    searchLabel: undefined,\r\n    ifResult: undefined,\r\n    incrementDecrementResult: undefined,\r\n\r\n    maximumLines: 50,\r\n    linesRun: 0,\r\n\r\n    blockStack: [],\r\n    falsyStackHeight: undefined,\r\n    falsyBlockPreviousIf: undefined,\r\n\r\n    i: 0,\r\n    lines: lines,\r\n\r\n    callback: options.callback,\r\n    frequencyMs: frequencyMs,\r\n\r\n    status: 'pending',\r\n\r\n    rows: 8,\r\n    columns: 16,\r\n\r\n    io: {\r\n      elem: options.elem,\r\n      input: options.input,\r\n      stdin: options.stdin,\r\n      includeErrors: options.includeErrors === undefined || options.includeErrors === true,\r\n      includeLibErrors: options.includeLibErrors === undefined || options.includeLibErrors === true,\r\n      includeLineNumbers: options.includeLineNumbers === undefined || options.includeLineNumbers === true,\r\n      includeSource: options.includeSource === undefined || options.includeSource === true\r\n    }\r\n  }\r\n\r\n  const taskId = daemon.setTinyInterval(() => runLoop(state), state.frequencyMs)\r\n  state.resume = (callback) => {\r\n    state.resumeCallback = callback\r\n    daemon.resumeTinyInterval(taskId)\r\n  }\r\n\r\n  return {\r\n    getStatus: () => state.status,\r\n    isActive: () => state.status === 'pending' || state.status === 'running',\r\n    stop: () => {\r\n      iolib.cleanup(state.io)\r\n      daemon.clearTinyInterval(taskId)\r\n    }\r\n  }\r\n}\r\n\r\nfunction runLoop (state) {\r\n  let result\r\n\r\n  try {\r\n    state.status = 'running'\r\n    result = runLine(state)\r\n  } catch (ex) {\r\n    state.status = 'faulted'\r\n\r\n    if (ex.type === undefined) {\r\n      throw ex\r\n    }\r\n\r\n    if (state.i < state.lines.length && ex.hideSource !== true) {\r\n      let source = state.lines[state.i].source\r\n      if (state.sourceLines !== undefined) {\r\n        source = state.sourceLines[state.i]\r\n      }\r\n      ex.source = {\r\n        index: state.i,\r\n        line: source\r\n      }\r\n    }\r\n\r\n    iolib.stderr(ex, state.io)\r\n    result = signal.DONE\r\n  }\r\n\r\n  if (result === signal.DONE) {\r\n    if (state.status !== 'faulted') {\r\n      state.status = 'done'\r\n    }\r\n\r\n    if (state.callback !== undefined) {\r\n      setTimeout(state.callback, 0)\r\n    }\r\n  } else {\r\n    state.i += 1\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction runLine (state) {\r\n  if (state.debug) {\r\n    console.debug({\r\n      Line: state.i,\r\n      searchLabel: state.searchLabel,\r\n      ifResult: state.ifResult,\r\n      blockStack: state.blockStack,\r\n      falsyStackHeight: state.falsyStackHeight,\r\n      falsyBlockPreviousIf: state.falsyBlockPreviousIf,\r\n      source: state.source,\r\n      mem: state.mem\r\n    })\r\n  }\r\n\r\n  if (state.resumeCallback !== undefined) {\r\n    state.resumeCallback()\r\n    state.resumeCallback = undefined\r\n  }\r\n\r\n  if (state.i >= state.lines.length) {\r\n    if (state.searchLabel !== undefined) {\r\n      throw core.LabelError\r\n    }\r\n\r\n    if (state.ifResult !== undefined || state.incrementDecrementResult !== undefined) {\r\n      throw core.SyntaxError\r\n    }\r\n\r\n    if (state.debug) {\r\n      console.debug(state.mem)\r\n    }\r\n\r\n    return signal.DONE\r\n  }\r\n\r\n  state.linesRun++\r\n\r\n  if (state.linesRun >= state.maximumLines) {\r\n    throw core.libError('maxlines')\r\n  }\r\n\r\n  const line = state.lines[state.i]\r\n  const type = line.type\r\n\r\n  // ----- scan for end -----\r\n\r\n  if (state.falsyStackHeight !== undefined) {\r\n    const lastBlockIndex = state.blockStack[state.blockStack.length - 1]\r\n    const lastBlock = state.lines[lastBlockIndex]\r\n\r\n    if (type === types.EndStatement ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.pop()\r\n\r\n      if (state.blockStack.length < state.falsyStackHeight) {\r\n        state.falsyStackHeight = undefined\r\n      }\r\n    }\r\n\r\n    if (type === types.ForLoop ||\r\n      type === types.RepeatLoop ||\r\n      type === types.WhileLoop ||\r\n      (type === types.ThenStatement && state.falsyBlockPreviousIf === true) ||\r\n      (type === types.ElseStatement && lastBlock.type === types.ThenStatement)) {\r\n      state.blockStack.push(state.i)\r\n    }\r\n\r\n    state.falsyBlockPreviousIf = type === types.IfStatement\r\n    return\r\n  }\r\n\r\n  state.falsyBlockPreviousIf = undefined\r\n\r\n  // ----- search for label -----\r\n\r\n  if (state.searchLabel !== undefined) {\r\n    if (type === types.LabelStatement && line.location === state.searchLabel) {\r\n      state.searchLabel = undefined\r\n    }\r\n\r\n    return\r\n  }\r\n\r\n  // ----- check if result -----\r\n\r\n  if (state.ifResult !== undefined) {\r\n    const ifResultFalse = state.ifResult !== true\r\n    state.ifResult = undefined\r\n\r\n    if (type === types.ThenStatement) {\r\n      state.blockStack.push(state.i)\r\n\r\n      if (ifResultFalse) {\r\n        state.falsyStackHeight = state.blockStack.length\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    if (ifResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- check incrementDecrementResult -----\r\n\r\n  if (state.incrementDecrementResult !== undefined) {\r\n    const incrementDecrementResultFalse = state.incrementDecrementResult !== true\r\n    state.incrementDecrementResult = undefined\r\n\r\n    if (incrementDecrementResultFalse) {\r\n      return\r\n    }\r\n  }\r\n\r\n  // ----- normal execution -----\r\n\r\n  if (line.extra === true) {\r\n    throw core.SyntaxError\r\n  }\r\n  if (line.args === true) {\r\n    throw core.ArgumentError\r\n  }\r\n\r\n  return statement.evaluate(line, state)\r\n}\r\n","// entry point\r\n// ==================\r\n\r\nexport { run } from './run/runtime'\r\nexport { on } from './run/daemon'\r\nexport { parse } from './parse/parser'\r\n"],"sourceRoot":""}